  Package     Version  Build          Channel                                    Size
───────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────

  + dsh-bio     2.0.5  hdfd78af_0     /Users/runner/conda/conda-bld/osx-64      20 MB
  + libcxx     12.0.1  habf9029_0     conda-forge/osx-64                       Cached
  + openjdk  11.0.9.1  hcf210ce_1     conda-forge/osx-64                       169 MB
  + zlib       1.2.11  h7795811_1010  conda-forge/osx-64                       Cached

  Summary:

  Install: 4 packages

  Total download: 189 MB

───────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: dsh-bio-2.0.5-hdfd78af_0.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/dsh-bio_1630639710068/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p


The following NEW packages will be INSTALLED:

    dsh-bio: 2.0.5-hdfd78af_0     local      
    libcxx:  12.0.1-habf9029_0    conda-forge
    openjdk: 11.0.9.1-hcf210ce_1  conda-forge
    zlib:    1.2.11-h7795811_1010 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/dsh-bio_1630639710068/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p
export SRC_DIR=/Users/runner/conda/conda-bld/dsh-bio_1630639710068/test_tmp
usage:
dsh-bio [command] [args]

commands:
  compress-bed    compress features in BED format to splittable bgzf or bzip2 compression codecs
  compress-fasta    compress sequences in FASTA format to splittable bgzf or bzip2 compression codecs
  compress-fastq    compress sequences in FASTQ format to splittable bgzf or bzip2 compression codecs
  compress-gaf    compress alignments in GAF format to splittable bgzf or bzip2 compression codecs
  compress-gfa1    compress assembly in GFA 1.0 format to splittable bgzf or bzip2 compression codecs
  compress-gfa2    compress assembly in GFA 2.0 format to splittable bgzf or bzip2 compression codecs
  compress-gff3    compress features in GFF3 format to splittable bgzf or bzip2 compression codecs
  compress-paf    compress alignments in PAF format to splittable bgzf or bzip2 compression codecs
  compress-sam    compress alignments in SAM format to splittable bgzf or bzip2 compression codecs
  compress-vcf    compress variants and genotypes in VCF format to splittable bgzf or bzip2 compression codecs
  create-sequence-dictionary    create a SequenceDictionary from DNA sequences in FASTA format
  disinterleave-fastq    convert interleaved FASTQ format into first and second sequence files in FASTQ format
  downsample-fastq    downsample sequences from files in FASTQ format
  downsample-interleaved-fastq    downsample sequences from a file in interleaved FASTQ format
  export-segments    export assembly segment sequences in GFA 1.0 format to FASTA format
  extract-fasta    extract matching sequences in FASTA format
  extract-fastq    extract matching sequences in FASTQ format
  extract-fastq-by-length    extract sequences in FASTQ format with a range of lengths
  fasta-to-fastq    convert DNA sequences in FASTA format to FASTQ format
  fastq-description    output description lines from sequences in FASTQ format
  fastq-sequence-length    output sequence lengths from sequences in FASTQ format
  fastq-to-fasta    convert sequences in FASTQ format to FASTA format
  filter-bed    filter features in BED format
  filter-fasta    filter sequences in FASTA format
  filter-fastq    filter sequences in FASTQ format
  filter-gaf    filter alignments in GAF format
  filter-gfa1    filter assembly in GFA 1.0 format
  filter-gfa2    filter assembly in GFA 2.0 format
  filter-gff3    filter features in GFF3 format
  filter-paf    filter alignments in PAF format
  filter-sam    filter alignments in SAM format
  filter-vcf    filter variants in VCF format
  gfa1-to-gfa2    convert GFA 1.0 format to GFA 2.0 format
  identify-gfa1    add identifier annotation to records in GFA 1.0 format
  interleave-fastq    convert first and second sequence files in FASTQ format to interleaved FASTQ format
  reassemble-paths    reassemble paths in GFA 1.0 format from traversal records
  remap-dbsnp    remap DB Type=String flags in VCF format to DB Type=Flag and dbsnp Type=String fields
  remap-phase-set    remap PS Type=String phase set ids in VCF format to PS Type=Integer
  rename-bed-references    rename references in BED files
  rename-gff3-references    rename references in GFF3 files
  rename-vcf-references    rename references in VCF files
  split-bed    split files in BED format
  split-fasta    split files in FASTA format
  split-fastq    split files in FASTQ format
  split-gaf    split files in GAF format
  split-gff3    split files in GFF3 format
  split-interleaved-fastq    split files in interleaved FASTQ format
  split-paf    split files in PAF format
  split-sam    split files in SAM format
  split-vcf    split files in VCF format
  traverse-paths    traverse paths in GFA 1.0 format
  truncate-fasta    truncate sequences in FASTA format
  truncate-paths    truncate paths in GFA 1.0 format
  variant-table-to-vcf    convert Ensembl variant table to VCF format
  vcf-pedigree    extract a pedigree from VCF format
  vcf-samples    extract samples from VCF format

arguments:
   -a, --about  display about message [optional]
   -v, --version  display about message [optional]
   -h, --help  display help message [optional]
usage:
dsh-split-bed -r 100 -i foo.bed.gz

arguments:
   -a, --about  display about message [optional]
   -h, --help  display help message [optional]
   -i, --input-file [class java.io.File]  input BED file, default stdin [optional]
   -b, --bytes [class java.lang.String]  split input file at next record after each n bytes [optional]
   -r, --records [class java.lang.Long]  split input file after each n records [optional]
   -p, --prefix [class java.lang.String]  output file prefix [optional]
   -d, --left-pad [class java.lang.Integer]  left pad split index in output file name [optional]
   -s, --suffix [class java.lang.String]  output file suffix, e.g. .bed.gz [optional]

Resource usage statistics from testing dsh-bio:
   Process count: 2
   CPU time: Sys=0:00:00.0, User=0:00:00.0
   Memory: 10.3M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: dsh-bio-2.0.5-hdfd78af_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


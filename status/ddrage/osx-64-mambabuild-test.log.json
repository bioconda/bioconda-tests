Updating build index: /Users/runner/conda/conda-bld

TEST START: ddrage-1.7.1-py_0.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpptpvhm5o/info/recipe/conda_build_config.yaml
  Package              Version  Build               Channel                                    Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + ca-certificates  2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + certifi          2021.5.30  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + cycler              0.10.0  py_2                conda-forge/noarch                         9 KB
  + ddrage               1.7.1  py_0                /Users/runner/conda/conda-bld/osx-64     226 KB
  + dinopy               2.2.0  py39hcf0ab7e_2      bioconda/osx-64                          892 KB
  + freetype            2.10.4  h4cff582_1          conda-forge/osx-64                       890 KB
  + jbig                   2.1  h0d85af4_2003       conda-forge/osx-64                        42 KB
  + jpeg                    9d  hbcb3906_0          conda-forge/osx-64                       250 KB
  + kiwisolver           1.3.2  py39hf018cea_0      conda-forge/osx-64                        59 KB
  + lcms2                 2.12  h577c468_0          conda-forge/osx-64                       404 KB
  + lerc                 2.2.1  h046ec9c_0          conda-forge/osx-64                       164 KB
  + libblas              3.9.0  11_osx64_openblas   conda-forge/osx-64                        12 KB
  + libcblas             3.9.0  11_osx64_openblas   conda-forge/osx-64                        11 KB
  + libcxx              12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libdeflate             1.7  h35c211d_5          conda-forge/osx-64                        67 KB
  + libffi                 3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + libgfortran          5.0.0  9_3_0_h6c81a4c_23   conda-forge/osx-64                        19 KB
  + libgfortran5         9.3.0  h6c81a4c_23         conda-forge/osx-64                         2 MB
  + liblapack            3.9.0  11_osx64_openblas   conda-forge/osx-64                        11 KB
  + libllvm11           11.1.0  hd011deb_2          conda-forge/osx-64                        22 MB
  + libopenblas         0.3.17  openmp_h3351f45_1   conda-forge/osx-64                         9 MB
  + libpng              1.6.37  h7cec526_2          conda-forge/osx-64                       313 KB
  + libtiff              4.3.0  h1167814_1          conda-forge/osx-64                       621 KB
  + libwebp-base         1.2.1  h0d85af4_0          conda-forge/osx-64                       692 KB
  + llvm-openmp         12.0.1  hda6cdc1_1          conda-forge/osx-64                       Cached
  + llvmlite            0.37.0  py39h798a4f4_0      conda-forge/osx-64                       238 KB
  + lz4-c                1.9.3  he49afe7_1          conda-forge/osx-64                       Cached
  + matplotlib-base      3.4.3  py39hb07454d_0      conda-forge/osx-64                         7 MB
  + ncurses                6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + numba               0.54.0  py39h58500fb_0      conda-forge/osx-64                         4 MB
  + numpy               1.20.3  py39h7eed0ac_1      conda-forge/osx-64                         5 MB
  + olefile               0.46  pyh9f0ad1d_1        conda-forge/noarch                        32 KB
  + openjpeg             2.4.0  h6e7aa92_1          conda-forge/osx-64                       374 KB
  + openssl             1.1.1k  h0d85af4_1          conda-forge/osx-64                       Cached
  + pandas               1.3.2  py39h4d6be9b_0      conda-forge/osx-64                        12 MB
  + patsy                0.5.1  py_0                conda-forge/noarch                       187 KB
  + pillow               8.3.1  py39he9bb72f_0      conda-forge/osx-64                       660 KB
  + pip                 21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + pyparsing            2.4.7  pyh9f0ad1d_0        conda-forge/noarch                        60 KB
  + python               3.9.7  hd187cdc_0_cpython  conda-forge/osx-64                       Cached
  + python-dateutil      2.8.2  pyhd8ed1ab_0        conda-forge/noarch                       240 KB
  + python_abi             3.9  2_cp39              conda-forge/osx-64                       Cached
  + pytz                2021.1  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + pyyaml               5.4.1  py39h89e85a6_1      conda-forge/osx-64                       Cached
  + readline               8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + scipy                1.7.1  py39h056f1c0_0      conda-forge/osx-64                        20 MB
  + seaborn             0.11.2  hd8ed1ab_0          conda-forge/noarch                         4 KB
  + seaborn-base        0.11.2  pyhd8ed1ab_0        conda-forge/noarch                       223 KB
  + setuptools          57.4.0  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + six                 1.16.0  pyh6c4a22f_0        conda-forge/noarch                       Cached
  + sqlite              3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + statsmodels         0.12.2  py39h329c335_0      conda-forge/osx-64                        11 MB
  + tk                  8.6.11  h5dbffcc_1          conda-forge/osx-64                       Cached
  + tornado                6.1  py39h89e85a6_1      conda-forge/osx-64                       645 KB
  + tzdata               2021a  he74cb21_1          conda-forge/noarch                       Cached
  + wheel               0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                   5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + yaml                 0.2.5  haf1e3a3_0          conda-forge/osx-64                       Cached
  + zlib                1.2.11  h7795811_1010       conda-forge/osx-64                       Cached
  + zstd                 1.5.0  h582d3a0_0          conda-forge/osx-64                       Cached

  Summary:

  Install: 60 packages

  Total download: 99 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/ddrage_1630669109453/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    ca-certificates: 2021.5.30-h033912b_0     conda-forge
    certifi:         2021.5.30-py39h6e9494a_0 conda-forge
    cycler:          0.10.0-py_2              conda-forge
    ddrage:          1.7.1-py_0               local      
    dinopy:          2.2.0-py39hcf0ab7e_2     bioconda   
    freetype:        2.10.4-h4cff582_1        conda-forge
    jbig:            2.1-h0d85af4_2003        conda-forge
    jpeg:            9d-hbcb3906_0            conda-forge
    kiwisolver:      1.3.2-py39hf018cea_0     conda-forge
    lcms2:           2.12-h577c468_0          conda-forge
    lerc:            2.2.1-h046ec9c_0         conda-forge
    libblas:         3.9.0-11_osx64_openblas  conda-forge
    libcblas:        3.9.0-11_osx64_openblas  conda-forge
    libcxx:          12.0.1-habf9029_0        conda-forge
    libdeflate:      1.7-h35c211d_5           conda-forge
    libffi:          3.3-h046ec9c_2           conda-forge
    libgfortran:     5.0.0-9_3_0_h6c81a4c_23  conda-forge
    libgfortran5:    9.3.0-h6c81a4c_23        conda-forge
    liblapack:       3.9.0-11_osx64_openblas  conda-forge
    libllvm11:       11.1.0-hd011deb_2        conda-forge
    libopenblas:     0.3.17-openmp_h3351f45_1 conda-forge
    libpng:          1.6.37-h7cec526_2        conda-forge
    libtiff:         4.3.0-h1167814_1         conda-forge
    libwebp-base:    1.2.1-h0d85af4_0         conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1        conda-forge
    llvmlite:        0.37.0-py39h798a4f4_0    conda-forge
    lz4-c:           1.9.3-he49afe7_1         conda-forge
    matplotlib-base: 3.4.3-py39hb07454d_0     conda-forge
    ncurses:         6.2-h2e338ed_4           conda-forge
    numba:           0.54.0-py39h58500fb_0    conda-forge
    numpy:           1.20.3-py39h7eed0ac_1    conda-forge
    olefile:         0.46-pyh9f0ad1d_1        conda-forge
    openjpeg:        2.4.0-h6e7aa92_1         conda-forge
    openssl:         1.1.1k-h0d85af4_1        conda-forge
    pandas:          1.3.2-py39h4d6be9b_0     conda-forge
    patsy:           0.5.1-py_0               conda-forge
    pillow:          8.3.1-py39he9bb72f_0     conda-forge
    pip:             21.2.4-pyhd8ed1ab_0      conda-forge
    pyparsing:       2.4.7-pyh9f0ad1d_0       conda-forge
    python:          3.9.7-hd187cdc_0_cpython conda-forge
    python-dateutil: 2.8.2-pyhd8ed1ab_0       conda-forge
    python_abi:      3.9-2_cp39               conda-forge
    pytz:            2021.1-pyhd8ed1ab_0      conda-forge
    pyyaml:          5.4.1-py39h89e85a6_1     conda-forge
    readline:        8.1-h05e3726_0           conda-forge
    scipy:           1.7.1-py39h056f1c0_0     conda-forge
    seaborn:         0.11.2-hd8ed1ab_0        conda-forge
    seaborn-base:    0.11.2-pyhd8ed1ab_0      conda-forge
    setuptools:      57.4.0-py39h6e9494a_0    conda-forge
    six:             1.16.0-pyh6c4a22f_0      conda-forge
    sqlite:          3.36.0-h23a322b_0        conda-forge
    statsmodels:     0.12.2-py39h329c335_0    conda-forge
    tk:              8.6.11-h5dbffcc_1        conda-forge
    tornado:         6.1-py39h89e85a6_1       conda-forge
    tzdata:          2021a-he74cb21_1         conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1      conda-forge
    xz:              5.2.5-haf1e3a3_1         conda-forge
    yaml:            0.2.5-haf1e3a3_0         conda-forge
    zlib:            1.2.11-h7795811_1010     conda-forge
    zstd:            1.5.0-h582d3a0_0         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/ddrage_1630669109453/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/Users/runner/conda/conda-bld/ddrage_1630669109453/test_tmp
import: 'ddrage'
import: 'ddrage.barcode_handler'
import: 'ddrage.tools'
import: 'ddrage'
import: 'ddrage.barcode_handler'
import: 'ddrage.tools'
usage: ddrage [-h] [--name NAME] [-o OUTPUT_PATH_PREFIX] [-n NR_INDIVIDUALS]
              [-l LOCI] [-r READ_LENGTH] [-c COV] [--hrl-number HRL_NUMBER]
              [--no-singletons] [--diversity DIVERSITY]
              [--gc-content GC_CONTENT] [-q QUALITY_MODEL] [--single-end]
              [--overlap OVERLAP] [--multiple-p7-barcodes]
              [--coverage-model COVERAGE_MODEL] [--BBD-alpha BBD_ALPHA]
              [--BBD-beta BBD_BETA] [--max-pcr-copies MAX_PCR_COPY_NR]
              [--hrl-max-cov HRL_MAX_COV] [-d DBR] [--p5-overhang P5_OVERHANG]
              [--p7-overhang P7_OVERHANG] [--p5-rec-site P5_REC_SITE]
              [--p7-rec-site P7_REC_SITE] [-b BARCODE_SET]
              [--event-probabilities PROB_COMMON PROB_DROPOUT PROB_MUTATION]
              [--mutation-type-probabilities PROB_SNP PROB_INSERTION PROB_DELETION PROB_P5_NA_ALTERNATIVE PROB_P7_NA_ALTERNATIVE PROB_P5_NA_DROPOUT PROB_P7_NA_DROPOUT]
              [--prob-heterozygous PROB_HETEROZYGOCITY]
              [--prob-incomplete-digestion PROB_INCOMPLETE_DIGESTION]
              [--rate-incomplete-digestion RATE_INCOMPLETE_DIGESTION]
              [--prob-pcr-copy PROB_PCR_COPY]
              [--hrl-pcr-copies HRL_PCR_COPIES]
              [--singleton-pcr-copies SINGLETON_PCR_COPIES]
              [-e PROB_SEQ_ERROR] [-v] [-z] [--get-barcodes] [--DEBUG]
              [--version]

RAGE -- the ddRAD generator -- simulates ddRADseq

optional arguments:
  -h, --help            show this help message and exit
  -v, --verbose         Increase verbosity of output. -v: Show progress of
                        simulation. -vv: Print used parameters after
                        simulation. -vvv: Show details for each simulated
                        locus.
  -z, --zip             Write output as gzipped fastq.
  --get-barcodes        Write copies of the default barcode files into the
                        current folder.
  --DEBUG               Set debug-friendly values for the data set, i.e. all
                        mutation events and mutation types are equally
                        probable.
  --version             Print the version number.

Naming Parameters:
  --name NAME           Name for the data set that will be used in the file
                        name. If none is given, the name 'RAGEdataset' will be
                        used.
  -o OUTPUT_PATH_PREFIX, --output OUTPUT_PATH_PREFIX
                        Prefix of the output path. At this point a folder will
                        be created that contains all output files created by
                        ddRAGE.

Dataset Parameters:
  -n NR_INDIVIDUALS, --nr-individuals NR_INDIVIDUALS
                        Number of individuals in the result. Default: 3
  -l LOCI, --loci LOCI  Number of loci for which reads will be created or path
                        to a FASTA file with predefined fragments. Default: 3
  -r READ_LENGTH, --read-length READ_LENGTH
                        Total sequence length of the reads (including
                        overhang, barcodes, etc.). The officially supported
                        and well tested range is 50-500bp but longer or
                        shorter reads are also possible. Default: 100
  -c COV, --coverage COV
                        Expected coverage that will be created by normal
                        duplication and mutations. The exact coverage value is
                        determined using a probabilistic process. Default: 30
  --hrl-number HRL_NUMBER
                        Number of Highly Repetitive Loci (HRLs) that will be
                        added, given as fraction of total locus size. Example:
                        ``-l 100 --hrl-number 0.1`` for 10 HRLs. Default: 0.05
  --no-singletons       Disable generation of singleton reads.
  --diversity DIVERSITY
                        Parameter for the number of genotypes created per
                        locus. This will be used as parameter for a Poisson
                        distribution. Default: 1.0, increase for more alleles/
                        genotypes per locus.
  --gc-content GC_CONTENT
                        GC content of the generated sequences. Default: 0.5
  -q QUALITY_MODEL, --quality-model QUALITY_MODEL
                        Path to a quality model file (.qmodel.npz). A qmodel
                        file contains a probability vector for each read
                        position. For details, please refer to the
                        documentation.
  --single-end, --se    Write a single-end dataset. Only writes a p5 FASTQ
                        file. Default: False
  --overlap OVERLAP, --ol OVERLAP
                        Overlap factor (between 0 and 1.0) of randomly
                        generated reads. Default 0
  --multiple-p7-barcodes, --combine-p7-bcs
                        Combine individuals with multiple p7 barcodes in one
                        output file. Default: False

Coverage Model Parameters:
  --coverage-model COVERAGE_MODEL
                        Model to choose coverage values. Can be either
                        'poisson' or 'betabinomial'. The Betabinomial model is
                        the default as it can be easily adapted to different
                        coverage profiles using the --BBD-alpha and --BBD-beta
                        parameters.
  --BBD-alpha BBD_ALPHA
                        Alpha parameter of the Beta-binomial distribution.
                        Higher values increase the left tailing of the
                        coverage distribution, if the BBD model is used.
                        Default: 6
  --BBD-beta BBD_BETA   Beta parameter of the Beta-binomial distribution.
                        Higher values increase the right tailing of the
                        coverage distribution, if the BBD model is used.
                        Default: 2
  --max-pcr-copies MAX_PCR_COPY_NR
                        Maximum number of PCR copies that can be created for
                        each finalized (potentially mutated and multiplied)
                        read. Default: 3
  --hrl-max-cov HRL_MAX_COV, --hrl-max-coverage HRL_MAX_COV
                        Maximum coverage for Highly Repetitive Loci (HRLs)
                        (per individual). The minimum coverage is determined
                        as mean + 2 standard deviations of the main coverage
                        generating function. Default: 1000

Read Sequences:
  -d DBR, --dbr DBR     Sequence of the degenerate base region (DBR) in IUPAC
                        ambiguity code. Default: 'NNNNNNMMGGACG'. To not
                        include a DBR sequence use --dbr ''
  --p5-overhang P5_OVERHANG
                        Sequence of the p5 overhang. Default: 'TGCAT'
  --p7-overhang P7_OVERHANG
                        Sequence of the p7 overhang. Default: 'TAC'
  --p5-rec-site P5_REC_SITE
                        Sequence of the p5 recognition site. Default: 'ATGCAT'
  --p7-rec-site P7_REC_SITE
                        Sequence of the p7 recognition site. Default: 'GTCA'
  -b BARCODE_SET, --barcodes BARCODE_SET
                        Path to barcodes file or predefined barcode set like
                        'barcodes', 'small', 'full' or 'full'. Default:
                        'barcodes', a generic population. Take a look at the
                        rage/barcode_handler/barcodes folder for more
                        information.

Simulation Probabilities:
  --event-probabilities PROB_COMMON PROB_DROPOUT PROB_MUTATION
                        Probability profile for the distribution of event
                        types (common, dropout, mutation; in this order).
                        Example: ``python ddrage.py --event-probabilities 0.9
                        0.05 0.05`` -> common 90%, dropout 5%, mutation 5%
                        (Default). Each entry can be given as a float or a
                        string of python code (see example above) which is
                        helpful for small probability values.
  --mutation-type-probabilities PROB_SNP PROB_INSERTION PROB_DELETION PROB_P5_NA_ALTERNATIVE PROB_P7_NA_ALTERNATIVE PROB_P5_NA_DROPOUT PROB_P7_NA_DROPOUT
                        Probability profile for the distribution of mutation
                        types (snp, insertion, deletion, p5 na alternative, p7
                        na alternative, p5 na dropout, p7 na dropout; in this
                        order). Example: ``python ddrage.py --mutation-type-
                        probabilities 0.8999 0.05 0.05 '0.0001*0.001'
                        '0.0001*0.05' '0.0001*0.899' '0.0001*0.05'`` -> snp
                        89.99%, insertion 5%, deletion 5%, p5 na alternative
                        0.00001% , p7 na alternative 0.0005%, p5 na dropout
                        0.00899%, p7 na dropout 0.0005% (Default). Each entry
                        can be given as a float or a string of python code
                        (see example above) which is helpful for small
                        probability values.
  --prob-heterozygous PROB_HETEROZYGOCITY
                        Probability of mutations being heterozygous. Default:
                        0.5
  --prob-incomplete-digestion PROB_INCOMPLETE_DIGESTION
                        Probability of incomplete digestion for an individual
                        at a locus. Default: 0.1
  --rate-incomplete-digestion RATE_INCOMPLETE_DIGESTION
                        Expected fraction of reads that are being lost in the
                        event of Incomplete Digestion. Default: 0.2
  --prob-pcr-copy PROB_PCR_COPY
                        Probability that a (potentially mutated and
                        multiplied) read will receive PCR copies. This
                        influences the simulated PCR copy rate. Default: 0.2
  --hrl-pcr-copies HRL_PCR_COPIES
                        Probability of PCR copies for HRL reads in relation to
                        normal reads. Default: 0.9, i.e. the probability for a
                        PCR copy of a HRL read is prob_pcr_copy * hrl_pcr
                        copies = 0.2 * 0.9 = 0.18
  --singleton-pcr-copies SINGLETON_PCR_COPIES
                        Probability of PCR copies for singleton reads in
                        relation to normal reads. Default: 1/3, i.e. the
                        probability for a PCR copy of a singleton read is
                        prob_pcr_copy * singleton_pcr_copies = 0.2 * (1/3) =
                        0.0666...
  -e PROB_SEQ_ERROR, --prob-seq-error PROB_SEQ_ERROR
                        Probability of sequencing substitution errors.
                        Default: 0.01
usage: randomize_fastq [-h] [--force] [--buffersize BYTES] FASTQ [FASTQ ...]

Randomize the order of reads in a FASTQ file, or jointly in a pair of FASTQ
files for paired reads. Limitations: Input files CANNOT be compressed and MUST
allow random access; input files must use exactly 4 lines per entry, no
comments; the last entry must end with \n.; lines must be separated by \n
(byte value 10).

positional arguments:
  FASTQ                 input and output files; give 1, 2 or 4 filenames:
                        Given 'in.fq', read from it and write to stdout. Given
                        'in.fq out.fq', read from in.fq and write to out.fq.
                        Given 'in1.fq in2.fq out1.fq out2.fq', work on read
                        pairs and be careful with file order (both input files
                        first!)If the output file name ends with '.gz' a
                        gizzepd file is written.

optional arguments:
  -h, --help            show this help message and exit
  --force, -f           overwrite existing output file(s)
  --buffersize BYTES, -b BYTES
                        size of output buffer in bytes [128 MB]. Not used if
                        writing gzipped files.
usage: learn_qmodel [-h] [-1 FASTQ_PATH [FASTQ_PATH ...]]
                    [-2 FASTQ_PATH [FASTQ_PATH ...]] [-o OUTPUT] [-v] [-p]
                    [-s SHOW] [-l LENGTH]

This tool compiles a position-wise distribution of quality values from one or
more FASTQ files. It creates a .qmodel file which can be passed to ddRAGE
using the -q parameter.

optional arguments:
  -h, --help            show this help message and exit
  -1 FASTQ_PATH [FASTQ_PATH ...], -f FASTQ_PATH [FASTQ_PATH ...], --p5 FASTQ_PATH [FASTQ_PATH ...]
                        Path to a forward (p5) read file.
  -2 FASTQ_PATH [FASTQ_PATH ...], -r FASTQ_PATH [FASTQ_PATH ...], --p7 FASTQ_PATH [FASTQ_PATH ...]
                        Path to a reverse (p7) read file.
  -o OUTPUT, --output OUTPUT
                        Output file name/path. Default: custom.qmodel
  -v, --visualize       Visualize the accumulating profile. And create a pdf
                        version of the plot. Only works for read file with
                        more than 10000 reads.
  -p, --plot            Plot the quality distributions as pdf. (Like
                        visualize, but without the progress updates. Only
                        plots the final distributions.)
  -s SHOW, --show SHOW  Read and plot a .qmodel.npz file.
  -l LENGTH, --length LENGTH
                        Maximum read length. All values after this position
                        will be truncated and not become part of the model.
                        Default: 100
usage: remove_annotation [-h] FASTQ [FASTQ ...]

Remove annotation from FASTQ headers. This might be necessary for some
analysis tools, which can not cope with non-standard header formats. The
extracted annotation is written to a file with the name
<filename>_annotation.txt.

positional arguments:
  FASTQ       One or more fastq files from which the annotation is to be
              extracted.

optional arguments:
  -h, --help  show this help message and exit
usage: split_by_p7_barcode [-h] [-f] p5_file p7_file

Split a multi-barcode file created by ddRAGE p7 barcode. Output files are
written into the current folder.

positional arguments:
  p5_file      Path to forward read file.
  p7_file      Path to reverse read file.

optional arguments:
  -h, --help   show this help message and exit
  -f, --force  Overwrite existing files when creating the output.

Resource usage statistics from testing ddrage:
   Process count: 4
   CPU time: Sys=0:00:00.7, User=0:00:01.9
   Memory: 102.0M
   Disk usage: 20B
   Time elapsed: 0:00:30.9


TEST END: ddrage-1.7.1-py_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


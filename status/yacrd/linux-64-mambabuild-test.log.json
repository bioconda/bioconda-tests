  Package          Version  Build          Channel                                   Size
───────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge    conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu          conda-forge/linux-64                    Cached
  + bzip2            1.0.8  h7f98852_4     conda-forge/linux-64                    Cached
  + libgcc-ng       11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + xz               5.2.5  h516909a_1     conda-forge/linux-64                    Cached
  + yacrd            0.6.2  h82fb495_2     /home/vsts/conda/conda-bld/linux-64       1 MB
  + zlib            1.2.11  h516909a_1010  conda-forge/linux-64                    Cached

  Summary:

  Install: 8 packages

  Total download: 1 MB

───────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: yacrd-0.6.2-h82fb495_2.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/yacrd_1630694168287/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge      conda-forge
    _openmp_mutex: 4.5-1_gnu            conda-forge
    bzip2:         1.0.8-h7f98852_4     conda-forge
    libgcc-ng:     11.1.0-hc902ee8_8    conda-forge
    libgomp:       11.1.0-hc902ee8_8    conda-forge
    xz:            5.2.5-h516909a_1     conda-forge
    yacrd:         0.6.2-h82fb495_2     local      
    zlib:          1.2.11-h516909a_1010 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/yacrd_1630694168287/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh
export SRC_DIR=/home/vsts/conda/conda-bld/yacrd_1630694168287/test_tmp
yacrd 0.6.2 Ivysaur
Pierre Marijon <pmarijon@mpi-inf.mpg.de>

Yacrd use overlap between reads, to detect 'good' and 'bad' region,
a region with coverage over the threshold is 'good' others are 'bad'.
If read has a 'bad' region in middle this reads is mark as 'Chimeric'.
If the ratio of 'bad' region length on total read length is larger than threshold this reads is mark
as 'Not_covered'.

Yacrd can make some other actions:
- filter: for sequence or overlap file, record with reads marked as Chimeric or NotCovered isn't
written in the output
- extract: for sequence or overlap file, record contains reads marked as Chimeric or NotCovered is
written in the output
- split: for sequence file bad region in the middle of reads are removed, NotCovered read is removed
- scrubb: for sequence file all bad region are removed, NotCovered read is removed

USAGE:
    yacrd [OPTIONS] --input <input> --output <output> [SUBCOMMAND]

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

OPTIONS:
    -c, --coverage <coverage>
            if coverage reach this value region is mark as bad [default: 0]

    -i, --input <input>
            path to input file overlap (.paf|.m4|.mhap) or yacrd report (.yacrd), format is
            autodetect and compression input is allowed (gz|bzip2|lzma)

    -n, --not-coverage <not-coverage>
            if the ratio of bad region length on total length is lower than this value, read is
            marked as NotCovered [default: 0.8]

    -d, --ondisk <ondisk>
            yacrd switches to 'ondisk' mode which will reduce memory usage but increase computation
            time. The value passed as a parameter is used as a prefix for the temporary files
            created by yacrd. Be careful if the prefix contains path separators (`/` for unix or `\`
            for windows) this folder will be deleted

        --ondisk-buffer-size <ondisk-buffer-size>
            with the default value yacrd in 'ondisk' mode use around 1 GBytes, you can increase to
            reduce runtime but increase memory usage [default: 64000000]

    -o, --output <output>                            path output file

SUBCOMMANDS:
    extract    Record mark as chimeric or NotCovered is extract
    filter     Record mark as chimeric or NotCovered is filter
    help       Prints this message or the help of the given subcommand(s)
    scrubb     All bad region of read is removed
    split      Record mark as chimeric or NotCovered is split

Resource usage statistics from testing yacrd:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: yacrd-0.6.2-h82fb495_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


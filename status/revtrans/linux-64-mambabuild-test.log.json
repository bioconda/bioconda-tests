Updating build index: /home/vsts/conda/conda-bld

TEST START: revtrans-1.4-py27_0.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /tmp/tmp5or4fzz0/info/recipe/conda_build_config.yaml
  Package                Version  Build                  Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex            0.1  conda_forge            conda-forge/linux-64                    Cached
  + _openmp_mutex            4.5  1_gnu                  conda-forge/linux-64                    Cached
  + ca-certificates    2021.5.30  ha878542_0             conda-forge/linux-64                    Cached
  + certifi           2019.11.28  py27h8c360ce_1         conda-forge/linux-64                    149 KB
  + ld_impl_linux-64      2.36.1  hea4e1c9_2             conda-forge/linux-64                    Cached
  + libffi                 3.2.1  he1b5a44_1007          conda-forge/linux-64                     47 KB
  + libgcc-ng             11.1.0  hc902ee8_8             conda-forge/linux-64                    Cached
  + libgomp               11.1.0  hc902ee8_8             conda-forge/linux-64                    Cached
  + libstdcxx-ng          11.1.0  h56837e0_8             conda-forge/linux-64                    Cached
  + ncurses                  6.2  h58526e2_4             conda-forge/linux-64                    Cached
  + openssl               1.1.1l  h7f98852_0             conda-forge/linux-64                    Cached
  + pip                   20.1.1  pyh9f0ad1d_0           conda-forge/noarch                        1 MB
  + python                2.7.15  h5a48372_1011_cpython  conda-forge/linux-64                     12 MB
  + python_abi               2.7  1_cp27mu               conda-forge/linux-64                      4 KB
  + readline                 8.1  h46c0cb4_0             conda-forge/linux-64                    Cached
  + revtrans                 1.4  py27_0                 /home/vsts/conda/conda-bld/linux-64      24 KB
  + setuptools            44.0.0  py27_0                 conda-forge/linux-64                    663 KB
  + sqlite                3.36.0  h9cd32fc_0             conda-forge/linux-64                    Cached
  + tk                    8.6.11  h27826a3_1             conda-forge/linux-64                    Cached
  + wheel                 0.37.0  pyhd8ed1ab_1           conda-forge/noarch                      Cached
  + zlib                  1.2.11  h516909a_1010          conda-forge/linux-64                    Cached

  Summary:

  Install: 21 packages

  Total download: 14 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/revtrans_1630934746339/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge              conda-forge
    _openmp_mutex:    4.5-1_gnu                    conda-forge
    ca-certificates:  2021.5.30-ha878542_0         conda-forge
    certifi:          2019.11.28-py27h8c360ce_1    conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2            conda-forge
    libffi:           3.2.1-he1b5a44_1007          conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8            conda-forge
    libgomp:          11.1.0-hc902ee8_8            conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8            conda-forge
    ncurses:          6.2-h58526e2_4               conda-forge
    openssl:          1.1.1l-h7f98852_0            conda-forge
    pip:              20.1.1-pyh9f0ad1d_0          conda-forge
    python:           2.7.15-h5a48372_1011_cpython conda-forge
    python_abi:       2.7-1_cp27mu                 conda-forge
    readline:         8.1-h46c0cb4_0               conda-forge
    revtrans:         1.4-py27_0                   local      
    setuptools:       44.0.0-py27_0                conda-forge
    sqlite:           3.36.0-h9cd32fc_0            conda-forge
    tk:               8.6.11-h27826a3_1            conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1          conda-forge
    zlib:             1.2.11-h516909a_1010         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/revtrans_1630934746339/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla
export SRC_DIR=/home/vsts/conda/conda-bld/revtrans_1630934746339/test_tmp


NAME
	revtrans - performs a reverse translation of a peptide alignment

SYNOPSIS
	revtrans dnafile pepfile [-v] [-h] [-gapin chars] [-gapout char] 
	 [-Idna format] [-Ipep format] [-mtx tablename/file] [-match method] 
	 [-O format] [outfile] 

DESCRIPTION
       Reads a set of aligned peptide sequences from pepfile and uses
       the corresponding DNA sequences from dnafile to construct a
       reverse translated version of the alignment.
       
       By default the input file formats are auto detected and the 
       corresponding DNA and peptide sequences is found by translation.

       In the typical case this means that the user only need to 
       supply the DNA and peptide sequences, and may safely ignore
       the more advanced options. E.g :
       
	       revtrans kinases.dna.fsa kinases.prot.aln 
       
       The final alignment is written to STDOUT or outfile if specified,
       and is by default in FASTA format.

OPTIONS
	-h
		Help. Print this help information.
	
	-gapin chars
		Specify gap characters in the input sequences.
		Default is '.-~'
	
	-gapout	char
		Specify which character should be used for gaps in the
		output.
		Default is '-'
		
	-Idna format
		Specify format of the input DNA file.
		Valid formats are: auto (default), fasta, msf and aln

	-Ipep format
		Specify format of the input peptide file.
		Valid formats are: auto (default), fasta, msf and aln

	-O format
		Specify format of the output file.
		Valid formats are: fasta (default), msf and aln
		
	-mtx tablename/file
		Use alternative translation matrix instead of the build-in
		Standard Genetic Code for translation.
		
		If "tablename" is 1-6,9-16 or 21-23 one of the alternative 
		translation tables defined by the NCBI taxonomy group will be 
		used.
		
		Briefly, the following tables are defined:
		-----------------------------------------
		 1: The Standard Code 
		 2: The Vertebrate Mitochondrial Code 
		 3: The Yeast Mitochondrial Code 
		 4: The Mold, Protozoan, and Coelenterate Mitochondrial Code 
		    and the Mycoplasma/Spiroplasma Code 
		 5: The Invertebrate Mitochondrial Code 
		 6: The Ciliate, Dasycladacean and Hexamita Nuclear Code 
		 9: The Echinoderm and Flatworm Mitochondrial Code 
		10: The Euplotid Nuclear Code 
		11: The Bacterial and Plant Plastid Code 
		12: The Alternative Yeast Nuclear Code 
		13: The Ascidian Mitochondrial Code 
		14: The Alternative Flatworm Mitochondrial Code 
		15: Blepharisma Nuclear Code 
		16: Chlorophycean Mitochondrial Code 
		21: Trematode Mitochondrial Code 
		22: Scenedesmus obliquus mitochondrial Code 
		23: Thraustochytrium Mitochondrial Code 
		
		See http://www.ncbi.nlm.nih.gov/Taxonomy [Genetic Codes]
		for a detailed description. Please notice that the table
		of start codons is also used (see the -allinternal option
		below for details).
		
		If a filename is supplied the translation table is read from
		file instead. 
		
		The file should contain one line per codon in the format:
		
		codon<whitespace>aa-single letter code
		
		All 64 codons must be included. Stop codons is specified 
		by "*". T and U is interchangeable. Blank lines and lines
		starting with "#" are ignored.
		
		See the "gcMitVertebrate.mtx" file in the RevTrans source
		distribution for a well documented example.
		
	-allinternal
		By default the very first codon in each sequences is assumed
		to be the initial codon on the transcript. This means certain
		non-methionine codons actually codes for metionine at this 
		position. For example "TTG" in the standard genetic code (see
		above).
		
		Selecting this option treats all codons as internal codons.	
		
	-readthroughstop
		Allow the translation to continue after a stop codon is reached.
		The stop codon will be marked as "*".
		
		Be careful that stop codons have been addressed in the same manner
		in the input peptide alignment.		
			
	-match method
		Specify how to match the corresponding DNA and peptide 
		sequences. Valid methods are: trans (default), name and pos.
		
		Please note that both DNA and peptide sequence should have 
		unique names, regardless of the matching method. 
		
		trans:
			Match sequences by translation. The DNA sequences are
			translated using the standard genetic code (default)
			or an alternative translation matrix if the -mtx
			option is used.
			
		name:
			Match sequences by name. Please note that for FASTA 
			files everything after the ">" is considered the
			sequence name. 
			
		pos:
			Match by position. The sequence are matched by position
			in the files (first DNA sequence with first peptide
			sequence etc.).			
	-v
		Verbose. Print extra information about files, sequences
		and the progress in general to STDERR.
		
		The verbose level can be set to three degrees of
		detail.
		
		-v:   verbose level 1
			Info about files, number of sequences read etc.
			Use this as the first try if something needs
			investigation.
			
		-vv:  verbose level 2
			As level 1 + 
			Print detailed info about all the sequence names.
			
		-vvv: verbose level 3
			As level 2 +
			Do a sanity check on the degapped length of the
			sequences. Warn if the sizes do not match.
			
AUTHOR
	Rasmus Wernersson, raz@cbs.dtu.dk
	September 2002, February 2003, July 2004, April 2005

FILES
	revtrans.py, mod_translate.py, mod_seqfiles.py, 
	ncbi_genetic_codes.py
	
WEB PAGE
	http://www.cbs.dtu.dk/services/RevTrans/
	
REFERENCE
	Rasmus Wernersson and Anders Gorm Pedersen. 
	RevTrans - Constructing alignments of coding DNA from aligned amino 
	acid sequences.
	Nucl. Acids Res., 2003, 31(13), 3537-3539.




NAME
	revtrans - performs a reverse translation of a peptide alignment

SYNOPSIS
	revtrans dnafile pepfile [-v] [-h] [-gapin chars] [-gapout char] 
	 [-Idna format] [-Ipep format] [-mtx tablename/file] [-match method] 
	 [-O format] [outfile] 

DESCRIPTION
       Reads a set of aligned peptide sequences from pepfile and uses
       the corresponding DNA sequences from dnafile to construct a
       reverse translated version of the alignment.
       
       By default the input file formats are auto detected and the 
       corresponding DNA and peptide sequences is found by translation.

       In the typical case this means that the user only need to 
       supply the DNA and peptide sequences, and may safely ignore
       the more advanced options. E.g :
       
	       revtrans kinases.dna.fsa kinases.prot.aln 
       
       The final alignment is written to STDOUT or outfile if specified,
       and is by default in FASTA format.

OPTIONS
	-h
		Help. Print this help information.
	
	-gapin chars
		Specify gap characters in the input sequences.
		Default is '.-~'
	
	-gapout	char
		Specify which character should be used for gaps in the
		output.
		Default is '-'
		
	-Idna format
		Specify format of the input DNA file.
		Valid formats are: auto (default), fasta, msf and aln

	-Ipep format
		Specify format of the input peptide file.
		Valid formats are: auto (default), fasta, msf and aln

	-O format
		Specify format of the output file.
		Valid formats are: fasta (default), msf and aln
		
	-mtx tablename/file
		Use alternative translation matrix instead of the build-in
		Standard Genetic Code for translation.
		
		If "tablename" is 1-6,9-16 or 21-23 one of the alternative 
		translation tables defined by the NCBI taxonomy group will be 
		used.
		
		Briefly, the following tables are defined:
		-----------------------------------------
		 1: The Standard Code 
		 2: The Vertebrate Mitochondrial Code 
		 3: The Yeast Mitochondrial Code 
		 4: The Mold, Protozoan, and Coelenterate Mitochondrial Code 
		    and the Mycoplasma/Spiroplasma Code 
		 5: The Invertebrate Mitochondrial Code 
		 6: The Ciliate, Dasycladacean and Hexamita Nuclear Code 
		 9: The Echinoderm and Flatworm Mitochondrial Code 
		10: The Euplotid Nuclear Code 
		11: The Bacterial and Plant Plastid Code 
		12: The Alternative Yeast Nuclear Code 
		13: The Ascidian Mitochondrial Code 
		14: The Alternative Flatworm Mitochondrial Code 
		15: Blepharisma Nuclear Code 
		16: Chlorophycean Mitochondrial Code 
		21: Trematode Mitochondrial Code 
		22: Scenedesmus obliquus mitochondrial Code 
		23: Thraustochytrium Mitochondrial Code 
		
		See http://www.ncbi.nlm.nih.gov/Taxonomy [Genetic Codes]
		for a detailed description. Please notice that the table
		of start codons is also used (see the -allinternal option
		below for details).
		
		If a filename is supplied the translation table is read from
		file instead. 
		
		The file should contain one line per codon in the format:
		
		codon<whitespace>aa-single letter code
		
		All 64 codons must be included. Stop codons is specified 
		by "*". T and U is interchangeable. Blank lines and lines
		starting with "#" are ignored.
		
		See the "gcMitVertebrate.mtx" file in the RevTrans source
		distribution for a well documented example.
		
	-allinternal
		By default the very first codon in each sequences is assumed
		to be the initial codon on the transcript. This means certain
		non-methionine codons actually codes for metionine at this 
		position. For example "TTG" in the standard genetic code (see
		above).
		
		Selecting this option treats all codons as internal codons.	
		
	-readthroughstop
		Allow the translation to continue after a stop codon is reached.
		The stop codon will be marked as "*".
		
		Be careful that stop codons have been addressed in the same manner
		in the input peptide alignment.		
			
	-match method
		Specify how to match the corresponding DNA and peptide 
		sequences. Valid methods are: trans (default), name and pos.
		
		Please note that both DNA and peptide sequence should have 
		unique names, regardless of the matching method. 
		
		trans:
			Match sequences by translation. The DNA sequences are
			translated using the standard genetic code (default)
			or an alternative translation matrix if the -mtx
			option is used.
			
		name:
			Match sequences by name. Please note that for FASTA 
			files everything after the ">" is considered the
			sequence name. 
			
		pos:
			Match by position. The sequence are matched by position
			in the files (first DNA sequence with first peptide
			sequence etc.).			
	-v
		Verbose. Print extra information about files, sequences
		and the progress in general to STDERR.
		
		The verbose level can be set to three degrees of
		detail.
		
		-v:   verbose level 1
			Info about files, number of sequences read etc.
			Use this as the first try if something needs
			investigation.
			
		-vv:  verbose level 2
			As level 1 + 
			Print detailed info about all the sequence names.
			
		-vvv: verbose level 3
			As level 2 +
			Do a sanity check on the degapped length of the
			sequences. Warn if the sizes do not match.
			
AUTHOR
	Rasmus Wernersson, raz@cbs.dtu.dk
	September 2002, February 2003, July 2004, April 2005

FILES
	revtrans.py, mod_translate.py, mod_seqfiles.py, 
	ncbi_genetic_codes.py
	
WEB PAGE
	http://www.cbs.dtu.dk/services/RevTrans/
	
REFERENCE
	Rasmus Wernersson and Anders Gorm Pedersen. 
	RevTrans - Constructing alignments of coding DNA from aligned amino 
	acid sequences.
	Nucl. Acids Res., 2003, 31(13), 3537-3539.



Resource usage statistics from testing revtrans:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: revtrans-1.4-py27_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


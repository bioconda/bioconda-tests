Updating build index: /home/vsts/conda/conda-bld

TEST START: xyalign-1.1.5-py_1.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /tmp/tmpm1zepo1z/info/recipe/conda_build_config.yaml
  Package                               Version  Build                  Channel                                   Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex                           0.1  conda_forge            conda-forge/linux-64                    Cached
  + _openmp_mutex                           4.5  1_gnu                  conda-forge/linux-64                    Cached
  + alsa-lib                              1.2.3  h516909a_0             conda-forge/linux-64                    560 KB
  + atomicwrites                          1.4.0  pyh9f0ad1d_0           conda-forge/noarch                       10 KB
  + attrs                                21.2.0  pyhd8ed1ab_0           conda-forge/noarch                      Cached
  + backports                               1.0  py27_1                 conda-forge/linux-64                      4 KB
  + backports.functools_lru_cache         1.6.1  py_0                   conda-forge/noarch                        8 KB
  + backports_abc                           0.5  py27_0                 conda-forge/linux-64                      6 KB
  + bbmap                                 38.92  he522d1c_0             bioconda/linux-64                         9 MB
  + bedtools                             2.30.0  h7d7f7ad_2             bioconda/linux-64                        18 MB
  + bwa                                  0.7.17  h5bf99c6_8             bioconda/linux-64                       608 KB
  + bzip2                                 1.0.8  h7f98852_4             conda-forge/linux-64                    Cached
  + c-ares                               1.17.2  h7f98852_0             conda-forge/linux-64                    Cached
  + ca-certificates                   2021.5.30  ha878542_0             conda-forge/linux-64                    Cached
  + cairo                                1.16.0  hcf35c78_1003          conda-forge/linux-64                      1 MB
  + certifi                          2019.11.28  py27h8c360ce_1         conda-forge/linux-64                    Cached
  + configparser                          3.7.3  py27h8c360ce_2         conda-forge/linux-64                     37 KB
  + contextlib2                     0.6.0.post1  py_0                   conda-forge/noarch                       12 KB
  + cycler                               0.10.0  py27_0                 conda-forge/linux-64                     13 KB
  + fontconfig                           2.13.1  hba837de_1005          conda-forge/linux-64                    Cached
  + freetype                             2.10.4  h0708190_1             conda-forge/linux-64                    Cached
  + funcsigs                              1.0.2  py27_0                 conda-forge/linux-64                     17 KB
  + functools32                         3.2.3.2  py27_2                 conda-forge/linux-64                     22 KB
  + futures                               3.3.0  py27h8c360ce_1         conda-forge/linux-64                     26 KB
  + gettext                            0.19.8.1  hf34092f_1004          conda-forge/linux-64                      4 MB
  + giflib                                5.2.1  h36c2ea0_2             conda-forge/linux-64                     77 KB
  + glib                                 2.66.3  h58526e2_0             conda-forge/linux-64                    500 KB
  + graphite2                            1.3.13  h58526e2_1001          conda-forge/linux-64                    Cached
  + harfbuzz                              2.4.0  h9f30f68_3             conda-forge/linux-64                      1 MB
  + htslib                                 1.12  h9093b5e_1             bioconda/linux-64                         2 MB
  + icu                                    64.2  he1b5a44_1             conda-forge/linux-64                     13 MB
  + importlib_metadata                    1.5.0  py27_0                 conda-forge/linux-64                     41 KB
  + jbig                                    2.1  h7f98852_2003          conda-forge/linux-64                    Cached
  + jpeg                                     9d  h36c2ea0_0             conda-forge/linux-64                    Cached
  + kiwisolver                            1.1.0  py27h9e3301b_1         conda-forge/linux-64                     88 KB
  + krb5                                 1.19.2  hcc1bbae_0             conda-forge/linux-64                    Cached
  + lcms2                                  2.12  hddcbb42_0             conda-forge/linux-64                    443 KB
  + ld_impl_linux-64                     2.36.1  hea4e1c9_2             conda-forge/linux-64                    Cached
  + ldc                                  1.20.0  h9a1ace1_1             conda-forge/linux-64                     37 MB
  + lerc                                  2.2.1  h9c3ff4c_0             conda-forge/linux-64                    Cached
  + libblas                               3.9.0  8_openblas             conda-forge/linux-64                    Cached
  + libcblas                              3.9.0  8_openblas             conda-forge/linux-64                    Cached
  + libcurl                              7.78.0  h2574ce0_0             conda-forge/linux-64                    Cached
  + libdeflate                              1.7  h7f98852_5             conda-forge/linux-64                    Cached
  + libedit                        3.1.20191231  he28a2e2_2             conda-forge/linux-64                    Cached
  + libev                                  4.33  h516909a_1             conda-forge/linux-64                    Cached
  + libffi                                3.2.1  he1b5a44_1007          conda-forge/linux-64                    Cached
  + libgcc-ng                            11.1.0  hc902ee8_8             conda-forge/linux-64                    Cached
  + libgfortran-ng                        7.5.0  h14aa051_19            conda-forge/linux-64                    Cached
  + libgfortran4                          7.5.0  h14aa051_19            conda-forge/linux-64                    Cached
  + libglib                              2.66.3  hbe7bbb4_0             conda-forge/linux-64                      3 MB
  + libgomp                              11.1.0  hc902ee8_8             conda-forge/linux-64                    Cached
  + libiconv                               1.16  h516909a_0             conda-forge/linux-64                    Cached
  + liblapack                             3.9.0  8_openblas             conda-forge/linux-64                    Cached
  + libnghttp2                           1.43.0  h812cca2_0             conda-forge/linux-64                    Cached
  + libopenblas                          0.3.12  pthreads_hb3c22a3_1    conda-forge/linux-64                    Cached
  + libpng                               1.6.37  h21135ba_2             conda-forge/linux-64                    Cached
  + libssh2                              1.10.0  ha56f1ee_0             conda-forge/linux-64                    Cached
  + libstdcxx-ng                         11.1.0  h56837e0_8             conda-forge/linux-64                    Cached
  + libtiff                               4.3.0  hf544144_1             conda-forge/linux-64                    Cached
  + libuuid                              2.32.1  h7f98852_1000          conda-forge/linux-64                    Cached
  + libwebp-base                          1.2.1  h7f98852_0             conda-forge/linux-64                    Cached
  + libxcb                                 1.13  h7f98852_1003          conda-forge/linux-64                    Cached
  + libxml2                              2.9.10  hee79883_0             conda-forge/linux-64                      1 MB
  + lz4-c                                 1.9.3  h9c3ff4c_1             conda-forge/linux-64                    Cached
  + matplotlib-base                       2.2.5  py27h250f245_1         conda-forge/linux-64                      7 MB
  + more-itertools                        5.0.0  py_0                   conda-forge/noarch                       44 KB
  + ncurses                                 6.2  h58526e2_4             conda-forge/linux-64                    Cached
  + numpy                                1.16.5  py27h95a1406_0         conda-forge/linux-64                    Cached
  + openjdk                              11.0.8  hacce0ff_0             conda-forge/linux-64                    173 MB
  + openssl                              1.1.1k  h7f98852_1             conda-forge/linux-64                    Cached
  + packaging                              20.9  pyh44b312d_0           conda-forge/noarch                       35 KB
  + pandas                               0.24.2  py27hb3f55d8_0         conda-forge/linux-64                    Cached
  + pathlib2                              2.3.5  py27h8c360ce_1         conda-forge/linux-64                     33 KB
  + pbzip2                               1.1.13  0                      conda-forge/linux-64                    114 KB
  + pcre                                   8.45  h9c3ff4c_0             conda-forge/linux-64                    Cached
  + perl                                 5.32.1  0_h7f98852_perl5       conda-forge/linux-64                    Cached
  + pip                                  20.1.1  pyh9f0ad1d_0           conda-forge/noarch                      Cached
  + pixman                               0.38.0  h516909a_1003          conda-forge/linux-64                    594 KB
  + platypus-variant                    0.8.1.2  py27h4a7f997_2         bioconda/linux-64                         4 MB
  + pluggy                               0.12.0  py_0                   conda-forge/noarch                       18 KB
  + pthread-stubs                           0.4  h36c2ea0_1001          conda-forge/linux-64                    Cached
  + py                                   1.10.0  pyhd3deb0d_0           conda-forge/noarch                       73 KB
  + pybedtools                            0.8.2  py27h6a42192_1         bioconda/linux-64                        12 MB
  + pyparsing                             2.4.7  pyh9f0ad1d_0           conda-forge/noarch                       60 KB
  + pysam                              0.16.0.1  py27hc729bab_3         bioconda/linux-64                         3 MB
  + pytest                                4.6.4  py27_0                 conda-forge/linux-64                    348 KB
  + pytest-runner                         5.3.0  pyh44b312d_0           conda-forge/noarch                       10 KB
  + python                               2.7.15  h5a48372_1011_cpython  conda-forge/linux-64                    Cached
  + python-dateutil                       2.8.1  py_0                   conda-forge/noarch                      Cached
  + python_abi                              2.7  1_cp27mu               conda-forge/linux-64                    Cached
  + pytz                                 2020.1  pyh9f0ad1d_0           conda-forge/noarch                      Cached
  + readline                                8.1  h46c0cb4_0             conda-forge/linux-64                    Cached
  + sambamba                              0.8.1  h41abebc_0             bioconda/linux-64                         3 MB
  + samtools                               1.12  h9aed4be_1             bioconda/linux-64                       386 KB
  + scandir                              1.10.0  py27hdf8410d_1         conda-forge/linux-64                     28 KB
  + scipy                                 1.2.1  py27h921218d_2         conda-forge/linux-64                    Cached
  + setuptools                           44.0.0  py27_0                 conda-forge/linux-64                    Cached
  + singledispatch                        3.6.1  pyh44b312d_0           conda-forge/noarch                       12 KB
  + six                                  1.16.0  pyh6c4a22f_0           conda-forge/noarch                      Cached
  + sqlite                               3.36.0  h9cd32fc_0             conda-forge/linux-64                    Cached
  + subprocess32                          3.5.4  py27h516909a_0         conda-forge/linux-64                     46 KB
  + tk                                   8.6.11  h27826a3_1             conda-forge/linux-64                    Cached
  + tornado                               5.1.1  py27h14c3975_1000      conda-forge/linux-64                    642 KB
  + wcwidth                               0.2.5  pyh9f0ad1d_2           conda-forge/noarch                      Cached
  + wheel                                0.37.0  pyhd8ed1ab_1           conda-forge/noarch                      Cached
  + xorg-fixesproto                         5.0  h7f98852_1002          conda-forge/linux-64                      9 KB
  + xorg-inputproto                       2.3.2  h7f98852_1002          conda-forge/linux-64                     19 KB
  + xorg-kbproto                          1.0.7  h7f98852_1002          conda-forge/linux-64                    Cached
  + xorg-libice                          1.0.10  h7f98852_0             conda-forge/linux-64                    Cached
  + xorg-libsm                            1.2.3  hd9c2040_1000          conda-forge/linux-64                    Cached
  + xorg-libx11                           1.7.2  h7f98852_0             conda-forge/linux-64                    Cached
  + xorg-libxau                           1.0.9  h7f98852_0             conda-forge/linux-64                    Cached
  + xorg-libxdmcp                         1.1.3  h7f98852_0             conda-forge/linux-64                    Cached
  + xorg-libxext                          1.3.4  h7f98852_1             conda-forge/linux-64                    Cached
  + xorg-libxfixes                        5.0.3  h7f98852_1004          conda-forge/linux-64                     18 KB
  + xorg-libxi                           1.7.10  h7f98852_0             conda-forge/linux-64                     46 KB
  + xorg-libxrender                      0.9.10  h7f98852_1003          conda-forge/linux-64                    Cached
  + xorg-libxtst                          1.2.3  h7f98852_1002          conda-forge/linux-64                     31 KB
  + xorg-recordproto                     1.14.2  h7f98852_1002          conda-forge/linux-64                      8 KB
  + xorg-renderproto                     0.11.1  h7f98852_1002          conda-forge/linux-64                    Cached
  + xorg-xextproto                        7.3.0  h7f98852_1002          conda-forge/linux-64                    Cached
  + xorg-xproto                          7.0.31  h7f98852_1007          conda-forge/linux-64                    Cached
  + xyalign                               1.1.5  py_1                   /home/vsts/conda/conda-bld/linux-64      55 KB
  + xz                                    5.2.5  h516909a_1             conda-forge/linux-64                    Cached
  + zipp                                  1.0.0  py_0                   conda-forge/noarch                        7 KB
  + zlib                                 1.2.11  h516909a_1010          conda-forge/linux-64                    Cached
  + zstd                                  1.5.0  ha95c52a_0             conda-forge/linux-64                    Cached

  Summary:

  Install: 128 packages

  Total download: 296 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/xyalign_1630659413925/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac


The following NEW packages will be INSTALLED:

    _libgcc_mutex:                 0.1-conda_forge              conda-forge
    _openmp_mutex:                 4.5-1_gnu                    conda-forge
    alsa-lib:                      1.2.3-h516909a_0             conda-forge
    atomicwrites:                  1.4.0-pyh9f0ad1d_0           conda-forge
    attrs:                         21.2.0-pyhd8ed1ab_0          conda-forge
    backports:                     1.0-py27_1                   conda-forge
    backports.functools_lru_cache: 1.6.1-py_0                   conda-forge
    backports_abc:                 0.5-py27_0                   conda-forge
    bbmap:                         38.92-he522d1c_0             bioconda   
    bedtools:                      2.30.0-h7d7f7ad_2            bioconda   
    bwa:                           0.7.17-h5bf99c6_8            bioconda   
    bzip2:                         1.0.8-h7f98852_4             conda-forge
    c-ares:                        1.17.2-h7f98852_0            conda-forge
    ca-certificates:               2021.5.30-ha878542_0         conda-forge
    cairo:                         1.16.0-hcf35c78_1003         conda-forge
    certifi:                       2019.11.28-py27h8c360ce_1    conda-forge
    configparser:                  3.7.3-py27h8c360ce_2         conda-forge
    contextlib2:                   0.6.0.post1-py_0             conda-forge
    cycler:                        0.10.0-py27_0                conda-forge
    fontconfig:                    2.13.1-hba837de_1005         conda-forge
    freetype:                      2.10.4-h0708190_1            conda-forge
    funcsigs:                      1.0.2-py27_0                 conda-forge
    functools32:                   3.2.3.2-py27_2               conda-forge
    futures:                       3.3.0-py27h8c360ce_1         conda-forge
    gettext:                       0.19.8.1-hf34092f_1004       conda-forge
    giflib:                        5.2.1-h36c2ea0_2             conda-forge
    glib:                          2.66.3-h58526e2_0            conda-forge
    graphite2:                     1.3.13-h58526e2_1001         conda-forge
    harfbuzz:                      2.4.0-h9f30f68_3             conda-forge
    htslib:                        1.12-h9093b5e_1              bioconda   
    icu:                           64.2-he1b5a44_1              conda-forge
    importlib_metadata:            1.5.0-py27_0                 conda-forge
    jbig:                          2.1-h7f98852_2003            conda-forge
    jpeg:                          9d-h36c2ea0_0                conda-forge
    kiwisolver:                    1.1.0-py27h9e3301b_1         conda-forge
    krb5:                          1.19.2-hcc1bbae_0            conda-forge
    lcms2:                         2.12-hddcbb42_0              conda-forge
    ld_impl_linux-64:              2.36.1-hea4e1c9_2            conda-forge
    ldc:                           1.20.0-h9a1ace1_1            conda-forge
    lerc:                          2.2.1-h9c3ff4c_0             conda-forge
    libblas:                       3.9.0-8_openblas             conda-forge
    libcblas:                      3.9.0-8_openblas             conda-forge
    libcurl:                       7.78.0-h2574ce0_0            conda-forge
    libdeflate:                    1.7-h7f98852_5               conda-forge
    libedit:                       3.1.20191231-he28a2e2_2      conda-forge
    libev:                         4.33-h516909a_1              conda-forge
    libffi:                        3.2.1-he1b5a44_1007          conda-forge
    libgcc-ng:                     11.1.0-hc902ee8_8            conda-forge
    libgfortran-ng:                7.5.0-h14aa051_19            conda-forge
    libgfortran4:                  7.5.0-h14aa051_19            conda-forge
    libglib:                       2.66.3-hbe7bbb4_0            conda-forge
    libgomp:                       11.1.0-hc902ee8_8            conda-forge
    libiconv:                      1.16-h516909a_0              conda-forge
    liblapack:                     3.9.0-8_openblas             conda-forge
    libnghttp2:                    1.43.0-h812cca2_0            conda-forge
    libopenblas:                   0.3.12-pthreads_hb3c22a3_1   conda-forge
    libpng:                        1.6.37-h21135ba_2            conda-forge
    libssh2:                       1.10.0-ha56f1ee_0            conda-forge
    libstdcxx-ng:                  11.1.0-h56837e0_8            conda-forge
    libtiff:                       4.3.0-hf544144_1             conda-forge
    libuuid:                       2.32.1-h7f98852_1000         conda-forge
    libwebp-base:                  1.2.1-h7f98852_0             conda-forge
    libxcb:                        1.13-h7f98852_1003           conda-forge
    libxml2:                       2.9.10-hee79883_0            conda-forge
    lz4-c:                         1.9.3-h9c3ff4c_1             conda-forge
    matplotlib-base:               2.2.5-py27h250f245_1         conda-forge
    more-itertools:                5.0.0-py_0                   conda-forge
    ncurses:                       6.2-h58526e2_4               conda-forge
    numpy:                         1.16.5-py27h95a1406_0        conda-forge
    openjdk:                       11.0.8-hacce0ff_0            conda-forge
    openssl:                       1.1.1k-h7f98852_1            conda-forge
    packaging:                     20.9-pyh44b312d_0            conda-forge
    pandas:                        0.24.2-py27hb3f55d8_0        conda-forge
    pathlib2:                      2.3.5-py27h8c360ce_1         conda-forge
    pbzip2:                        1.1.13-0                     conda-forge
    pcre:                          8.45-h9c3ff4c_0              conda-forge
    perl:                          5.32.1-0_h7f98852_perl5      conda-forge
    pip:                           20.1.1-pyh9f0ad1d_0          conda-forge
    pixman:                        0.38.0-h516909a_1003         conda-forge
    platypus-variant:              0.8.1.2-py27h4a7f997_2       bioconda   
    pluggy:                        0.12.0-py_0                  conda-forge
    pthread-stubs:                 0.4-h36c2ea0_1001            conda-forge
    py:                            1.10.0-pyhd3deb0d_0          conda-forge
    pybedtools:                    0.8.2-py27h6a42192_1         bioconda   
    pyparsing:                     2.4.7-pyh9f0ad1d_0           conda-forge
    pysam:                         0.16.0.1-py27hc729bab_3      bioconda   
    pytest:                        4.6.4-py27_0                 conda-forge
    pytest-runner:                 5.3.0-pyh44b312d_0           conda-forge
    python:                        2.7.15-h5a48372_1011_cpython conda-forge
    python-dateutil:               2.8.1-py_0                   conda-forge
    python_abi:                    2.7-1_cp27mu                 conda-forge
    pytz:                          2020.1-pyh9f0ad1d_0          conda-forge
    readline:                      8.1-h46c0cb4_0               conda-forge
    sambamba:                      0.8.1-h41abebc_0             bioconda   
    samtools:                      1.12-h9aed4be_1              bioconda   
    scandir:                       1.10.0-py27hdf8410d_1        conda-forge
    scipy:                         1.2.1-py27h921218d_2         conda-forge
    setuptools:                    44.0.0-py27_0                conda-forge
    singledispatch:                3.6.1-pyh44b312d_0           conda-forge
    six:                           1.16.0-pyh6c4a22f_0          conda-forge
    sqlite:                        3.36.0-h9cd32fc_0            conda-forge
    subprocess32:                  3.5.4-py27h516909a_0         conda-forge
    tk:                            8.6.11-h27826a3_1            conda-forge
    tornado:                       5.1.1-py27h14c3975_1000      conda-forge
    wcwidth:                       0.2.5-pyh9f0ad1d_2           conda-forge
    wheel:                         0.37.0-pyhd8ed1ab_1          conda-forge
    xorg-fixesproto:               5.0-h7f98852_1002            conda-forge
    xorg-inputproto:               2.3.2-h7f98852_1002          conda-forge
    xorg-kbproto:                  1.0.7-h7f98852_1002          conda-forge
    xorg-libice:                   1.0.10-h7f98852_0            conda-forge
    xorg-libsm:                    1.2.3-hd9c2040_1000          conda-forge
    xorg-libx11:                   1.7.2-h7f98852_0             conda-forge
    xorg-libxau:                   1.0.9-h7f98852_0             conda-forge
    xorg-libxdmcp:                 1.1.3-h7f98852_0             conda-forge
    xorg-libxext:                  1.3.4-h7f98852_1             conda-forge
    xorg-libxfixes:                5.0.3-h7f98852_1004          conda-forge
    xorg-libxi:                    1.7.10-h7f98852_0            conda-forge
    xorg-libxrender:               0.9.10-h7f98852_1003         conda-forge
    xorg-libxtst:                  1.2.3-h7f98852_1002          conda-forge
    xorg-recordproto:              1.14.2-h7f98852_1002         conda-forge
    xorg-renderproto:              0.11.1-h7f98852_1002         conda-forge
    xorg-xextproto:                7.3.0-h7f98852_1002          conda-forge
    xorg-xproto:                   7.0.31-h7f98852_1007         conda-forge
    xyalign:                       1.1.5-py_1                   local      
    xz:                            5.2.5-h516909a_1             conda-forge
    zipp:                          1.0.0-py_0                   conda-forge
    zlib:                          1.2.11-h516909a_1010         conda-forge
    zstd:                          1.5.0-ha95c52a_0             conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/xyalign_1630659413925/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac
export SRC_DIR=/home/vsts/conda/conda-bld/xyalign_1630659413925/test_tmp
import: 'xyalign'
import: 'xyalign.test'
import: 'xyalign'
import: 'xyalign.test'
usage: xyalign [-h] [--bam [BAM [BAM ...]]] [--cram [CRAM [CRAM ...]]]
               [--sam [SAM [SAM ...]]] --ref REF --output_dir OUTPUT_DIR
               [--chromosomes [CHROMOSOMES [CHROMOSOMES ...]]]
               [--x_chromosome [X_CHROMOSOME [X_CHROMOSOME ...]]]
               [--y_chromosome [Y_CHROMOSOME [Y_CHROMOSOME ...]]]
               [--sample_id SAMPLE_ID] [--cpus CPUS] [--xmx XMX]
               [--fastq_compression {0,1,2,3,4,5,6,7,8,9}] [--single_end]
               [--version] [--no_cleanup]
               [--PREPARE_REFERENCE | --CHROM_STATS | --ANALYZE_BAM | --CHARACTERIZE_SEX_CHROMS | --REMAPPING | --STRIP_READS]
               [--logfile LOGFILE]
               [--reporting_level {DEBUG,INFO,ERROR,CRITICAL}]
               [--platypus_path PLATYPUS_PATH] [--bwa_path BWA_PATH]
               [--samtools_path SAMTOOLS_PATH] [--repairsh_path REPAIRSH_PATH]
               [--shufflesh_path SHUFFLESH_PATH]
               [--sambamba_path SAMBAMBA_PATH] [--bedtools_path BEDTOOLS_PATH]
               [--platypus_calling {both,none,before,after}]
               [--no_variant_plots] [--no_bam_analysis]
               [--skip_compatibility_check] [--no_perm_test] [--no_ks_test]
               [--no_bootstrap] [--variant_site_quality VARIANT_SITE_QUALITY]
               [--variant_genotype_quality VARIANT_GENOTYPE_QUALITY]
               [--variant_depth VARIANT_DEPTH]
               [--platypus_logfile PLATYPUS_LOGFILE]
               [--homogenize_read_balance HOMOGENIZE_READ_BALANCE]
               [--min_variant_count MIN_VARIANT_COUNT]
               [--reference_mask [REFERENCE_MASK [REFERENCE_MASK ...]]]
               [--xx_ref_out_name XX_REF_OUT_NAME]
               [--xy_ref_out_name XY_REF_OUT_NAME] [--xx_ref_out XX_REF_OUT]
               [--xy_ref_out XY_REF_OUT] [--xx_ref_in XX_REF_IN]
               [--xy_ref_in XY_REF_IN] [--bwa_index BWA_INDEX]
               [--read_group_id READ_GROUP_ID] [--bwa_flags BWA_FLAGS]
               [--sex_chrom_bam_only]
               [--sex_chrom_calling_threshold SEX_CHROM_CALLING_THRESHOLD]
               [--y_present | --y_absent] [--window_size WINDOW_SIZE]
               [--target_bed TARGET_BED] [--exact_depth]
               [--whole_genome_threshold] [--mapq_cutoff MAPQ_CUTOFF]
               [--min_depth_filter MIN_DEPTH_FILTER]
               [--max_depth_filter MAX_DEPTH_FILTER]
               [--num_permutations NUM_PERMUTATIONS]
               [--num_bootstraps NUM_BOOTSTRAPS] [--ignore_duplicates]
               [--marker_size MARKER_SIZE]
               [--marker_transparency MARKER_TRANSPARENCY]
               [--coordinate_scale COORDINATE_SCALE]
               [--include_fixed INCLUDE_FIXED] [--use_counts]

XYalign

optional arguments:
  -h, --help            show this help message and exit
  --bam [BAM [BAM ...]]
                        Full path to input bam files. If more than one
                        provided, only the first will be used for modules
                        other than --CHROM_STATS
  --cram [CRAM [CRAM ...]]
                        Full path to input cram files. If more than one
                        provided, only the first will be used for modules
                        other than --CHROM_STATS. Not currently supported.
  --sam [SAM [SAM ...]]
                        Full path to input sam files. If more than one
                        provided, only the first will be used for modules
                        other than --CHROM_STATS. Not currently supported.
  --ref REF             REQUIRED. Path to reference sequence (including file
                        name).
  --output_dir OUTPUT_DIR, -o OUTPUT_DIR
                        REQUIRED. Output directory. XYalign will create a
                        directory structure within this directory
  --chromosomes [CHROMOSOMES [CHROMOSOMES ...]], -c [CHROMOSOMES [CHROMOSOMES ...]]
                        Chromosomes to analyze (names must match reference
                        exactly). For humans, we recommend at least chr19,
                        chrX, chrY. Generally, we suggest including the sex
                        chromosomes and at least one autosome. To analyze all
                        chromosomes use '--chromosomes ALL' or '--chromosomes
                        all'.
  --x_chromosome [X_CHROMOSOME [X_CHROMOSOME ...]], -x [X_CHROMOSOME [X_CHROMOSOME ...]]
                        Names of x-linked scaffolds in reference fasta (must
                        match reference exactly).
  --y_chromosome [Y_CHROMOSOME [Y_CHROMOSOME ...]], -y [Y_CHROMOSOME [Y_CHROMOSOME ...]]
                        Names of y-linked scaffolds in reference fasta (must
                        match reference exactly). Defaults to chrY. Give None
                        if using an assembly without a Y chromosome
  --sample_id SAMPLE_ID, -id SAMPLE_ID
                        Name/ID of sample - for use in plot titles and file
                        naming. Default is sample
  --cpus CPUS           Number of cores/threads to use. Default is 1
  --xmx XMX             Memory to be provided to java programs via -Xmx. E.g.,
                        use the flag '--xmx 4g' to pass '-Xmx4g' as a flag
                        when running java programs (currently just repair.sh).
                        Default is 'None' (i.e., nothing provided on the
                        command line), which will allow repair.sh to
                        automatically allocate memory. Note that if you're
                        using --STRIP_READS on deep coverage whole genome
                        data, you might need quite a bit of memory, e.g. '--
                        xmx 16g', '--xmx 32g', or more depending on how many
                        reads are present per read group.
  --fastq_compression {0,1,2,3,4,5,6,7,8,9}
                        Compression level for fastqs output from repair.sh.
                        Between (inclusive) 0 and 9. Default is 3. 1 through 9
                        indicate compression levels. If 0, fastqs will be
                        uncompressed.
  --single_end          Include flag if reads are single-end and NOT paired-
                        end.
  --version, -V         Print version and exit.
  --no_cleanup          Include flag to preserve temporary files.
  --PREPARE_REFERENCE   This flag will limit XYalign to only preparing
                        reference fastas for individuals with and without Y
                        chromosomes. These fastas can then be passed with each
                        sample to save subsequent processing time.
  --CHROM_STATS         This flag will limit XYalign to only analyzing
                        provided bam files for depth and mapq across entire
                        chromosomes.
  --ANALYZE_BAM         This flag will limit XYalign to only analyzing the bam
                        file for depth, mapq, and (optionally) read balance
                        and outputting plots.
  --CHARACTERIZE_SEX_CHROMS
                        This flag will limit XYalign to the steps required to
                        characterize sex chromosome content (i.e., analyzing
                        the bam for depth, mapq, and read balance and running
                        statistical tests to help infer ploidy)
  --REMAPPING           This flag will limit XYalign to only the steps
                        required to strip reads and remap to masked
                        references. If masked references are not provided,
                        they will be created.
  --STRIP_READS         This flag will limit XYalign to only the steps
                        required to strip reads from a provided bam file.
  --logfile LOGFILE     Name of logfile. Will overwrite if exists. Default is
                        sample_xyalign.log
  --reporting_level {DEBUG,INFO,ERROR,CRITICAL}
                        Set level of messages printed to console. Default is
                        'INFO'. Choose from (in decreasing amount of
                        reporting) DEBUG, INFO, ERROR or CRITICAL
  --platypus_path PLATYPUS_PATH
                        Path to platypus. Default is 'platypus'. If platypus
                        is not directly callable (e.g., '/path/to/platypus' or
                        '/path/to/Playpus.py'), then provide path to python as
                        well (e.g., '/path/to/python /path/to/platypus'). In
                        addition, be sure provided python is version 2. See
                        the documentation for more information about setting
                        up an anaconda environment.
  --bwa_path BWA_PATH   Path to bwa. Default is 'bwa'
  --samtools_path SAMTOOLS_PATH
                        Path to samtools. Default is 'samtools'
  --repairsh_path REPAIRSH_PATH
                        Path to bbmap's repair.sh script. Default is
                        'repair.sh'
  --shufflesh_path SHUFFLESH_PATH
                        Path to bbmap's shuffle.sh script. Default is
                        'shuffle.sh'
  --sambamba_path SAMBAMBA_PATH
                        Path to sambamba. Default is 'sambamba'
  --bedtools_path BEDTOOLS_PATH
                        Path to bedtools. Default is 'bedtools'
  --platypus_calling {both,none,before,after}
                        Platypus calling withing the pipeline (before
                        processing, after processing, both, or neither).
                        Options: both, none, before, after.
  --no_variant_plots    Include flag to prevent plotting read balance from VCF
                        files.
  --no_bam_analysis     Include flag to prevent depth/mapq analysis of bam
                        file. Used to isolate platypus_calling.
  --skip_compatibility_check
                        Include flag to prevent check of compatibility between
                        input bam and reference fasta
  --no_perm_test        Include flag to turn off permutation tests.
  --no_ks_test          Include flag to turn off KS Two Sample tests.
  --no_bootstrap        Include flag to turn off bootstrap analyses. Requires
                        either --y_present, --y_absent, or
                        --sex_chrom_calling_threshold if running full
                        pipeline.
  --variant_site_quality VARIANT_SITE_QUALITY, -vsq VARIANT_SITE_QUALITY
                        Consider all SNPs with a site quality (QUAL) greater
                        than or equal to this value. Default is 30.
  --variant_genotype_quality VARIANT_GENOTYPE_QUALITY, -vgq VARIANT_GENOTYPE_QUALITY
                        Consider all SNPs with a sample genotype quality
                        greater than or equal to this value. Default is 30.
  --variant_depth VARIANT_DEPTH, -vd VARIANT_DEPTH
                        Consider all SNPs with a sample depth greater than or
                        equal to this value. Default is 4.
  --platypus_logfile PLATYPUS_LOGFILE
                        Prefix to use for Platypus log files. Will default to
                        the sample_id argument provided
  --homogenize_read_balance HOMOGENIZE_READ_BALANCE
                        If True, read balance values will be transformed by
                        subtracting each value from 1. For example, 0.25 and
                        0.75 would be treated equivalently. Default is False.
  --min_variant_count MIN_VARIANT_COUNT
                        Minimum number of variants in a window for the read
                        balance of that window to be plotted. Note that this
                        does not affect plotting of variant counts. Default is
                        1, though we note that many window averages will be
                        meaningless at this setting.
  --reference_mask [REFERENCE_MASK [REFERENCE_MASK ...]]
                        Bed file containing regions to replace with Ns in the
                        sex chromosome reference. Examples might include the
                        pseudoautosomal regions on the Y to force all
                        mapping/calling on those regions of the X chromosome.
                        Default is None.
  --xx_ref_out_name XX_REF_OUT_NAME
                        Desired name for masked output fasta for samples
                        WITHOUT a Y chromosome (e.g., XX, XXX, XO, etc.).
                        Defaults to 'xyalign_noY.masked.fa'. Will be output in
                        the XYalign reference directory.
  --xy_ref_out_name XY_REF_OUT_NAME
                        Desired name for masked output fasta for samples WITH
                        a Y chromosome (e.g., XY, XXY, etc.). Defaults to
                        'xyalign_withY.masked.fa'. Will be output in the
                        XYalign reference directory.
  --xx_ref_out XX_REF_OUT
                        Desired path to and name of masked output fasta for
                        samples WITHOUT a Y chromosome (e.g., XX, XXX, XO,
                        etc.). Overwrites if exists. Use if you would like
                        output somewhere other than XYalign reference
                        directory. Otherwise, use --xx_ref_name.
  --xy_ref_out XY_REF_OUT
                        Desired path to and name of masked output fasta for
                        samples WITH a Y chromosome (e.g., XY, XXY, etc.).
                        Overwrites if exists. Use if you would like output
                        somewhere other than XYalign reference directory.
                        Otherwise, use --xy_ref_name.
  --xx_ref_in XX_REF_IN
                        Path to preprocessed reference fasta to be used for
                        remapping in X0 or XX samples. Default is None. If
                        none, will produce a sample-specific reference for
                        remapping.
  --xy_ref_in XY_REF_IN
                        Path to preprocessed reference fasta to be used for
                        remapping in samples containing Y chromosome. Default
                        is None. If none, will produce a sample-specific
                        reference for remapping.
  --bwa_index BWA_INDEX
                        If True, index with BWA during PREPARE_REFERENCE. Only
                        relevantwhen running the PREPARE_REFERENCE module by
                        itself. Default is False.
  --read_group_id READ_GROUP_ID
                        If read groups are present in a bam file, they are
                        used by default in remapping steps. However, if read
                        groups are not present in a file, there are two
                        options for proceeding. If '--read_group_id None' is
                        provided (case sensitive), then no read groups will be
                        used in subsequent mapping steps. Otherwise, any other
                        string provided to this flag will be used as a read
                        group ID. Default is '--read_group_id xyalign'
  --bwa_flags BWA_FLAGS
                        Provide a string (in quotes, with spaces between
                        arguments) for additional flags desired for BWA
                        mapping (other than -R and -t). Example: '-M -T 20 -v
                        4'. Note that those are spaces between arguments.
  --sex_chrom_bam_only  This flag skips merging the new sex chromosome bam
                        file back into the original bam file (i.e., sex chrom
                        swapping). This will output a bam file containing only
                        the newly remapped sex chromosomes.
  --sex_chrom_calling_threshold SEX_CHROM_CALLING_THRESHOLD
                        This is the *maximum* filtered X/Y depth ratio for an
                        individual to be considered as having heterogametic
                        sex chromsomes (e.g., XY) for the REMAPPING module of
                        XYalign. Note here that X and Y chromosomes are simply
                        the chromosomes that have been designated as X and Y
                        via --x_chromosome and --y_chromosome. Keep in mind
                        that the ideal threshold will vary according to sex
                        determination mechanism, sequence homology between the
                        sex chromosomes, reference genome, sequencing methods,
                        etc. See documentation for more detail. Default is
                        2.0, which we found to be reasonable for exome, low-
                        coverage whole-genome, and high-coverage whole-genome
                        human data.
  --y_present           Overrides sex chr estimation by XYalign and remaps
                        with Y present.
  --y_absent            Overrides sex chr estimation by XY align and remaps
                        with Y absent.
  --window_size WINDOW_SIZE, -w WINDOW_SIZE
                        Window size (integer) for sliding window calculations.
                        Default is 50000. Default is None. If set to None,
                        will use targets provided using --target_bed.
  --target_bed TARGET_BED
                        Bed file containing targets to use in sliding window
                        analyses instead of a fixed window width. Either this
                        or --window_size needs to be set. Default is None,
                        which will use window size provided with
                        --window_size. If not None, and --window_size is None,
                        analyses will use targets in provided file. Must be
                        typical bed format, 0-based indexing, with the first
                        three columns containing the chromosome name, start
                        coordinate, stop coordinate.
  --exact_depth         Calculate exact depth within windows, else use much
                        faster approximation. *Currently exact is not
                        implemented*. Default is False.
  --whole_genome_threshold
                        This flag will calculate the depth filter threshold
                        based on all values from across the genome. By
                        default, thresholds are calculated per chromosome.
  --mapq_cutoff MAPQ_CUTOFF, -mq MAPQ_CUTOFF
                        Minimum mean mapq threshold for a window to be
                        considered high quality. Default is 20.
  --min_depth_filter MIN_DEPTH_FILTER
                        Minimum depth threshold for a window to be considered
                        high quality. Calculated as mean depth *
                        min_depth_filter. So, a min_depth_filter of 0.2 would
                        require at least a minimum depth of 2 if the mean
                        depth was 10. Default is 0.0 to consider all windows.
  --max_depth_filter MAX_DEPTH_FILTER
                        Maximum depth threshold for a window to be considered
                        high quality. Calculated as mean depth *
                        max_depth_filter. So, a max_depth_filter of 4 would
                        require depths to be less than or equal to 40 if the
                        mean depth was 10. Default is 10000.0 to consider all
                        windows.
  --num_permutations NUM_PERMUTATIONS
                        Number of permutations to use for permutation
                        analyses. Default is 10000
  --num_bootstraps NUM_BOOTSTRAPS
                        Number of bootstrap replicates to use when
                        bootstrapping mean depth ratios among chromosomes.
                        Default is 10000
  --ignore_duplicates   Ignore duplicate reads in bam analyses. Default is to
                        include duplicates.
  --marker_size MARKER_SIZE
                        Marker size for genome-wide plots in matplotlib.
                        Default is 10.
  --marker_transparency MARKER_TRANSPARENCY, -mt MARKER_TRANSPARENCY
                        Transparency of markers in genome-wide plots. Alpha in
                        matplotlib. Default is 0.5
  --coordinate_scale COORDINATE_SCALE
                        For genome-wide scatter plots, divide all coordinates
                        by this value.Default is 1000000, which will plot
                        everything in megabases.
  --include_fixed INCLUDE_FIXED
                        Default is False, which removes read balances less
                        than or equal to 0.05 and equal to 1.0 for histogram
                        plotting. True will include all values. Extreme values
                        removed by default because they often swamp out the
                        signal of the rest of the distribution.
  --use_counts          If True, get counts of reads per chromosome for
                        CHROM_STATS, rather than calculating mean depth and
                        mapq. Much faster, but provides less information.
                        Default is False
usage: explore_thresholds [-h] --dataframe DATAFRAME
                          [--callable_bed CALLABLE_BED] --vcf VCF
                          [--output_prefix OUTPUT_PREFIX] [--chrom CHROM]
                          [--whole_genome_threshold]
                          [--min_depth_filter [MIN_DEPTH_FILTER [MIN_DEPTH_FILTER ...]]]
                          [--max_depth_filter [MAX_DEPTH_FILTER [MAX_DEPTH_FILTER ...]]]
                          [--mapq_cutoff [MAPQ_CUTOFF [MAPQ_CUTOFF ...]]]
                          [--variant_site_quality VARIANT_SITE_QUALITY]
                          [--variant_genotype_quality VARIANT_GENOTYPE_QUALITY]
                          [--variant_depth VARIANT_DEPTH]
                          [--sample_id SAMPLE_ID] [--plot_snp_distance]

This script takes as input a CSV file of a pandas dataframe and Platypus VCF
file output by the BAM_ANALYSIS module and plots a histogram of read balances
given specified MAPQ and depth thresholds. It either plots the chromosome
specified by --chrom or all data in the input dataframe when --chrom ALL is
specified.

optional arguments:
  -h, --help            show this help message and exit
  --dataframe DATAFRAME
                        Full path to csv output of pandas dataframe from
                        BAM_ANALYSIS module
  --callable_bed CALLABLE_BED
                        Full path to OPTIONAL external bed file with callable
                        regions. This script will plot based on filters only,
                        callable sites only, and filters and callable sites
                        combined. Default is 'None', which will plot based on
                        filters only.
  --vcf VCF             Full path to Platypus VCF output from BAM_ANALYSIS
                        module
  --output_prefix OUTPUT_PREFIX
                        Full path to and prefix of output files.
  --chrom CHROM         Name of chromosome to analyze. Default is 'ALL', which
                        will analyze all chromosomes in dataframe together.
                        Otherwise, will only plot for chromosome listed.
  --whole_genome_threshold
                        If flag provided, use full dataset to calculate mean
                        for filters. Otherwise, will calculate mean per
                        chromosome.
  --min_depth_filter [MIN_DEPTH_FILTER [MIN_DEPTH_FILTER ...]]
                        Minimum depth threshold for a window to be considered
                        high quality. Calculated as mean depth *
                        min_depth_filter. So, a min_depth_filter of 0.2 would
                        require at least a minimum depth of 2 if the mean
                        depth was 10. Default is 0.0 to consider all windows.
  --max_depth_filter [MAX_DEPTH_FILTER [MAX_DEPTH_FILTER ...]]
                        Maximum depth threshold for a window to be considered
                        high quality. Calculated as mean depth *
                        max_depth_filter. So, a max_depth_filter of 4 would
                        require depths to be less than or equal to 40 if the
                        mean depth was 10. Default is 100000.0 to consider all
                        windows.
  --mapq_cutoff [MAPQ_CUTOFF [MAPQ_CUTOFF ...]]
                        Minimum mean mapq threshold for a window to be
                        considered high quality. Default is 20.
  --variant_site_quality VARIANT_SITE_QUALITY
                        Consider all SNPs with a site quality (QUAL) greater
                        than or equal to this value. Default is 30.
  --variant_genotype_quality VARIANT_GENOTYPE_QUALITY
                        Consider all SNPs with a sample genotype quality
                        greater than or equal to this value. Default is 30.
  --variant_depth VARIANT_DEPTH
                        Consider all SNPs with a sample depth greater than or
                        equal to this value. Default is 4.
  --sample_id SAMPLE_ID
                        Sample ID or other identifier to be used in naming
  --plot_snp_distance   If True, will also plot a histogram of distances
                        between SNPs. Will only run on a single chromosome.
                        Default is False.
usage: plot_count_stats [-h] --input INPUT --meta META --output_prefix
                        OUTPUT_PREFIX [--exclude_suffix EXCLUDE_SUFFIX]
                        --first_chr FIRST_CHR --second_chr SECOND_CHR
                        --const_chr CONST_CHR
                        [--var1_marker {color,shape,size}]
                        [--var1_marker_vals VAR1_MARKER_VALS [VAR1_MARKER_VALS ...]]
                        [--var2_marker {color,shape,size,none}]
                        [--var2_marker_vals [VAR2_MARKER_VALS [VAR2_MARKER_VALS ...]]]
                        [--marker_size MARKER_SIZE]
                        [--marker_color MARKER_COLOR]
                        [--marker_shape MARKER_SHAPE]
                        [--marker_alpha MARKER_ALPHA]
                        [--legend_marker_scale LEGEND_MARKER_SCALE]
                        [--x_title X_TITLE] [--y_title Y_TITLE]

This script will plot scatter plots of 'X/A' and 'Y/A' ratios from CHROM_STATS
output. However, its features are not meant to be exhaustive. Rather, it is
likely best used as a template for users to customize and adjust as needed.

optional arguments:
  -h, --help            show this help message and exit
  --input INPUT         Full path to file containing table output by
                        CHROM_STATS
  --meta META           Full path to file containing metadata table. This file
                        should have the following columns separated by tabs:
                        Sample NameOfVariable1 NameOfVariable2.
                        NameOfVariable1 and NameofVariable2 should be the
                        names of whatever you're interested in plotting (e.g.,
                        Sex). NameOfVariable2 is optional. This script handles
                        a max of two variables.
  --output_prefix OUTPUT_PREFIX
                        'Prefix' of output files. This includes full path to
                        desired file and desired file name before suffix
                        (suffix will be .pdf).
  --exclude_suffix EXCLUDE_SUFFIX
                        Text to remove from end of sample names in input file.
                        Default is to remove nothing. Note that the sample
                        names in the input file have to match the names in the
                        meta file AFTER they undergo this step.
  --first_chr FIRST_CHR
                        Chromosome to use a numerator on X-axis. For example,
                        if one was comparing chrX and chrY, and using chr19 to
                        normalize, recommended values would be: --first_chr
                        chrX --second_chr chrY --const_chr chr19.
  --second_chr SECOND_CHR
                        Chromosome to use a numerator on Y-axis. For example,
                        if one was comparing chrX and chrY, and using chr19 to
                        normalize, recommended values would be: --first_chr
                        chrX --second_chr chrY --const_chr chr19.
  --const_chr CONST_CHR
                        Chromosome to use denominator on both the X- and
                        Y-axis. For example, if one was comparing chrX and
                        chrY, and using chr19 to normalize, recommended values
                        would be: --first_chr chrX --second_chr chrY
                        --const_chr chr19.
  --var1_marker {color,shape,size}
                        Way of designating variable 1 values in plot. Choices
                        are 'color', 'shape', or 'size'. Must be used in
                        conjunction with --var1_marker_vals. Default is
                        'color'.
  --var1_marker_vals VAR1_MARKER_VALS [VAR1_MARKER_VALS ...]
                        Marker values to use for variable 1 values. If
                        --var1_marker is 'color', then --var1_marker_vals
                        should be a space-separated list of Matplotlib colors
                        (e.g., 'red blue green'). If --var1_marker is 'shape'
                        then --var1_marker_vals should be a space-separated
                        list of Matplotlib scatter markers (e.g., 'x o D' for
                        x, cicle, and Diamond). Finally, if --var1_marker is
                        'size', then --var1_marker_vals should be a space-
                        separated list of Matplotlib marker sizes in units of
                        points^2 (e.g., '5 10 15'). Default is 'red blue'.
  --var2_marker {color,shape,size,none}
                        Way of designating variable 2 values in plot. Choices
                        are 'color', 'shape', or 'size'. Must be used in
                        conjunction with --var2_marker_vals. Default is
                        'none', which will only process --var1_marker.
  --var2_marker_vals [VAR2_MARKER_VALS [VAR2_MARKER_VALS ...]]
                        Marker values to use for variable 2 values. If
                        --var2_marker is 'color', then --var2_marker_vals
                        should be a space-separated list of Matplotlib colors
                        (e.g., 'red blue green'). If --var2_marker is 'shape'
                        then --var2_marker_vals should be a space-separated
                        list of Matplotlib scatter markers (e.g., 'x o D' for
                        x, cicle, and Diamond). Finally, if --var2_marker is
                        'size', then --var2_marker_vals should be a space-
                        separated list of Matplotlib marker sizes in units of
                        points^2 (e.g., '5 10 15'). Default is 'red blue'.
  --marker_size MARKER_SIZE
                        If 'size' is not selected for --var1_marker or
                        --var2_marker, use this size for markers. Default is
                        100.
  --marker_color MARKER_COLOR
                        If 'color' is not selected for --var1_marker or
                        --var2_marker, use this color for markers. Default is
                        'black'.
  --marker_shape MARKER_SHAPE
                        If 'shape' is not selected for --var1_marker or
                        --var2_marker, use this shape for markers (see
                        matplotlib for possible shapes). Default is 'o' for
                        circles.
  --marker_alpha MARKER_ALPHA
                        Marker transparency ranging from 0.0 to 1.0 (1.0 being
                        nontransparent). Default is 0.5.
  --legend_marker_scale LEGEND_MARKER_SCALE
                        Use this value to scale maker size in legend, if
                        desired. Default is 1.0, or no scaling.
  --x_title X_TITLE     X axis title. Default is '<name of first chrom> /
                        <name of const chrom> ratio'. E.g., 'chrX / chr19
                        ratio'
  --y_title Y_TITLE     Y axis title. Default is '<name of second chrom> /
                        <name of const chrom> ratio'. E.g., 'chrY / chr19
                        ratio'
usage: plot_window_differences [-h] [--before BEFORE] [--after AFTER]
                               [--color COLOR] [--chrom CHROM]
                               [--sample_id SAMPLE_ID]
                               [--output_prefix OUTPUT_PREFIX]
                               [--marker_size MARKER_SIZE]
                               [--marker_transparency MARKER_TRANSPARENCY]
                               [--coordinate_scale COORDINATE_SCALE]
                               [--y_min Y_MIN] [--y_max Y_MAX]
                               [--x_limit X_LIMIT] [--log_transform_depth]

This script takes two dataframes output by XYalign's BAM_ANALYSIS module and
plots the difference in depth and mapq for a given chromosome. This was
designed to plot these metrics before and after XYalign processing on the same
sample, but could conceivably be used for other purposes.

optional arguments:
  -h, --help            show this help message and exit
  --before BEFORE       Full path to dataframe 1 (will be treated) as 'before'
                        condition.
  --after AFTER         Full path to dataframe 2 (will be treated) as 'after'
                        condition.
  --color COLOR         Color of points to use. Consult matplotlib
                        documentation for available options.
  --chrom CHROM         Chromosome to analyze. Must match name in dataframes.
  --sample_id SAMPLE_ID
                        Sample ID or other identifier to be used in naming
  --output_prefix OUTPUT_PREFIX
                        Full path to and prefix of desired output plot
  --marker_size MARKER_SIZE
                        Marker size in matplotlib. Default is 10.
  --marker_transparency MARKER_TRANSPARENCY, -mt MARKER_TRANSPARENCY
                        Transparency of markers. Alpha in matplotlib. Default
                        is 0.5
  --coordinate_scale COORDINATE_SCALE
                        Divide all coordinates by this value.Default is
                        1000000, which will plot everything in megabases.
  --y_min Y_MIN         If 'auto', will allow matplotlib to automatically
                        determine limit. Otherwise, will set the y axis
                        minimum to the value provided (int or float)
  --y_max Y_MAX         If 'auto', will allow matplotlib to automatically
                        determine limit. Otherwise, will set the y axis
                        maximum to the value provided (int or float)
  --x_limit X_LIMIT     Max value on x axis. We recommend you use the
                        chromosome length.
  --log_transform_depth
                        Include flag to plot the absolute value of the log of
                        the depth difference *IN THE DIRECTION OF THE
                        DIFFERENCE*. For exampe, if the difference is 2, this
                        would plot that value as abs(log10(2)), while if the
                        difference is -2, this would plot that value as
                        -abs(log10(2)). This allows the sign of the difference
                        to remain intact, while controlling for taking the log
                        of negative numbers or values between 0 and 1.
usage: compare_vcfs [-h] --vcf_before VCF_BEFORE --vcf_after VCF_AFTER
                    --output_file OUTPUT_FILE
                    [--variant_site_quality VARIANT_SITE_QUALITY]
                    [--variant_genotype_quality VARIANT_GENOTYPE_QUALITY]
                    [--variant_depth VARIANT_DEPTH] --chrom CHROM

This script takes as input two Platypus VCF files and compares them to find
differences in variant presence/absence and genotype quality.

optional arguments:
  -h, --help            show this help message and exit
  --vcf_before VCF_BEFORE
                        Full path to first Platypus VCF output from
                        BAM_ANALYSIS module. This will be treated as the
                        'before' condition for comparisons.
  --vcf_after VCF_AFTER
                        Full path to second Platypus VCF output from
                        BAM_ANALYSIS module. This will be treated as the
                        'after' condition for comparisons.
  --output_file OUTPUT_FILE
                        Name of output file (including path, if to be created
                        elsewhere).
  --variant_site_quality VARIANT_SITE_QUALITY
                        Consider all SNPs with a site quality (QUAL) greater
                        than or equal to this value. Default is 30.
  --variant_genotype_quality VARIANT_GENOTYPE_QUALITY
                        Consider all SNPs with a sample genotype quality
                        greater than or equal to this value. Default is 30.
  --variant_depth VARIANT_DEPTH
                        Consider all SNPs with a sample depth greater than or
                        equal to this value. Default is 4.
  --chrom CHROM         Name of chromosome to analyze.

Resource usage statistics from testing xyalign:
   Process count: 4
   CPU time: Sys=0:00:00.3, User=0:00:00.8
   Memory: 109.9M
   Disk usage: 28B
   Time elapsed: 0:00:06.2


TEST END: xyalign-1.1.5-py_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                  Version  Build                  Channel                                    Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex              0.1  conda_forge            conda-forge/linux-64                     Cached
  + _openmp_mutex              4.5  1_gnu                  conda-forge/linux-64                     Cached
  + bcftools                1.10.2  h4f4756c_3             bioconda/linux-64                        773 KB
  + bedtools                2.30.0  h7d7f7ad_2             bioconda/linux-64                         18 MB
  + bx-python                0.8.9  py27h54ae540_2         bioconda/linux-64                       1021 KB
  + bzip2                    1.0.8  h7f98852_4             conda-forge/linux-64                     Cached
  + c-ares                  1.17.2  h7f98852_0             conda-forge/linux-64                     Cached
  + ca-certificates      2021.5.30  ha878542_0             conda-forge/linux-64                     Cached
  + certifi             2019.11.28  py27h8c360ce_1         conda-forge/linux-64                     149 KB
  + gsl                        2.6  he838d99_2             conda-forge/linux-64                       3 MB
  + hap.py                  0.3.14  py27h5c5a3ab_0         /home/vsts/conda/conda-bld/linux-64       50 MB
  + htslib                  1.10.2  hd3b49d5_1             bioconda/linux-64                          2 MB
  + krb5                    1.19.2  hcc1bbae_0             conda-forge/linux-64                     Cached
  + ld_impl_linux-64        2.36.1  hea4e1c9_2             conda-forge/linux-64                     Cached
  + libblas                  3.9.0  8_openblas             conda-forge/linux-64                      11 KB
  + libcblas                 3.9.0  8_openblas             conda-forge/linux-64                      11 KB
  + libcurl                 7.78.0  h2574ce0_0             conda-forge/linux-64                     Cached
  + libdeflate                 1.6  h516909a_0             conda-forge/linux-64                      60 KB
  + libedit           3.1.20191231  he28a2e2_2             conda-forge/linux-64                     Cached
  + libev                     4.33  h516909a_1             conda-forge/linux-64                     Cached
  + libffi                   3.2.1  he1b5a44_1007          conda-forge/linux-64                      47 KB
  + libgcc-ng               11.1.0  hc902ee8_8             conda-forge/linux-64                     Cached
  + libgfortran-ng           7.5.0  h14aa051_19            conda-forge/linux-64                      22 KB
  + libgfortran4             7.5.0  h14aa051_19            conda-forge/linux-64                       1 MB
  + libgomp                 11.1.0  hc902ee8_8             conda-forge/linux-64                     Cached
  + liblapack                3.9.0  8_openblas             conda-forge/linux-64                      11 KB
  + libnghttp2              1.43.0  h812cca2_0             conda-forge/linux-64                     Cached
  + libopenblas             0.3.12  pthreads_hb3c22a3_1    conda-forge/linux-64                       8 MB
  + libssh2                 1.10.0  ha56f1ee_0             conda-forge/linux-64                     Cached
  + libstdcxx-ng            11.1.0  h56837e0_8             conda-forge/linux-64                     Cached
  + lzo                       2.10  h516909a_1000          conda-forge/linux-64                     Cached
  + ncurses                    6.2  h58526e2_4             conda-forge/linux-64                     Cached
  + nose                     1.3.7  py27h8c360ce_1004      conda-forge/linux-64                     216 KB
  + numpy                   1.16.5  py27h95a1406_0         conda-forge/linux-64                       4 MB
  + openssl                 1.1.1l  h7f98852_0             conda-forge/linux-64                     Cached
  + pandas                  0.24.2  py27hb3f55d8_0         conda-forge/linux-64                      11 MB
  + perl                    5.32.1  0_h7f98852_perl5       conda-forge/linux-64                      14 MB
  + pip                     20.1.1  pyh9f0ad1d_0           conda-forge/noarch                         1 MB
  + pybedtools               0.8.2  py27h6a42192_1         bioconda/linux-64                         12 MB
  + pysam                 0.16.0.1  py27ha863e18_1         bioconda/linux-64                          3 MB
  + python                  2.7.15  h5a48372_1011_cpython  conda-forge/linux-64                      12 MB
  + python-dateutil          2.8.1  py_0                   conda-forge/noarch                       220 KB
  + python-lzo                1.12  py27h42e1302_1001      conda-forge/linux-64                      18 KB
  + python_abi                 2.7  1_cp27mu               conda-forge/linux-64                       4 KB
  + pytz                    2020.1  pyh9f0ad1d_0           conda-forge/noarch                       227 KB
  + readline                   8.1  h46c0cb4_0             conda-forge/linux-64                     Cached
  + samtools                  1.10  h2e538c0_3             bioconda/linux-64                        338 KB
  + scipy                    1.2.1  py27h921218d_2         conda-forge/linux-64                      18 MB
  + setuptools              44.0.0  py27_0                 conda-forge/linux-64                     663 KB
  + six                     1.16.0  pyh6c4a22f_0           conda-forge/noarch                       Cached
  + sqlite                  3.36.0  h9cd32fc_0             conda-forge/linux-64                     Cached
  + tk                      8.6.11  h27826a3_1             conda-forge/linux-64                     Cached
  + wheel                   0.37.0  pyhd8ed1ab_1           conda-forge/noarch                       Cached
  + xz                       5.2.5  h516909a_1             conda-forge/linux-64                     Cached
  + zlib                    1.2.11  h516909a_1010          conda-forge/linux-64                     Cached

  Summary:

  Install: 55 packages

  Total download: 162 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: hap.py-0.3.14-py27h5c5a3ab_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/hap.py_1630675088075/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge              conda-forge
    _openmp_mutex:    4.5-1_gnu                    conda-forge
    bcftools:         1.10.2-h4f4756c_3            bioconda   
    bedtools:         2.30.0-h7d7f7ad_2            bioconda   
    bx-python:        0.8.9-py27h54ae540_2         bioconda   
    bzip2:            1.0.8-h7f98852_4             conda-forge
    c-ares:           1.17.2-h7f98852_0            conda-forge
    ca-certificates:  2021.5.30-ha878542_0         conda-forge
    certifi:          2019.11.28-py27h8c360ce_1    conda-forge
    gsl:              2.6-he838d99_2               conda-forge
    hap.py:           0.3.14-py27h5c5a3ab_0        local      
    htslib:           1.10.2-hd3b49d5_1            bioconda   
    krb5:             1.19.2-hcc1bbae_0            conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2            conda-forge
    libblas:          3.9.0-8_openblas             conda-forge
    libcblas:         3.9.0-8_openblas             conda-forge
    libcurl:          7.78.0-h2574ce0_0            conda-forge
    libdeflate:       1.6-h516909a_0               conda-forge
    libedit:          3.1.20191231-he28a2e2_2      conda-forge
    libev:            4.33-h516909a_1              conda-forge
    libffi:           3.2.1-he1b5a44_1007          conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8            conda-forge
    libgfortran-ng:   7.5.0-h14aa051_19            conda-forge
    libgfortran4:     7.5.0-h14aa051_19            conda-forge
    libgomp:          11.1.0-hc902ee8_8            conda-forge
    liblapack:        3.9.0-8_openblas             conda-forge
    libnghttp2:       1.43.0-h812cca2_0            conda-forge
    libopenblas:      0.3.12-pthreads_hb3c22a3_1   conda-forge
    libssh2:          1.10.0-ha56f1ee_0            conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8            conda-forge
    lzo:              2.10-h516909a_1000           conda-forge
    ncurses:          6.2-h58526e2_4               conda-forge
    nose:             1.3.7-py27h8c360ce_1004      conda-forge
    numpy:            1.16.5-py27h95a1406_0        conda-forge
    openssl:          1.1.1l-h7f98852_0            conda-forge
    pandas:           0.24.2-py27hb3f55d8_0        conda-forge
    perl:             5.32.1-0_h7f98852_perl5      conda-forge
    pip:              20.1.1-pyh9f0ad1d_0          conda-forge
    pybedtools:       0.8.2-py27h6a42192_1         bioconda   
    pysam:            0.16.0.1-py27ha863e18_1      bioconda   
    python:           2.7.15-h5a48372_1011_cpython conda-forge
    python-dateutil:  2.8.1-py_0                   conda-forge
    python-lzo:       1.12-py27h42e1302_1001       conda-forge
    python_abi:       2.7-1_cp27mu                 conda-forge
    pytz:             2020.1-pyh9f0ad1d_0          conda-forge
    readline:         8.1-h46c0cb4_0               conda-forge
    samtools:         1.10-h2e538c0_3              bioconda   
    scipy:            1.2.1-py27h921218d_2         conda-forge
    setuptools:       44.0.0-py27_0                conda-forge
    six:              1.16.0-pyh6c4a22f_0          conda-forge
    sqlite:           3.36.0-h9cd32fc_0            conda-forge
    tk:               8.6.11-h27826a3_1            conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1          conda-forge
    xz:               5.2.5-h516909a_1             conda-forge
    zlib:             1.2.11-h516909a_1010         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/hap.py_1630675088075/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/home/vsts/conda/conda-bld/hap.py_1630675088075/test_tmp
usage: Haplotype Comparison [-h] [-v] [-r REF] [-o REPORTS_PREFIX]
                            [--scratch-prefix SCRATCH_PREFIX] [--keep-scratch]
                            [-t {xcmp,ga4gh}] [-f FP_BEDFILE]
                            [--stratification STRAT_TSV]
                            [--stratification-region STRAT_REGIONS]
                            [--stratification-fixchr] [-V] [-X]
                            [--no-write-counts] [--output-vtc]
                            [--preserve-info] [--roc ROC] [--no-roc]
                            [--roc-regions ROC_REGIONS]
                            [--roc-filter ROC_FILTER] [--roc-delta ROC_DELTA]
                            [--ci-alpha CI_ALPHA] [--no-json]
                            [--location LOCATIONS] [--pass-only]
                            [--filters-only FILTERS_ONLY] [-R REGIONS_BEDFILE]
                            [-T TARGETS_BEDFILE] [-L] [--no-leftshift]
                            [--decompose] [-D] [--bcftools-norm] [--fixchr]
                            [--no-fixchr] [--bcf] [--somatic]
                            [--set-gt {half,hemi,het,hom,first}]
                            [--filter-nonref] [--convert-gvcf-to-vcf]
                            [--gender {male,female,auto,none}]
                            [--convert-gvcf-truth] [--convert-gvcf-query]
                            [--preprocess-truth] [--usefiltered-truth]
                            [--preprocessing-window-size PREPROCESS_WINDOW]
                            [--adjust-conf-regions] [--no-adjust-conf-regions]
                            [--unhappy] [-w WINDOW]
                            [--xcmp-enumeration-threshold MAX_ENUM]
                            [--xcmp-expand-hapblocks HB_EXPAND]
                            [--threads THREADS]
                            [--engine {xcmp,vcfeval,scmp-somatic,scmp-distance}]
                            [--engine-vcfeval-path ENGINE_VCFEVAL]
                            [--engine-vcfeval-template ENGINE_VCFEVAL_TEMPLATE]
                            [--scmp-distance ENGINE_SCMP_DISTANCE]
                            [--lose-match-distance ENGINE_SCMP_DISTANCE]
                            [--logfile LOGFILE] [--verbose | --quiet]
                            [_vcfs [_vcfs ...]]

positional arguments:
  _vcfs                 Two VCF files.

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         Show version number and exit.
  -r REF, --reference REF
                        Specify a reference file.
  -o REPORTS_PREFIX, --report-prefix REPORTS_PREFIX
                        Filename prefix for report output.
  --scratch-prefix SCRATCH_PREFIX
                        Directory for scratch files.
  --keep-scratch        Filename prefix for scratch report output.
  -t {xcmp,ga4gh}, --type {xcmp,ga4gh}
                        Annotation format in input VCF file.
  -f FP_BEDFILE, --false-positives FP_BEDFILE
                        False positive / confident call regions (.bed or
                        .bed.gz). Calls outside these regions will be labelled
                        as UNK.
  --stratification STRAT_TSV
                        Stratification file list (TSV format -- first column
                        is region name, second column is file name).
  --stratification-region STRAT_REGIONS
                        Add single stratification region, e.g.
                        --stratification-region TEST:test.bed
  --stratification-fixchr
                        Add chr prefix to stratification files if necessary
  -V, --write-vcf       Write an annotated VCF.
  -X, --write-counts    Write advanced counts and metrics.
  --no-write-counts     Do not write advanced counts and metrics.
  --output-vtc          Write VTC field in the final VCF which gives the
                        counts each position has contributed to.
  --preserve-info       When using XCMP, preserve and merge the INFO fields in
                        truth and query. Useful for ROC computation.
  --roc ROC             Select a feature to produce a ROC on (INFO feature,
                        QUAL, GQX, ...).
  --no-roc              Disable ROC computation and only output summary
                        statistics for more concise output.
  --roc-regions ROC_REGIONS
                        Select a list of regions to compute ROCs in. By
                        default, only the '*' region will produce ROC output
                        (aggregate variant counts).
  --roc-filter ROC_FILTER
                        Select a filter to ignore when making ROCs.
  --roc-delta ROC_DELTA
                        Minimum spacing between ROC QQ levels.
  --ci-alpha CI_ALPHA   Confidence level for Jeffrey's CI for recall,
                        precision and fraction of non-assessed calls.
  --no-json             Disable JSON file output.
  --location LOCATIONS, -l LOCATIONS
                        Comma-separated list of locations [use naming after
                        preprocessing], when not specified will use whole VCF.
  --pass-only           Keep only PASS variants.
  --filters-only FILTERS_ONLY
                        Specify a comma-separated list of filters to apply (by
                        default all filters are ignored / passed on.
  -R REGIONS_BEDFILE, --restrict-regions REGIONS_BEDFILE
                        Restrict analysis to given (sparse) regions (using -R
                        in bcftools).
  -T TARGETS_BEDFILE, --target-regions TARGETS_BEDFILE
                        Restrict analysis to given (dense) regions (using -T
                        in bcftools).
  -L, --leftshift       Left-shift variants safely.
  --no-leftshift        Do not left-shift variants safely.
  --decompose           Decompose variants into primitives. This results in
                        more granular counts.
  -D, --no-decompose    Do not decompose variants into primitives.
  --bcftools-norm       Enable preprocessing through bcftools norm -c x -D
                        (requires external preprocessing to be switched on).
  --fixchr              Add chr prefix to VCF records where necessary
                        (default: auto, attempt to match reference).
  --no-fixchr           Do not add chr prefix to VCF records (default: auto,
                        attempt to match reference).
  --bcf                 Use BCF internally. This is the default when the input
                        file is in BCF format already. Using BCF can speed up
                        temp file access, but may fail for VCF files that have
                        broken headers or records that don't comply with the
                        header.
  --somatic             Assume the input file is a somatic call file and
                        squash all columns into one, putting all FORMATs into
                        INFO + use half genotypes (see also --set-gt). This
                        will replace all sample columns and replace them with
                        a single one.
  --set-gt {half,hemi,het,hom,first}
                        This is used to treat Strelka somatic files Possible
                        values for this parameter: half / hemi / het / hom /
                        half to assign one of the following genotypes to the
                        resulting sample: 1 | 0/1 | 1/1 | ./1. This will
                        replace all sample columns and replace them with a
                        single one.
  --filter-nonref       Remove any variants genotyped as <NON_REF>.
  --convert-gvcf-to-vcf
                        Convert the input set from genome VCF format to a VCF
                        before processing.
  --gender {male,female,auto,none}
                        Specify sex. This determines how haploid calls on chrX
                        get treated: for male samples, all non-ref calls (in
                        the truthset only when running through hap.py) are
                        given a 1/1 genotype.
  --convert-gvcf-truth  Convert the truth set from genome VCF format to a VCF
                        before processing.
  --convert-gvcf-query  Convert the query set from genome VCF format to a VCF
                        before processing.
  --preprocess-truth    Preprocess truth file with same settings as query
                        (default is to accept truth in original format).
  --usefiltered-truth   Use filtered variant calls in truth file (by default,
                        only PASS calls in the truth file are used)
  --preprocessing-window-size PREPROCESS_WINDOW
                        Preprocessing window size (variants further apart than
                        that size are not expected to interfere).
  --adjust-conf-regions
                        Adjust confident regions to include variant locations.
                        Note this will only include variants that are included
                        in the CONF regions already when viewing with
                        bcftools; this option only makes sure insertions are
                        padded correctly in the CONF regions (to capture
                        these, both the base before and after must be
                        contained in the bed file).
  --no-adjust-conf-regions
                        Do not adjust confident regions for insertions.
  --unhappy, --no-haplotype-comparison
                        Disable haplotype comparison (only count direct GT
                        matches as TP).
  -w WINDOW, --window-size WINDOW
                        Minimum distance between variants such that they fall
                        into the same superlocus.
  --xcmp-enumeration-threshold MAX_ENUM
                        Enumeration threshold / maximum number of sequences to
                        enumerate per block.
  --xcmp-expand-hapblocks HB_EXPAND
                        Expand haplotype blocks by this many basepairs left
                        and right.
  --threads THREADS     Number of threads to use.
  --engine {xcmp,vcfeval,scmp-somatic,scmp-distance}
                        Comparison engine to use.
  --engine-vcfeval-path ENGINE_VCFEVAL
                        This parameter should give the path to the "rtg"
                        executable. The default is rtg
  --engine-vcfeval-template ENGINE_VCFEVAL_TEMPLATE
                        Vcfeval needs the reference sequence formatted in its
                        own file format (SDF -- run rtg format -o ref.SDF
                        ref.fa). You can specify this here to save time when
                        running hap.py with vcfeval. If no SDF folder is
                        specified, hap.py will create a temporary one.
  --scmp-distance ENGINE_SCMP_DISTANCE
                        For distance-based matching (vcfeval and scmp), this
                        is the distance between variants to use.
  --lose-match-distance ENGINE_SCMP_DISTANCE
                        For distance-based matching (vcfeval and scmp), this
                        is the distance between variants to use.
  --logfile LOGFILE     Write logging information into file rather than to
                        stderr
  --verbose             Raise logging level from warning to info.
  --quiet               Set logging level to output errors only.
usage: Somatic Comparison [-h] -o OUTPUT [-l LOCATION] [-R REGIONS_BEDFILE]
                          [-T TARGETS_BEDFILE] [-f FP] [-a AMBI] [--ambi-fp]
                          [--no-ambi-fp] [--count-unk] [--no-count-unk] [-e]
                          [-r REF] [--scratch-prefix SCRATCH_PREFIX]
                          [--keep-scratch] [--continue] [-P]
                          [--feature-table {hcc.strelka.snv,hcc.pisces.snv,hcc.mutect.snv,hcc.varscan2.indel,admix.strelka.snv,generic,hcc.pisces.indel,hcc.strelka.indel,admix.strelka.indel,hcc.varscan2.snv,hcc.mutect.indel}]
                          [--happy-stats] [--bam BAMS] [--normalize-truth]
                          [--normalize-query] [-N] [--fixchr-truth]
                          [--fixchr-query] [--fix-chr-truth] [--fix-chr-query]
                          [--no-fixchr-truth] [--no-fixchr-query]
                          [--no-order-check]
                          [--roc {varscan2.indel,strelka.snv.qss,mutect.snv,strelka.snv,strelka.indel.evs,varscan2.snv,mutect.indel,strelka.indel,strelka.snv.vqsr}]
                          [--bin-afs] [--af-binsize AF_STRAT_BINSIZE]
                          [--af-truth AF_STRAT_TRUTH]
                          [--af-query AF_STRAT_QUERY] [-FN]
                          [--fp-region-size FPR_SIZE] [--ci-level CI_LEVEL]
                          [--logfile LOGFILE] [--verbose | --quiet]
                          truth query

positional arguments:
  truth                 Truth VCF file
  query                 Query VCF file

optional arguments:
  -h, --help            show this help message and exit
  -o OUTPUT, --output OUTPUT
                        Output file prefix for statistics and feature table
                        (when selected)
  -l LOCATION, --location LOCATION
                        Location for bcftools view (e.g. chr1)
  -R REGIONS_BEDFILE, --restrict-regions REGIONS_BEDFILE
                        Restrict analysis to given (sparse) regions (using -R
                        in bcftools).
  -T TARGETS_BEDFILE, --target-regions TARGETS_BEDFILE
                        Restrict analysis to given (dense) regions (using -T
                        in bcftools).
  -f FP, --false-positives FP
                        False-positive region bed file to distinguish UNK from
                        FP
  -a AMBI, --ambiguous AMBI
                        Ambiguous region bed file(s) to distinguish from FP
                        (e.g. variant only observed in some replicates)
  --ambi-fp             Use FP calls from ambiguous region files also.
  --no-ambi-fp          Do not use FP calls from ambiguous region files also.
  --count-unk           Assume the truth set covers the whole genome and only
                        count FPs in regions specified by the truth VCF or
                        ambiguous/false-positive regions.
  --no-count-unk        Do not use FP calls from ambiguous region files also.
  -e, --explain_ambiguous
                        print a table giving the number of ambiguous events
                        per category
  -r REF, --reference REF
                        Specify a reference file.
  --scratch-prefix SCRATCH_PREFIX
                        Filename prefix for scratch report output.
  --keep-scratch        Filename prefix for scratch report output.
  --continue            Continue from scratch space (i.e. use VCFs in there if
                        they already exist).
  -P, --include-nonpass
                        Use to include failing variants in comparison.
  --feature-table {hcc.strelka.snv,hcc.pisces.snv,hcc.mutect.snv,hcc.varscan2.indel,admix.strelka.snv,generic,hcc.pisces.indel,hcc.strelka.indel,admix.strelka.indel,hcc.varscan2.snv,hcc.mutect.indel}
                        Select a feature table to output.
  --happy-stats         Generate summary.csv.
  --bam BAMS            pass one or more BAM files for feature table
                        extraction
  --normalize-truth     Enable running of bcftools norm on the truth file.
  --normalize-query     Enable running of bcftools norm on the query file.
  -N, --normalize-all   Enable running of bcftools norm on both truth and
                        query file.
  --fixchr-truth        Add chr prefix to truth file (default: true).
  --fixchr-query        Add chr prefix to query file (default: true).
  --fix-chr-truth       Same as --fixchr-truth.
  --fix-chr-query       Same as --fixchr-query.
  --no-fixchr-truth     Disable chr replacement for truth (default: false).
  --no-fixchr-query     Add chr prefix to query file (default: false).
  --no-order-check      Disable checking the order of TP features (dev
                        feature).
  --roc {varscan2.indel,strelka.snv.qss,mutect.snv,strelka.snv,strelka.indel.evs,varscan2.snv,mutect.indel,strelka.indel,strelka.snv.vqsr}
                        Create a ROC-style table. This is caller specific -
                        this will override the --feature-table switch!
  --bin-afs             Stratify into different AF buckets. This needs to have
                        features available for getting the AF both in truth
                        and query variants.
  --af-binsize AF_STRAT_BINSIZE
                        Bin size for AF binning (should be < 1). Multiple bin
                        sizes can be specified using a comma, e.g.
                        0.1,0.2,0.5,0.2 will split at 0.1, 0.3, 0.8 and 1.0.
  --af-truth AF_STRAT_TRUTH
                        Feature name to use for retrieving AF for truth
                        variants (TP and FN)
  --af-query AF_STRAT_QUERY
                        Feature name to use for retrieving AF for query
                        variants (FP/UNK/AMBI)
  -FN, --count-filtered-fn
                        Count filtered vs. absent FN numbers. This requires
                        the -P switch (to use all variants) and either the
                        --feature-table or --roc switch.
  --fp-region-size FPR_SIZE
                        How to obtain the normalisation constant for FP rate.
                        By default, this will use the FP region bed file size
                        when using --count-unk and the size of all reference
                        contigs that overlap with the location specified in -l
                        otherwise. This can be overridden with: 1) a number of
                        nucleotides, or 2) "auto" to use the lengths of all
                        contigs that have calls. The resulting value is used
                        as fp.region.size.
  --ci-level CI_LEVEL   Confidence level for precision/recall confidence
                        intervals (default: 0.95)
  --logfile LOGFILE     Write logging information into file rather than to
                        stderr
  --verbose             Raise logging level from warning to info.
  --quiet               Set logging level to output errors only.

Resource usage statistics from testing hap.py:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: hap.py-0.3.14-py27h5c5a3ab_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


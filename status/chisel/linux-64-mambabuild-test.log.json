  Package                               Version  Build                  Channel                                   Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex                           0.1  conda_forge            conda-forge/linux-64                    Cached
  + _openmp_mutex                           4.5  1_gnu                  conda-forge/linux-64                    Cached
  + backports                               1.0  py27_1                 conda-forge/linux-64                      4 KB
  + backports.functools_lru_cache         1.6.1  py_0                   conda-forge/noarch                        8 KB
  + backports_abc                           0.5  py27_0                 conda-forge/linux-64                      6 KB
  + bcftools                               1.13  h3a49de5_0             bioconda/linux-64                       873 KB
  + bzip2                                 1.0.8  h7f98852_4             conda-forge/linux-64                    Cached
  + c-ares                               1.17.2  h7f98852_0             conda-forge/linux-64                    Cached
  + ca-certificates                   2021.5.30  ha878542_0             conda-forge/linux-64                    Cached
  + certifi                          2019.11.28  py27h8c360ce_1         conda-forge/linux-64                    149 KB
  + chisel                                1.0.0  pyhdfd78af_0           /home/vsts/conda/conda-bld/linux-64      45 KB
  + cycler                               0.10.0  py27_0                 conda-forge/linux-64                     13 KB
  + freetype                             2.10.4  h0708190_1             conda-forge/linux-64                    Cached
  + functools32                         3.2.3.2  py27_2                 conda-forge/linux-64                     22 KB
  + futures                               3.3.0  py27h8c360ce_1         conda-forge/linux-64                     26 KB
  + gawk                                  5.1.0  h7f98852_0             conda-forge/linux-64                      1 MB
  + gsl                                     2.6  he838d99_2             conda-forge/linux-64                      3 MB
  + htslib                                 1.13  h9093b5e_0             bioconda/linux-64                         2 MB
  + icu                                    64.2  he1b5a44_1             conda-forge/linux-64                     13 MB
  + kiwisolver                            1.1.0  py27h9e3301b_1         conda-forge/linux-64                     88 KB
  + krb5                                 1.19.2  hcc1bbae_0             conda-forge/linux-64                    Cached
  + ld_impl_linux-64                     2.36.1  hea4e1c9_2             conda-forge/linux-64                    Cached
  + libblas                               3.9.0  8_openblas             conda-forge/linux-64                     11 KB
  + libcblas                              3.9.0  8_openblas             conda-forge/linux-64                     11 KB
  + libcurl                              7.78.0  h2574ce0_0             conda-forge/linux-64                    Cached
  + libdeflate                              1.7  h7f98852_5             conda-forge/linux-64                    Cached
  + libedit                        3.1.20191231  he28a2e2_2             conda-forge/linux-64                    Cached
  + libev                                  4.33  h516909a_1             conda-forge/linux-64                    Cached
  + libffi                                3.2.1  he1b5a44_1007          conda-forge/linux-64                     47 KB
  + libgcc-ng                            11.1.0  hc902ee8_8             conda-forge/linux-64                    Cached
  + libgfortran-ng                        7.5.0  h14aa051_19            conda-forge/linux-64                     22 KB
  + libgfortran4                          7.5.0  h14aa051_19            conda-forge/linux-64                      1 MB
  + libgomp                              11.1.0  hc902ee8_8             conda-forge/linux-64                    Cached
  + liblapack                             3.9.0  8_openblas             conda-forge/linux-64                     11 KB
  + libnghttp2                           1.43.0  h812cca2_0             conda-forge/linux-64                    Cached
  + libopenblas                          0.3.12  pthreads_hb3c22a3_1    conda-forge/linux-64                      8 MB
  + libpng                               1.6.37  h21135ba_2             conda-forge/linux-64                    Cached
  + libssh2                              1.10.0  ha56f1ee_0             conda-forge/linux-64                    Cached
  + libstdcxx-ng                         11.1.0  h56837e0_8             conda-forge/linux-64                    Cached
  + matplotlib-base                       2.2.5  py27h250f245_1         conda-forge/linux-64                      7 MB
  + ncurses                                 6.2  h58526e2_4             conda-forge/linux-64                    Cached
  + numpy                                1.16.5  py27h95a1406_0         conda-forge/linux-64                      4 MB
  + openssl                              1.1.1l  h7f98852_0             conda-forge/linux-64                    Cached
  + pandas                               0.24.2  py27hb3f55d8_0         conda-forge/linux-64                     11 MB
  + patsy                                 0.5.1  py_0                   conda-forge/noarch                      187 KB
  + perl                                 5.32.1  0_h7f98852_perl5       conda-forge/linux-64                    Cached
  + pip                                  20.1.1  pyh9f0ad1d_0           conda-forge/noarch                        1 MB
  + pyparsing                             2.4.7  pyh9f0ad1d_0           conda-forge/noarch                      Cached
  + python                               2.7.15  h5a48372_1011_cpython  conda-forge/linux-64                     12 MB
  + python-dateutil                       2.8.1  py_0                   conda-forge/noarch                      220 KB
  + python_abi                              2.7  1_cp27mu               conda-forge/linux-64                      4 KB
  + pytz                                 2020.1  pyh9f0ad1d_0           conda-forge/noarch                      227 KB
  + readline                                8.1  h46c0cb4_0             conda-forge/linux-64                    Cached
  + samtools                               1.13  h8c37831_0             bioconda/linux-64                       397 KB
  + scipy                                 1.2.1  py27h921218d_2         conda-forge/linux-64                     18 MB
  + seaborn                               0.9.0  py_2                   conda-forge/noarch                      162 KB
  + setuptools                           44.0.0  py27_0                 conda-forge/linux-64                    663 KB
  + singledispatch                        3.6.1  pyh44b312d_0           conda-forge/noarch                       12 KB
  + six                                  1.16.0  pyh6c4a22f_0           conda-forge/noarch                      Cached
  + sqlite                               3.36.0  h9cd32fc_0             conda-forge/linux-64                    Cached
  + statsmodels                          0.10.2  py27hc1659b7_0         conda-forge/linux-64                     10 MB
  + subprocess32                          3.5.4  py27h516909a_0         conda-forge/linux-64                     46 KB
  + tk                                   8.6.11  h27826a3_1             conda-forge/linux-64                    Cached
  + tornado                               5.1.1  py27h14c3975_1000      conda-forge/linux-64                    642 KB
  + wheel                                0.37.0  pyhd8ed1ab_1           conda-forge/noarch                      Cached
  + xz                                    5.2.5  h516909a_1             conda-forge/linux-64                    Cached
  + zlib                                 1.2.11  h516909a_1010          conda-forge/linux-64                    Cached

  Summary:

  Install: 67 packages

  Total download: 96 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: chisel-1.0.0-pyhdfd78af_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/chisel_1631098740529/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    _libgcc_mutex:                 0.1-conda_forge              conda-forge
    _openmp_mutex:                 4.5-1_gnu                    conda-forge
    backports:                     1.0-py27_1                   conda-forge
    backports.functools_lru_cache: 1.6.1-py_0                   conda-forge
    backports_abc:                 0.5-py27_0                   conda-forge
    bcftools:                      1.13-h3a49de5_0              bioconda   
    bzip2:                         1.0.8-h7f98852_4             conda-forge
    c-ares:                        1.17.2-h7f98852_0            conda-forge
    ca-certificates:               2021.5.30-ha878542_0         conda-forge
    certifi:                       2019.11.28-py27h8c360ce_1    conda-forge
    chisel:                        1.0.0-pyhdfd78af_0           local      
    cycler:                        0.10.0-py27_0                conda-forge
    freetype:                      2.10.4-h0708190_1            conda-forge
    functools32:                   3.2.3.2-py27_2               conda-forge
    futures:                       3.3.0-py27h8c360ce_1         conda-forge
    gawk:                          5.1.0-h7f98852_0             conda-forge
    gsl:                           2.6-he838d99_2               conda-forge
    htslib:                        1.13-h9093b5e_0              bioconda   
    icu:                           64.2-he1b5a44_1              conda-forge
    kiwisolver:                    1.1.0-py27h9e3301b_1         conda-forge
    krb5:                          1.19.2-hcc1bbae_0            conda-forge
    ld_impl_linux-64:              2.36.1-hea4e1c9_2            conda-forge
    libblas:                       3.9.0-8_openblas             conda-forge
    libcblas:                      3.9.0-8_openblas             conda-forge
    libcurl:                       7.78.0-h2574ce0_0            conda-forge
    libdeflate:                    1.7-h7f98852_5               conda-forge
    libedit:                       3.1.20191231-he28a2e2_2      conda-forge
    libev:                         4.33-h516909a_1              conda-forge
    libffi:                        3.2.1-he1b5a44_1007          conda-forge
    libgcc-ng:                     11.1.0-hc902ee8_8            conda-forge
    libgfortran-ng:                7.5.0-h14aa051_19            conda-forge
    libgfortran4:                  7.5.0-h14aa051_19            conda-forge
    libgomp:                       11.1.0-hc902ee8_8            conda-forge
    liblapack:                     3.9.0-8_openblas             conda-forge
    libnghttp2:                    1.43.0-h812cca2_0            conda-forge
    libopenblas:                   0.3.12-pthreads_hb3c22a3_1   conda-forge
    libpng:                        1.6.37-h21135ba_2            conda-forge
    libssh2:                       1.10.0-ha56f1ee_0            conda-forge
    libstdcxx-ng:                  11.1.0-h56837e0_8            conda-forge
    matplotlib-base:               2.2.5-py27h250f245_1         conda-forge
    ncurses:                       6.2-h58526e2_4               conda-forge
    numpy:                         1.16.5-py27h95a1406_0        conda-forge
    openssl:                       1.1.1l-h7f98852_0            conda-forge
    pandas:                        0.24.2-py27hb3f55d8_0        conda-forge
    patsy:                         0.5.1-py_0                   conda-forge
    perl:                          5.32.1-0_h7f98852_perl5      conda-forge
    pip:                           20.1.1-pyh9f0ad1d_0          conda-forge
    pyparsing:                     2.4.7-pyh9f0ad1d_0           conda-forge
    python:                        2.7.15-h5a48372_1011_cpython conda-forge
    python-dateutil:               2.8.1-py_0                   conda-forge
    python_abi:                    2.7-1_cp27mu                 conda-forge
    pytz:                          2020.1-pyh9f0ad1d_0          conda-forge
    readline:                      8.1-h46c0cb4_0               conda-forge
    samtools:                      1.13-h8c37831_0              bioconda   
    scipy:                         1.2.1-py27h921218d_2         conda-forge
    seaborn:                       0.9.0-py_2                   conda-forge
    setuptools:                    44.0.0-py27_0                conda-forge
    singledispatch:                3.6.1-pyh44b312d_0           conda-forge
    six:                           1.16.0-pyh6c4a22f_0          conda-forge
    sqlite:                        3.36.0-h9cd32fc_0            conda-forge
    statsmodels:                   0.10.2-py27hc1659b7_0        conda-forge
    subprocess32:                  3.5.4-py27h516909a_0         conda-forge
    tk:                            8.6.11-h27826a3_1            conda-forge
    tornado:                       5.1.1-py27h14c3975_1000      conda-forge
    wheel:                         0.37.0-pyhd8ed1ab_1          conda-forge
    xz:                            5.2.5-h516909a_1             conda-forge
    zlib:                          1.2.11-h516909a_1010         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/chisel_1631098740529/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/home/vsts/conda/conda-bld/chisel_1631098740529/test_tmp
usage: chisel [-h] [-x RUNDIR] -t TUMOR -n NORMAL -r REFERENCE -l LISTPHASED
              [-b SIZE] [-k BLOCKSIZE] [-c CHROMOSOMES] [-m MINREADS]
              [-p MAXPLOIDY] [-K UPPERK] [--bcftools BCFTOOLS]
              [--samtools SAMTOOLS] [--seed SEED] [-j JOBS]

CHISEL command to run the complete pipeline starting from the 4 required data:
(1) Barcoded single-cell BAM; (2) Matched-normal BAM; (3) Reference genome;
(4) Phased VCF.

optional arguments:
  -h, --help            show this help message and exit
  -x RUNDIR, --rundir RUNDIR
                        Running directory (default: current directory)
  -t TUMOR, --tumor TUMOR
                        Barcoded single-cell BAM file
  -n NORMAL, --normal NORMAL
                        Matched-normal BAM file
  -r REFERENCE, --reference REFERENCE
                        Reference genome
  -l LISTPHASED, --listphased LISTPHASED
                        Phased SNPs file (lines of heterozygous germline SNPs
                        must contain either 0|1 or 1|0)
  -b SIZE, --size SIZE  Bin size, with or without "kb" or "Mb"
  -k BLOCKSIZE, --blocksize BLOCKSIZE
                        Size of the haplotype blocks (default: 50kb, use 0 to
                        disable)
  -c CHROMOSOMES, --chromosomes CHROMOSOMES
                        Space-separeted list of chromosomes between apices
                        (default: "chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8
                        chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17
                        chr18 chr19 chr20 chr21 chr22")
  -m MINREADS, --minreads MINREADS
                        Minimum number total reads to select cells (default:
                        500000)
  -p MAXPLOIDY, --maxploidy MAXPLOIDY
                        Maximum total copy number to consider for balanced
                        cluster (default: 4, corresponding to a WGD)
  -K UPPERK, --upperk UPPERK
                        Maximum number of bin clusters (default: 100, use 0 to
                        consider maximum number of clusters)
  --bcftools BCFTOOLS   Path to the directory to "bcftools" executable,
                        required in default mode (default: bcftools is
                        directly called as it is in user $PATH)
  --samtools SAMTOOLS   Path to the directory to "samtools" executable,
                        required in default mode (default: samtools is
                        directly called as it is in user $PATH)
  --seed SEED           Random seed for replication (default: None)
  -j JOBS, --jobs JOBS  Number of parallele jobs to use (default: equal to
                        number of available processors)
usage: chisel_calling [-h] [-x RUNDIR] [-A SENSITIVITY] [-P MAXPLOIDY]
                      [-K UPPERK] [--seed SEED] [-j JOBS]
                      [INPUT]

CHISEL command to re-run the inference of allele- and haplotype-specific copy
numbers, cell clustering, and plotting. This steps starts from estimated RDRs
and BAFs.

positional arguments:
  INPUT                 Input file with combined RDR and BAF per bin and per
                        cell (default: combo/combo.tsv)

optional arguments:
  -h, --help            show this help message and exit
  -x RUNDIR, --rundir RUNDIR
                        Running directory (default: current directory)
  -A SENSITIVITY, --sensitivity SENSITIVITY
                        Sensitivity of model selection for ploidy (default: 1,
                        increase this parameter to lower sensitivity to noisy
                        data, adjust this value (e.g. 2, 4, ..., 10, ...) to
                        better deal with high-variance data (e.g. low
                        coverage, small number of cells, low number of phased
                        SNPs, etc...)
  -P MAXPLOIDY, --maxploidy MAXPLOIDY
                        Maximum total copy number to consider for balanced
                        cluster (default: 4, corresponding to a WGD)
  -K UPPERK, --upperk UPPERK
                        Maximum number of bin clusters (default: 100, use 0 to
                        consider maximum number of clusters)
  --seed SEED           Random seed for replication (default: None)
  -j JOBS, --jobs JOBS  Number of parallele jobs to use (default: equal to
                        number of available processors)
usage: chisel_cloning [-h] [-x RUNDIR] [-f MAXDIFF] [-s MINSIZE]
                      [-r REFINEMENT] [--seed SEED]
                      [INPUT]

CHISEL command to run the pipeline starting from inferred copy numbers.

positional arguments:
  INPUT                 Input file with combined RDR and BAF per bin and per
                        cell

optional arguments:
  -h, --help            show this help message and exit
  -x RUNDIR, --rundir RUNDIR
                        Running directory (default: current directory)
  -f MAXDIFF, --maxdiff MAXDIFF
                        Maximum haplotype-specific distance between the genome
                        of cells in the same clone (default: 0.06, when -1 is
                        chosen the maximum cluster method of SciPy is used)
  -s MINSIZE, --minsize MINSIZE
                        Minimum number of cells in a subpopulation to define a
                        clone (default: 14)
  -r REFINEMENT, --refinement REFINEMENT
                        Maximum difference to assign noisy cells to the
                        closest clone (default: 0.0, note that 1.0 can be used
                        to force the assigment of all cells)
  --seed SEED           Random seed for replication (default: None)
usage: chisel_plotting [-h] [-m CLONEMAP] [-f FIGFORMAT] [-s SAMPLE]
                       [--excludenoisy] [--gridsize GRIDSIZE]
                       [--plotsize PLOTSIZE] [--clussize CLUSSIZE]
                       [--xmax XMAX] [--xmin XMIN] [--ymax YMAX] [--ymin YMIN]
                       [INPUT]

CHISEL command to re-create the plots.

positional arguments:
  INPUT                 Input file with inferred copy numbers (default:
                        calls/calls.tsv)

optional arguments:
  -h, --help            show this help message and exit
  -m CLONEMAP, --clonemap CLONEMAP
                        Clone map (default: not used, the cells will be
                        clustered for plotting purposes)
  -f FIGFORMAT, --figformat FIGFORMAT
                        Format of output figures (default: png, the only other
                        option is pdf)
  -s SAMPLE, --sample SAMPLE
                        Number of cells to sample (default: 20)
  --excludenoisy        Exclude noisy cells from plots (default: False)
  --gridsize GRIDSIZE   Grid dimenstions specified as comma-separated numbers
                        (default: 12,6)
  --plotsize PLOTSIZE   Plot dimenstions for RDR-BAF plots, specified as
                        comma-separated numbers (default: 5,1.5)
  --clussize CLUSSIZE   Grid dimenstions for clustered plots, specified as
                        comma-separated numbers (default: 5,3)
  --xmax XMAX           Maximum x-axis value (default: None)
  --xmin XMIN           Minimum x-axis value (default: None)
  --ymax YMAX           Maximum x-axis value (default: None)
  --ymin YMIN           Minimum x-axis value (default: None)
usage: chisel_pseudonormal [-h] -r REFERENCE [-x RUNDIR] [-e THRESHOLD]
                           [-b SIZE] [-c CHROMOSOMES] [-m MINREADS]
                           [--samtools SAMTOOLS] [-j JOBS] [--tmpdir TMPDIR]
                           [-n NORMAL]
                           INPUT

CHISEL command to generate a pseudo-matched normal sample by extracting
diploid cells from a barcoded single-cell BAM file.

positional arguments:
  INPUT                 Barcoded single-cell BAM file

optional arguments:
  -h, --help            show this help message and exit
  -r REFERENCE, --reference REFERENCE
                        Reference genome
  -x RUNDIR, --rundir RUNDIR
                        Running directory (default: current directory)
  -e THRESHOLD, --threshold THRESHOLD
                        Minimum fraction of diploid genome to select diploid
                        cells (default: 0.9)
  -b SIZE, --size SIZE  Bin size, with or without "kb" or "Mb"
  -c CHROMOSOMES, --chromosomes CHROMOSOMES
                        Space-separeted list of chromosomes between apices
                        (default: "chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8
                        chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17
                        chr18 chr19 chr20 chr21 chr22")
  -m MINREADS, --minreads MINREADS
                        Minimum number total reads to select cells (default:
                        100000)
  --samtools SAMTOOLS   Path to the directory to "samtools" executable,
                        required in default mode (default: samtools is
                        directly called as it is in user $PATH)
  -j JOBS, --jobs JOBS  Number of parallele jobs to use (default: equal to
                        number of available processors)
  --tmpdir TMPDIR       Temporary directory in running directory (default:
                        _TMP)
  -n NORMAL, --normal NORMAL
                        Name of the generated pseudo matched-normal BAM file
                        (default: pseudonormal.bam)
usage: chisel_prep [-h] [-r REFERENCE] [-x RUNDIR] [-o OUTPUT]
                   [--rexpname REXPNAME] [--rexpread REXPREAD] [--barcodeonly]
                   [--noduplicates] [--keeptmpdir]
                   [--barcodelength BARCODELENGTH] [--bcftools BCFTOOLS]
                   [--samtools SAMTOOLS] [--bwa BWA] [-j JOBS] [--seed SEED]
                   INPUT [INPUT ...]

CHISEL command to create a barcoded BAM file from single-cell FASTQs (or gz-
compressed FASTQs), single-cell BAMs, or a `RG:Z:`-barcoded BAM files without
`CB:Z:` tags. When single-cell FASTQs or BAMs are provided a CELL name is
assigned to each file (through either filename or table) and the same cell
barcode will be assigned to all corresponding reads, but a different RG tag as
they are considered as different repetitions of sequencing of the same cell.
Specifically, when a table of inputs is not provied, for FASTQs each CELL name
is extracted from the filename through the provided regular expression
(default matches Illumina standard format), for BAMs basename is used as CELL
name. When single-cell FASTQs are provided a READ value is also assigned to
each file (through either filename or table) and files with the same filename
when removing READ values are considered as pairs of sequencing read mates.
Input files, CELL names, and possible READ values can be provided through a
table of inputs.

positional arguments:
  INPUT                 Input FASTQs, BAMs, or TSV file with different
                        behaviors: .........................................
                        (1) FASTQs -- specified in a directory DIR as
                        `DIR/*.fastq` or `DIR/*.fastq.gz` -- will be barcoded
                        and aligned with (optionally) marked duplicates into a
                        barcoded BAM file; .................................
                        (2) BAMs -- specified in a directory DIR as
                        `DIR/*.bam` -- will be barcoded and aligned with
                        (optionally) marked duplicates into a barcoded BAM
                        file; ..............................................
                        (3) a single BAM file with unique cells names in the
                        field `RG:Z:` will be converted into a barcoded BAM
                        file with the additional `CB:Z:` tag; ..............
                        (4) a tab-separated table of inputs (TSV with optional
                        header starting with `#`) with two columns: the first
                        column is an input file (FASTQ or BAM) and the second
                        column is the corresponding cell name. When FASTQs are
                        provided, a third column can be optionally specified
                        to indicate the read name in paired-end sequencing,
                        e.g., indicating either R1 or R2 for the first or
                        second mate of paired-end reads, respectively. If a
                        third column is not present, FASTQs are assumed to be
                        from single-end sequencing.

optional arguments:
  -h, --help            show this help message and exit
  -r REFERENCE, --reference REFERENCE
                        Reference genome, which is mandatory in FASTQ mode
                        (default: None)
  -x RUNDIR, --rundir RUNDIR
                        Running directory (default: current directory)
  -o OUTPUT, --output OUTPUT
                        Output name in running directory (default:
                        barcodedcells.bam)
  --rexpname REXPNAME   Regulare expression to extract cell name from input
                        FASTQ filenames (default:
                        `(.*)_S.*_L.*_R[1|2]_001.fastq.*`)
  --rexpread REXPREAD   Regulare expression to extract cell name from input
                        FASTQ filenames (default:
                        `.*_S.*_L.*_(R[1|2])_001.fastq.*`)
  --barcodeonly         Only compute barcodes but do not run aligning pipeline
                        (default: False)
  --noduplicates        Do not perform marking duplicates and recalibration
                        with Picard tools (default: False)
  --keeptmpdir          Do not erase temporary directory (default: False)
  --barcodelength BARCODELENGTH
                        Length of barcodes (default: 12)
  --bcftools BCFTOOLS   Path to the directory to "bcftools" executable
                        (default: in $PATH)
  --samtools SAMTOOLS   Path to the directory to "samtools" executable
                        (default: in $PATH)
  --bwa BWA             Path to the directory to "bwa" executable (default: in
                        $PATH)
  -j JOBS, --jobs JOBS  Number of parallele jobs to use (default: equal to
                        number of available processors)
  --seed SEED           Random seed for replication (default: None)
usage: chisel_bedding [-h] [-x RUNDIR] [--rawcalls] [--noextending] [-j JOBS]
                      [INPUT]

CHISEL command to generate a BED file for each cell with the corresponding
CHISEL's results.

positional arguments:
  INPUT                 Input file with inferred copy numbers (default:
                        calls/calls.tsv)

optional arguments:
  -h, --help            show this help message and exit
  -x RUNDIR, --rundir RUNDIR
                        Running directory (default: current directory)
  --rawcalls            Use raw copy numbers instead of consensus corrected
                        ones (default: False)
  --noextending         Merge consecutive bins only if they are neighboring
                        (default: False, segments are extended to fill gaps)
  -j JOBS, --jobs JOBS  Number of parallele jobs to use (default: equal to
                        number of available processors)

Resource usage statistics from testing chisel:
   Process count: 3
   CPU time: Sys=0:00:00.1, User=0:00:00.3
   Memory: 83.6M
   Disk usage: 20B
   Time elapsed: 0:00:04.2


TEST END: chisel-1.0.0-pyhdfd78af_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


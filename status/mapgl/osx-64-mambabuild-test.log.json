  Package              Version  Build               Channel                                    Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + bx-python           0.8.11  py39hc8e2088_1      bioconda/osx-64                          934 KB
  + ca-certificates  2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + libblas              3.9.0  11_osx64_openblas   conda-forge/osx-64                       Cached
  + libcblas             3.9.0  11_osx64_openblas   conda-forge/osx-64                       Cached
  + libcxx              12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libffi                 3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + libgfortran          5.0.0  9_3_0_h6c81a4c_23   conda-forge/osx-64                       Cached
  + libgfortran5         9.3.0  h6c81a4c_23         conda-forge/osx-64                       Cached
  + liblapack            3.9.0  11_osx64_openblas   conda-forge/osx-64                       Cached
  + libopenblas         0.3.17  openmp_h3351f45_1   conda-forge/osx-64                       Cached
  + llvm-openmp         12.0.1  hda6cdc1_1          conda-forge/osx-64                       Cached
  + lzo                   2.10  haf1e3a3_1000       conda-forge/osx-64                       Cached
  + mapgl                1.3.1  pyh5ca1d4c_0        /Users/runner/conda/conda-bld/osx-64      23 KB
  + ncurses                6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + numpy               1.21.2  py39h7eed0ac_0      conda-forge/osx-64                       Cached
  + openssl             1.1.1l  h0d85af4_0          conda-forge/osx-64                       Cached
  + pip                 21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + python               3.9.7  hd187cdc_0_cpython  conda-forge/osx-64                       Cached
  + python-lzo            1.12  py39h62b3f28_1003   conda-forge/osx-64                        17 KB
  + python_abi             3.9  2_cp39              conda-forge/osx-64                       Cached
  + readline               8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + setuptools          58.0.2  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + six                 1.16.0  pyh6c4a22f_0        conda-forge/noarch                       Cached
  + sqlite              3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + tk                  8.6.11  h5dbffcc_1          conda-forge/osx-64                       Cached
  + tzdata               2021a  he74cb21_1          conda-forge/noarch                       Cached
  + wheel               0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                   5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + zlib                1.2.11  h7795811_1010       conda-forge/osx-64                       Cached

  Summary:

  Install: 29 packages

  Total download: 974 KB

─────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: mapgl-1.3.1-pyh5ca1d4c_0.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/mapgl_1631052878429/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla


The following NEW packages will be INSTALLED:

    bx-python:       0.8.11-py39hc8e2088_1    bioconda   
    ca-certificates: 2021.5.30-h033912b_0     conda-forge
    libblas:         3.9.0-11_osx64_openblas  conda-forge
    libcblas:        3.9.0-11_osx64_openblas  conda-forge
    libcxx:          12.0.1-habf9029_0        conda-forge
    libffi:          3.3-h046ec9c_2           conda-forge
    libgfortran:     5.0.0-9_3_0_h6c81a4c_23  conda-forge
    libgfortran5:    9.3.0-h6c81a4c_23        conda-forge
    liblapack:       3.9.0-11_osx64_openblas  conda-forge
    libopenblas:     0.3.17-openmp_h3351f45_1 conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1        conda-forge
    lzo:             2.10-haf1e3a3_1000       conda-forge
    mapgl:           1.3.1-pyh5ca1d4c_0       local      
    ncurses:         6.2-h2e338ed_4           conda-forge
    numpy:           1.21.2-py39h7eed0ac_0    conda-forge
    openssl:         1.1.1l-h0d85af4_0        conda-forge
    pip:             21.2.4-pyhd8ed1ab_0      conda-forge
    python:          3.9.7-hd187cdc_0_cpython conda-forge
    python-lzo:      1.12-py39h62b3f28_1003   conda-forge
    python_abi:      3.9-2_cp39               conda-forge
    readline:        8.1-h05e3726_0           conda-forge
    setuptools:      58.0.2-py39h6e9494a_0    conda-forge
    six:             1.16.0-pyh6c4a22f_0      conda-forge
    sqlite:          3.36.0-h23a322b_0        conda-forge
    tk:              8.6.11-h5dbffcc_1        conda-forge
    tzdata:          2021a-he74cb21_1         conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1      conda-forge
    xz:              5.2.5-haf1e3a3_1         conda-forge
    zlib:            1.2.11-h7795811_1010     conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/mapgl_1631052878429/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla
export SRC_DIR=/Users/runner/conda/conda-bld/mapgl_1631052878429/test_tmp
import: 'map_GL'
import: 'map_GL'
usage: mapGL.py [-h] [-o FILE] [-t FLOAT] [-g GAP] [-v {info,debug,silent}]
                [-d] [-i {BED,narrowPeak}] [-f] [-n] [-p {gain,loss}]
                input tree qname tname alignments [alignments ...]

Label input regions as orthologous, gained in the query species, or lost in
the target species. Chain alignment files are used to map features from query
to target and one or more outgroup species. Features that map directly from
query to target are labeled as orthologs, and ortholgous coordinates in the
target species are given in the output. Non-mapping features are assigned as
gains or losses based on a maximum-parsimony algorithm predicting
presence/absence in the most-recent common ancestor. Based on bnMapper.py, by
Ogert Denas (James Taylor lab) (https://github.com/bxlab/bx-
python/blob/master/scripts/bnMapper.py)

positional arguments:
  input                 Input regions to process. Should be in standard bed
                        format. Only the first four bed fields will be used.
  tree                  Tree, in standard Newick format, with or without
                        branch lengths, describing relationships of query and
                        target species to outgroups. May be given as a string
                        or file.
  qname                 Name of the query species. Regions from this species
                        will be mapped to target species coordinates.
  tname                 Name of the target species. Regions from the query
                        species will be mapped to coordinates from this
                        species.
  alignments            Alignment files (.chain or .pkl): One for the target
                        species and one per outgroup species. Files should be
                        named according to the convention:
                        qname.tname[...].chain.gz, where qname is the query
                        species name and tname is the name of the
                        target/outgroup species. Names used for qname and
                        tname must match names used in the newick tree.

optional arguments:
  -h, --help            show this help message and exit
  -o FILE, --output FILE
                        Output file. Default stdout. (default: stdout)
  -t FLOAT, --threshold FLOAT
                        Mapping threshold i.e., |elem| * threshold <=
                        |mapped_elem|. Default = 0.0 -- equivalent to
                        accepting a single-base overlap. On the other end of
                        the spectrum, setting this value to 1 is equivalent to
                        only accepting full-length overlaps. (default: 0.0)
  -g GAP, --gap GAP     Ignore elements with an insertion/deletion of this or
                        bigger size. Using the default value (-1) will allow
                        gaps of any size. (default: -1)
  -v {info,debug,silent}, --verbose {info,debug,silent}
                        Verbosity level (default: info)
  -d, --drop_split      If elements span multiple chains, report them as non-
                        mapping. These will then be reported as gains or
                        losses, according to the maximum-parsimony
                        predictions. This is the default mapping behavior for
                        bnMapper. By default, mapGL.pys will follow the
                        mapping convention used by liftOver, whereas the
                        longest mapped alignment is reported for split
                        elements. (default: False)
  -i {BED,narrowPeak}, --in_format {BED,narrowPeak}
                        Input file format. (Default: BED) (default: BED)
  -f, --full_labels     Attempt to predict gain/loss events on all branches of
                        the tree, not just query/target branches. Output will
                        include a comma-delimited list of gain/loss events
                        from any/all affected branches. (default: False)
  -n, --no_prune        Do not attempt to disambiguate the root state to
                        resolve ambiguous gain/loss predictions. Instead,
                        label affected features as 'ambiguous'. (default:
                        False)
  -p {gain,loss}, --priority {gain,loss}
                        When resolving ambiguous trees, prioritize sequence
                        gain or sequence loss. This can be thought of as
                        assigning a lower cost to sequence insertions relative
                        to deletions, or vice-versa. When priority='gain',
                        ambiguity is resolved by assigning 0 state to the root
                        node, such that sequence presence on a descendant
                        branch will be interpreted as a gain. When
                        priority='loss', ambiguity is resolved by asssigning
                        state 1 to the root node, such that sequence absence
                        in a descendant node is interpreted as a sequence
                        loss. Default=gain (default: gain)

Adam Diehl (Boyle Lab)

Resource usage statistics from testing mapgl:
   Process count: 4
   CPU time: Sys=0:00:00.1, User=0:00:00.1
   Memory: 26.1M
   Disk usage: 20B
   Time elapsed: 0:00:04.1


TEST END: mapgl-1.3.1-pyh5ca1d4c_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


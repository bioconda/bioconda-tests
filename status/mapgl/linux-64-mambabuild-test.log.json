  Package               Version  Build                Channel                                   Size
──────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex           0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex           4.5  1_gnu                conda-forge/linux-64                    Cached
  + bx-python            0.8.11  py39h5d76eff_1       bioconda/linux-64                         1 MB
  + ca-certificates   2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + ld_impl_linux-64     2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas               3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcblas              3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libffi                  3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng            11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng       11.1.0  h69a702a_8           conda-forge/linux-64                    Cached
  + libgfortran5         11.1.0  h6c583b3_8           conda-forge/linux-64                    Cached
  + libgomp              11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack             3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libopenblas          0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                    Cached
  + libstdcxx-ng         11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + lzo                    2.10  h516909a_1000        conda-forge/linux-64                    Cached
  + mapgl                 1.3.1  pyh5ca1d4c_0         /home/vsts/conda/conda-bld/linux-64      23 KB
  + ncurses                 6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + numpy                1.21.2  py39hdbf815f_0       conda-forge/linux-64                    Cached
  + openssl              1.1.1l  h7f98852_0           conda-forge/linux-64                    Cached
  + pip                  21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + python                3.9.7  h49503c6_0_cpython   conda-forge/linux-64                    Cached
  + python-lzo             1.12  py39h265373d_1003    conda-forge/linux-64                     19 KB
  + python_abi              3.9  2_cp39               conda-forge/linux-64                    Cached
  + readline                8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + setuptools           58.0.2  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + six                  1.16.0  pyh6c4a22f_0         conda-forge/noarch                      Cached
  + sqlite               3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tk                   8.6.11  h27826a3_1           conda-forge/linux-64                    Cached
  + tzdata                2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                    5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                 1.2.11  h516909a_1010        conda-forge/linux-64                    Cached

  Summary:

  Install: 33 packages

  Total download: 1 MB

──────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: mapgl-1.3.1-pyh5ca1d4c_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/mapgl_1631052478249/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    bx-python:        0.8.11-py39h5d76eff_1      bioconda   
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    lzo:              2.10-h516909a_1000         conda-forge
    mapgl:            1.3.1-pyh5ca1d4c_0         local      
    ncurses:          6.2-h58526e2_4             conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    openssl:          1.1.1l-h7f98852_0          conda-forge
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    python:           3.9.7-h49503c6_0_cpython   conda-forge
    python-lzo:       1.12-py39h265373d_1003     conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    readline:         8.1-h46c0cb4_0             conda-forge
    setuptools:       58.0.2-py39hf3d152e_0      conda-forge
    six:              1.16.0-pyh6c4a22f_0        conda-forge
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    tk:               8.6.11-h27826a3_1          conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/mapgl_1631052478249/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh
export SRC_DIR=/home/vsts/conda/conda-bld/mapgl_1631052478249/test_tmp
import: 'map_GL'
import: 'map_GL'
usage: mapGL.py [-h] [-o FILE] [-t FLOAT] [-g GAP] [-v {info,debug,silent}]
                [-d] [-i {BED,narrowPeak}] [-f] [-n] [-p {gain,loss}]
                input tree qname tname alignments [alignments ...]

Label input regions as orthologous, gained in the query species, or lost in
the target species. Chain alignment files are used to map features from query
to target and one or more outgroup species. Features that map directly from
query to target are labeled as orthologs, and ortholgous coordinates in the
target species are given in the output. Non-mapping features are assigned as
gains or losses based on a maximum-parsimony algorithm predicting
presence/absence in the most-recent common ancestor. Based on bnMapper.py, by
Ogert Denas (James Taylor lab) (https://github.com/bxlab/bx-
python/blob/master/scripts/bnMapper.py)

positional arguments:
  input                 Input regions to process. Should be in standard bed
                        format. Only the first four bed fields will be used.
  tree                  Tree, in standard Newick format, with or without
                        branch lengths, describing relationships of query and
                        target species to outgroups. May be given as a string
                        or file.
  qname                 Name of the query species. Regions from this species
                        will be mapped to target species coordinates.
  tname                 Name of the target species. Regions from the query
                        species will be mapped to coordinates from this
                        species.
  alignments            Alignment files (.chain or .pkl): One for the target
                        species and one per outgroup species. Files should be
                        named according to the convention:
                        qname.tname[...].chain.gz, where qname is the query
                        species name and tname is the name of the
                        target/outgroup species. Names used for qname and
                        tname must match names used in the newick tree.

optional arguments:
  -h, --help            show this help message and exit
  -o FILE, --output FILE
                        Output file. Default stdout. (default: stdout)
  -t FLOAT, --threshold FLOAT
                        Mapping threshold i.e., |elem| * threshold <=
                        |mapped_elem|. Default = 0.0 -- equivalent to
                        accepting a single-base overlap. On the other end of
                        the spectrum, setting this value to 1 is equivalent to
                        only accepting full-length overlaps. (default: 0.0)
  -g GAP, --gap GAP     Ignore elements with an insertion/deletion of this or
                        bigger size. Using the default value (-1) will allow
                        gaps of any size. (default: -1)
  -v {info,debug,silent}, --verbose {info,debug,silent}
                        Verbosity level (default: info)
  -d, --drop_split      If elements span multiple chains, report them as non-
                        mapping. These will then be reported as gains or
                        losses, according to the maximum-parsimony
                        predictions. This is the default mapping behavior for
                        bnMapper. By default, mapGL.pys will follow the
                        mapping convention used by liftOver, whereas the
                        longest mapped alignment is reported for split
                        elements. (default: False)
  -i {BED,narrowPeak}, --in_format {BED,narrowPeak}
                        Input file format. (Default: BED) (default: BED)
  -f, --full_labels     Attempt to predict gain/loss events on all branches of
                        the tree, not just query/target branches. Output will
                        include a comma-delimited list of gain/loss events
                        from any/all affected branches. (default: False)
  -n, --no_prune        Do not attempt to disambiguate the root state to
                        resolve ambiguous gain/loss predictions. Instead,
                        label affected features as 'ambiguous'. (default:
                        False)
  -p {gain,loss}, --priority {gain,loss}
                        When resolving ambiguous trees, prioritize sequence
                        gain or sequence loss. This can be thought of as
                        assigning a lower cost to sequence insertions relative
                        to deletions, or vice-versa. When priority='gain',
                        ambiguity is resolved by assigning 0 state to the root
                        node, such that sequence presence on a descendant
                        branch will be interpreted as a gain. When
                        priority='loss', ambiguity is resolved by asssigning
                        state 1 to the root node, such that sequence absence
                        in a descendant node is interpreted as a sequence
                        loss. Default=gain (default: gain)

Adam Diehl (Boyle Lab)

Resource usage statistics from testing mapgl:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.3M
   Disk usage: 24B
   Time elapsed: 0:00:02.1


TEST END: mapgl-1.3.1-pyh5ca1d4c_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


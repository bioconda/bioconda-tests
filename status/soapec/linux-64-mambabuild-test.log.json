  Package          Version  Build          Channel                                   Size
───────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge    conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu          conda-forge/linux-64                    Cached
  + libgcc-ng       11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libstdcxx-ng    11.1.0  h56837e0_8     conda-forge/linux-64                    Cached
  + soapec            2.03  h9a82719_5     /home/vsts/conda/conda-bld/linux-64     166 KB
  + zlib            1.2.11  h516909a_1010  conda-forge/linux-64                    Cached

  Summary:

  Install: 7 packages

  Total download: 166 KB

───────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: soapec-2.03-h9a82719_5.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/soapec_1630838298467/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge      conda-forge
    _openmp_mutex: 4.5-1_gnu            conda-forge
    libgcc-ng:     11.1.0-hc902ee8_8    conda-forge
    libgomp:       11.1.0-hc902ee8_8    conda-forge
    libstdcxx-ng:  11.1.0-h56837e0_8    conda-forge
    soapec:        2.03-h9a82719_5      local      
    zlib:          1.2.11-h516909a_1010 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/soapec_1630838298467/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/home/vsts/conda/conda-bld/soapec_1630838298467/test_tmp

Program:	Corrector_AR
Version:	v2.03
Author:		BGI-ShenZhen
CompileDate:	Mar 26 2021 time: 08:49:17

Usage:	Corrector_AR [OPTION] <prefix.freq.cz> <prefix.freq.cz.len> [prefix.space.freq.cz] [prefix.space.freq.cz.len] <reads_file_list>

	Three mandatory input files:
	1.<prefix.freq.cz>: frequency file of consecutive kmer, in *.freq.cz compressed format, as the ouput of 'KmerFreq_AR_v2.0' program.
	2.<prefix.freq.cz.len>: compressed block length file of consecutive kmer, in *.freq.cz.len format, as the ouput of 'KmerFreq_AR_v2.0' program.
	3.<reads_files_list>: the address list of reads file, each reads files take a line, reads file from the same pair-end lane should be neighbored.

	Two optional input files:
	1.[prefix.space.freq.cz]: frequency file of space kmer, in *.space.freq.cz compressed format, as the ouput of 'KmerFreq_AR_v2.0' program.
	2.[prefix.space.freq.cz.len]: compressed block length file of space kmer, in *.space.freq.cz.len format, as the ouput of 'KmerFreq_AR_v2.0' program.
	Program will not use space kmer in error correction if these two file are not set.

	-k <int>  Set size of consecutive kmer, default=17.
	             Note: this value must be set to be same as that used in Kmer_freq program.
	-l <int>  Set the low frequency cutoff of consecutive kmer, default=3.
	             Note: the consecutive Kmers with frequency lower than(<=) this cutoff will be taken as
	             false Kmers, while the others as authentic Kmers.
	-K <int>  Set size of space kmer, default=0.
	             Note: this value must be set to be same as that used in Kmer_freq program. 
	             If it is default value K=0, program will not use space kmer in error correction.
	-s <int>  Set the size of space seed, default=0.
	             Note: this vaule must be set to be same as that used in Kmer_freq program.
	-L <int>  Set the low frequency cutoff of space kmer, default=3.
	             Note: the space Kmers with frequency lower than(<=) this cutoff will be taken as
	             false Kmers, while the others as authentic Kmers.
	-m <int>  Set the minimum length of a continuous high-freq-kmer region, default=10.
	             Note: use the Branch and bounding tree method, needs a continuous high
	             frequency region as the starting point. Here we set the minimum Kmer 
	             number in the continuous high-freq-kmer region.
	-c <int>  Set the maximum change allowed in one read, default=2.
	             Note: set the allowed base number to be changed, when achieve this cutoff,
	             the program will turn to trim data instead of correction.
	-n <int>  Set the maximum node number allowed in the branch and bound tree, default=15000000.
	             Note: this setting affects the maximum memory that will be used.
	-a <int>  Set whether remain all the data(1) or not(0), default=0.
	             Note: 1:remain all the data, 0:trim some low quality and suspicious data
	             to get more accurate data; if set '1', no need to set -x and -r
	-Q <int>  Set the ASCII shift of the quality value(Quality_shift), default=64.
	             Note: usually 64 or 33 for Illumina data.
	-e <int>  Set whether trim(1) suspicious region at the end of reads according to Q_value<=2 or not(0), default=0.
	             Note: 0:no, trim low quality and suspicious data directly; 1:yes, just trim 
	             Q_value<=2 continues region.
	-w <int>  Set whether trim(1) error bases with Q_value<=2 instead of correct(0) it , default=0.
	             Note: when base in Q_value<=2 continues region is detected error base, 
	             0:correct this base; 1:trim this end of reads.
	-q <int>  Set Quality threshold of error bases, default=40.
	             Note: bases with quality value higher than this threshold will not be 
	             corrected when using BBT method.
	-x <int>  Set the trimmed length at low-quality ends instead of correct them, default=KmerSize/2.
	             Note: on the trimmed ends or real ends of reads, sequencing errors tend to be 
	             concentrate, and is hard to correct all of them. In order to get higher accuracy
	             in the final result, we further trimmed some length at these low-quality regions.
	-r <int>  Set the minimum length of trimmed read, default=50.
	             Note:  This value set the minimum length of final reads that will be output.
	-t <int>  Set the thread number, default=1.
	             Note: the more thread number, the high speed, however, this should be less than 
	             the number of CPU cores.
	-j <int>  Set whether convert read1 and read2 corrected file into Pair-end file: 1, yes, 0, no; default=1.
	             Note: program may discard some low quality reads in corrected file, it should be
	             convert into Pair-end file for using in some other porgram(for example: SOAPdenovo),
	             pair and single file as the result file when it set to "-j 1". If you have only 
	             single-end reads, please do not use the function, that is, set option "-j 0".
	             The default value is to deal with paired-end reads.
	-o <int>  Set output file format, default=1.
	             Note: 0, fasta compressed file(*.fa.gz); 1, fastq compressed file(*.fq.gz);
	             2, fasta text file(*.fa); 3, fastq text file(*.fq). If input read files are in fasta
	             format and ouput in fastq format, program will output all quality char=40+Quality_shift.
	-h        Show detailed help

Example:
1.Only use consecutive kmer for correction: ./Corrector_AR -k 17 -l 3 -Q 33 -t 4 test.freq.cz test.freq.cz.len read.lst >corr.cout 2>corr.cerr
2.Use consecutive kmer and space kmer simultaneously for correction: ./Corrector_AR -k 17 -l 3 -K 17 -s 6 -L 3 -Q 33 -t 4 test.freq.cz test.freq.cz.len test.space.freq.cz test.space.freq.cz.len read.lst >corr.cout 2>corr.cerr


Resource usage statistics from testing soapec:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: soapec-2.03-h9a82719_5.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


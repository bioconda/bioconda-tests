  Package                    Version  Build               Channel                                   Size
──────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex                0.1  conda_forge         conda-forge/linux-64                    Cached
  + _openmp_mutex                4.5  1_gnu               conda-forge/linux-64                    Cached
  + attrs                     21.2.0  pyhd8ed1ab_0        conda-forge/noarch                      Cached
  + bzip2                      1.0.8  h7f98852_4          conda-forge/linux-64                    Cached
  + c-ares                    1.17.2  h7f98852_0          conda-forge/linux-64                    Cached
  + ca-certificates        2021.5.30  ha878542_0          conda-forge/linux-64                    Cached
  + htslib                    1.10.2  hd3b49d5_1          bioconda/linux-64                         2 MB
  + importlib-metadata         4.8.1  py38h578d9bd_0      conda-forge/linux-64                     32 KB
  + importlib_metadata         4.8.1  hd8ed1ab_0          conda-forge/noarch                        4 KB
  + intervaltree               3.0.2  py_0                conda-forge/noarch                       23 KB
  + jsonschema                 3.2.0  py38h32f6830_1      conda-forge/linux-64                     90 KB
  + krb5                      1.19.2  hcc1bbae_0          conda-forge/linux-64                    Cached
  + ld_impl_linux-64          2.36.1  hea4e1c9_2          conda-forge/linux-64                    Cached
  + libcurl                   7.78.0  h2574ce0_0          conda-forge/linux-64                    Cached
  + libdeflate                   1.6  h516909a_0          conda-forge/linux-64                     60 KB
  + libedit             3.1.20191231  he28a2e2_2          conda-forge/linux-64                    Cached
  + libev                       4.33  h516909a_1          conda-forge/linux-64                    Cached
  + libffi                       3.3  h58526e2_2          conda-forge/linux-64                    Cached
  + libgcc-ng                 11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libgomp                   11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libnghttp2                1.43.0  h812cca2_0          conda-forge/linux-64                    Cached
  + libssh2                   1.10.0  ha56f1ee_0          conda-forge/linux-64                    Cached
  + libstdcxx-ng              11.1.0  h56837e0_8          conda-forge/linux-64                    Cached
  + ncurses                      6.2  h58526e2_4          conda-forge/linux-64                    Cached
  + openssl                   1.1.1l  h7f98852_0          conda-forge/linux-64                    Cached
  + paragraph                    2.3  h21f15d8_1          /home/vsts/conda/conda-bld/linux-64      31 MB
  + pip                       21.2.4  pyhd8ed1ab_0        conda-forge/noarch                      Cached
  + pyrsistent                0.17.3  py38h497a2fe_2      conda-forge/linux-64                     90 KB
  + pysam                   0.16.0.1  py38hbdc2ae9_1      bioconda/linux-64                         3 MB
  + python                    3.8.10  h49503c6_1_cpython  conda-forge/linux-64                     26 MB
  + python_abi                   3.8  2_cp38              conda-forge/linux-64                      4 KB
  + readline                     8.1  h46c0cb4_0          conda-forge/linux-64                    Cached
  + setuptools                57.4.0  py38h578d9bd_0      conda-forge/linux-64                    934 KB
  + six                       1.16.0  pyh6c4a22f_0        conda-forge/noarch                      Cached
  + sortedcontainers           2.4.0  pyhd8ed1ab_0        conda-forge/noarch                       26 KB
  + sqlite                    3.36.0  h9cd32fc_0          conda-forge/linux-64                    Cached
  + tk                        8.6.11  h27826a3_1          conda-forge/linux-64                    Cached
  + wheel                     0.37.0  pyhd8ed1ab_1        conda-forge/noarch                      Cached
  + xz                         5.2.5  h516909a_1          conda-forge/linux-64                    Cached
  + zipp                       3.5.0  pyhd8ed1ab_0        conda-forge/noarch                      Cached
  + zlib                      1.2.11  h516909a_1010       conda-forge/linux-64                    Cached

  Summary:

  Install: 41 packages

  Total download: 62 MB

──────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: paragraph-2.3-h21f15d8_1.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/paragraph_1630779718041/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    _libgcc_mutex:      0.1-conda_forge           conda-forge
    _openmp_mutex:      4.5-1_gnu                 conda-forge
    attrs:              21.2.0-pyhd8ed1ab_0       conda-forge
    bzip2:              1.0.8-h7f98852_4          conda-forge
    c-ares:             1.17.2-h7f98852_0         conda-forge
    ca-certificates:    2021.5.30-ha878542_0      conda-forge
    htslib:             1.10.2-hd3b49d5_1         bioconda   
    importlib-metadata: 4.8.1-py38h578d9bd_0      conda-forge
    importlib_metadata: 4.8.1-hd8ed1ab_0          conda-forge
    intervaltree:       3.0.2-py_0                conda-forge
    jsonschema:         3.2.0-py38h32f6830_1      conda-forge
    krb5:               1.19.2-hcc1bbae_0         conda-forge
    ld_impl_linux-64:   2.36.1-hea4e1c9_2         conda-forge
    libcurl:            7.78.0-h2574ce0_0         conda-forge
    libdeflate:         1.6-h516909a_0            conda-forge
    libedit:            3.1.20191231-he28a2e2_2   conda-forge
    libev:              4.33-h516909a_1           conda-forge
    libffi:             3.3-h58526e2_2            conda-forge
    libgcc-ng:          11.1.0-hc902ee8_8         conda-forge
    libgomp:            11.1.0-hc902ee8_8         conda-forge
    libnghttp2:         1.43.0-h812cca2_0         conda-forge
    libssh2:            1.10.0-ha56f1ee_0         conda-forge
    libstdcxx-ng:       11.1.0-h56837e0_8         conda-forge
    ncurses:            6.2-h58526e2_4            conda-forge
    openssl:            1.1.1l-h7f98852_0         conda-forge
    paragraph:          2.3-h21f15d8_1            local      
    pip:                21.2.4-pyhd8ed1ab_0       conda-forge
    pyrsistent:         0.17.3-py38h497a2fe_2     conda-forge
    pysam:              0.16.0.1-py38hbdc2ae9_1   bioconda   
    python:             3.8.10-h49503c6_1_cpython conda-forge
    python_abi:         3.8-2_cp38                conda-forge
    readline:           8.1-h46c0cb4_0            conda-forge
    setuptools:         57.4.0-py38h578d9bd_0     conda-forge
    six:                1.16.0-pyh6c4a22f_0       conda-forge
    sortedcontainers:   2.4.0-pyhd8ed1ab_0        conda-forge
    sqlite:             3.36.0-h9cd32fc_0         conda-forge
    tk:                 8.6.11-h27826a3_1         conda-forge
    wheel:              0.37.0-pyhd8ed1ab_1       conda-forge
    xz:                 5.2.5-h516909a_1          conda-forge
    zipp:               3.5.0-pyhd8ed1ab_0        conda-forge
    zlib:               1.2.11-h516909a_1010      conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/paragraph_1630779718041/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/home/vsts/conda/conda-bld/paragraph_1630779718041/test_tmp
usage: Multigrmpy.py [-h] -i INPUT -m MANIFEST -o OUTPUT [-A]
                     [--infer-read-haplotypes] -r REFERENCE
                     [--threads THREADS] [--keep-scratch]
                     [--scratch-dir SCRATCH_DIR] [--grmpy GRMPY]
                     [--logfile LOGFILE]
                     [--graph-sequence-matching GRAPH_SEQUENCE_MATCHING]
                     [--klib-sequence-matching KLIB_SEQUENCE_MATCHING]
                     [--kmer-sequence-matching KMER_SEQUENCE_MATCHING]
                     [--bad-align-uniq-kmer-len BAD_ALIGN_UNIQ_KMER_LEN]
                     [--no-alt-splitting] [--verbose | --quiet | --debug]
                     [-G GENOTYPING_PARAMETERS | -M MAX_READS_PER_EVENT]
                     [--vcf-split {lines,full,by_id,superloci} | -p READ_LENGTH | -l MAX_REF_NODE_LENGTH | --retrieve-reference-sequence | --graph-type {alleles,haplotypes} | --ins-info-key INS_INFO_KEY]

optional arguments:
  -h, --help            show this help message and exit
  -i INPUT, --input INPUT
                        Input file of variants. Must be either JSON or VCF.
  -m MANIFEST, --manifest MANIFEST
                        Manifest of samples with path and bam stats.
  -o OUTPUT, --output OUTPUT
                        Output directory.
  -A, --write-alignments
                        Write alignment JSON files into the output folder
                        (large!).
  --infer-read-haplotypes
                        Infer read haplotype paths
  -r REFERENCE, --reference-sequence REFERENCE
                        Reference genome fasta file.
  --threads THREADS, -t THREADS
                        Number of events to process in parallel.
  --keep-scratch        Do not delete temp files.
  --scratch-dir SCRATCH_DIR
                        Directory for temp files
  --grmpy GRMPY         Path to the grmpy executable
  --logfile LOGFILE     Write logging information into file rather than to
                        stderr
  --graph-sequence-matching GRAPH_SEQUENCE_MATCHING
                        Use graph aligner.
  --klib-sequence-matching KLIB_SEQUENCE_MATCHING
                        Use klib smith waterman aligner.
  --kmer-sequence-matching KMER_SEQUENCE_MATCHING
                        Use kmer aligner.
  --bad-align-uniq-kmer-len BAD_ALIGN_UNIQ_KMER_LEN
                        Kmer length for uniqueness check during read
                        filtering.
  --no-alt-splitting    Keep long insertion sequences in the graph rather than
                        trimming them at the read / padding length.
  --verbose             Raise logging level from warning to info.
  --quiet               Set logging level to output errors only.
  --debug               Log debug level events.
  -G GENOTYPING_PARAMETERS, --genotyping-parameters GENOTYPING_PARAMETERS
                        JSON string or file with genotyping model parameters.
  -M MAX_READS_PER_EVENT, --max-reads-per-event MAX_READS_PER_EVENT
                        Maximum number of reads to process for a single event.
  --vcf-split {lines,full,by_id,superloci}
                        Mode for splitting the input VCF: lines (default) --
                        one graph per record ; full -- one graph for the whole
                        VCF ; by_id -- use the VCF id column to group adjacent
                        records ; superloci -- split VCF into blocks where
                        records are separated by at least read-length
                        characters
  -p READ_LENGTH, --read-length READ_LENGTH
                        Read length -- this is used to add reference padding
                        when converting VCF to graphs.
  -l MAX_REF_NODE_LENGTH, --max-ref-node-length MAX_REF_NODE_LENGTH
                        Maximum length of reference nodes before they get
                        padded and truncated.
  --retrieve-reference-sequence
                        Retrieve reference sequence for REF nodes
  --graph-type {alleles,haplotypes}
                        Type of complex graph to generate. Same as --graph-
                        type in vcf2paragraph.
  --ins-info-key INS_INFO_KEY
                        Key in INFO field to indicate sequence of symbolic
                        <INS>
paragraph -r <reference> -g <graph(s)> -b <input cram(s)/bam(s)> [optional arguments]

Command line options:
  --bad-align-frac arg (=0.800000012)          Fraction of read that needs to 
                                               be mapped in order for it to be 
                                               used.
  --bad-align-nonuniq arg (=1)                 Remove reads that are not mapped
                                               uniquely.
  --bad-align-uniq-kmer-len arg (=0)           Kmer length for uniqueness check
                                               during read filtering.
  -b [ --bam ] arg                             Input BAM file(s) for read 
                                               extraction. We align all reads 
                                               to all graphs.
  --graph-sequence-matching arg (=1)           Enables smith waterman graph 
                                               alignment
  -g [ --graph-spec ] arg                      JSON file(s) describing the 
                                               graph(s)
  -z [ --gzip-output ] [=arg(=1)] (=0)         gzip-compress output files. If 
                                               -O is used, output file names 
                                               are appended with .gz
  -h [ --help ]                                produce help message and exit
  --help-defaults                              produce tab-delimited list of 
                                               command line options and their 
                                               default values
  --help-md                                    produce help message 
                                               pre-formatted as a markdown file
                                               section and exit
  --klib-sequence-matching arg (=0)            Use klib smith-waterman aligner.
  --kmer-sequence-matching arg (=0)            Use kmer aligner.
  --log-async arg (=0)                         Enable / disable async logging.
  --log-file arg                               Log to a file instead of stderr.
  --log-level arg (=info)                      Set log level (error, warning, 
                                               info).
  -M [ --max-reads-per-event ] arg (=10000)    Maximum number of reads to 
                                               process for a single event.
  -a [ --output-alignments ] arg (=0)          Output alignments for every read
                                               (large).
  --output-detailed-read-counts arg (=0)       Output detailed read counts not 
                                               just for paths but also for each
                                               node/edge on the paths.
  -E [ --output-everything ] arg (=0)          Write all information we have 
                                               into JSON. (=enable all 
                                               --output-* above)
  -o [ --output-file ] arg                     Output file name. Will output to
                                               stdout if '-' or neither of 
                                               output-file or output-folder 
                                               provided.
  -A [ --output-filtered-alignments ] arg (=0) Output alignments for every read
                                               even when it was filtered 
                                               (larger).
  -O [ --output-folder ] arg                   Output folder path. paragraph 
                                               will attempt to create the 
                                               folder but not the entire path. 
                                               Will output to stdout if neither
                                               of output-file or output-folder 
                                               provided. If specified, 
                                               paragraph will produce one 
                                               output file for each input file 
                                               bearing the same name.
  --output-node-coverage arg (=0)              Output coverage for nodes
  --output-path-coverage arg (=0)              Output coverage for paths
  --output-read-haplotypes arg (=0)            Output graph haplotypes 
                                               supported by reads.
  -v [ --output-variants ] arg (=0)            Output variants not present in 
                                               the graph.
  --path-sequence-matching arg (=1)            Enable path seeding aligner
  -r [ --reference ] arg                       Reference genome fasta file.
  --response-file arg                          file with more command line 
                                               arguments
  -T [ --target-regions ] arg                  Comma-separated list of target 
                                               regions, e.g. chr1:1-20,chr2:2-4
                                               0. This overrides the target 
                                               regions in the graph spec.
  --threads arg (=2)                           Number of threads to use for 
                                               parallel alignment.
  --validate-alignments [=arg(=1)] (=0)        Use information in the input bam
                                               read names to collect statistics
                                               about the accuracy of 
                                               alignments. Requires bam file 
                                               produced with simulate-reads.sh
  --variant-min-frac arg (=0.00999999978)      Minimum fraction of reads 
                                               required to report a variant.
  --variant-min-reads arg (=3)                 Minimum number of reads required
                                               to report a variant.
  -v [ --version ]                             print program version 
                                               information


grmpy -r <reference> -g <graphs> -m <manifest> [optional arguments]

Command line options:
  -A [ --alignment-output-folder ] arg      Output folder for alignments. Note 
                                            these can become very large and are
                                            only requiredfor curation / 
                                            visualisation or faster reanalysis.
  --bad-align-frac arg (=0.800000012)       Fraction of read that needs to be 
                                            mapped in order for it to be used.
  --bad-align-uniq-kmer-len arg (=0)        Kmer length for uniqueness check 
                                            during read filtering.
  -G [ --genotyping-parameters ] arg        JSON file with genotyping model 
                                            parameters
  --graph-sequence-matching arg (=1)        Enables smith waterman graph 
                                            alignment
  -g [ --graph-spec ] arg                   JSON file(s) describing the 
                                            graph(s)
  -z [ --gzip-output ] [=arg(=1)] (=0)      gzip-compress output files. If -O 
                                            is used, output file names are 
                                            appended with .gz
  -h [ --help ]                             produce help message and exit
  --help-defaults                           produce tab-delimited list of 
                                            command line options and their 
                                            default values
  --help-md                                 produce help message pre-formatted 
                                            as a markdown file section and exit
  --infer-read-haplotypes [=arg(=1)] (=0)   Infer haplotype paths using read 
                                            and fragment information.
  --klib-sequence-matching arg (=0)         Use klib smith-waterman aligner.
  --kmer-sequence-matching arg (=0)         Use kmer aligner.
  --log-async arg (=0)                      Enable / disable async logging.
  --log-file arg                            Log to a file instead of stderr.
  --log-level arg (=info)                   Set log level (error, warning, 
                                            info).
  -m [ --manifest ] arg                     Manifest of samples with path and 
                                            bam stats.
  -M [ --max-reads-per-event ] arg (=10000) Maximum number of reads to process 
                                            for a single event.
  -o [ --output-file ] arg                  Output file name. Will output to 
                                            stdout if omitted or '-'.
  -O [ --output-folder ] arg                Output folder path. paragraph will 
                                            attempt to create the folder but 
                                            not the entire path. Will output to
                                            stdout if neither of output-file or
                                            output-folder provided. If 
                                            specified, paragraph will produce 
                                            one output file for each input file
                                            bearing the same name.
  --path-sequence-matching arg (=0)         Enables alignment to paths
  --progress [=arg(=1)] (=1)
  -r [ --reference ] arg                    Reference genome fasta file.
  --response-file arg                       file with more command line 
                                            arguments
  -t [ --sample-threads ] arg (=2)          Number of threads for parallel 
                                            sample processing.
  -v [ --version ]                          print program version information



Resource usage statistics from testing paragraph:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.5M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: paragraph-2.3-h21f15d8_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


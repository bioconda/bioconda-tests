  Package               Version  Build               Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex           0.1  conda_forge         conda-forge/linux-64                    Cached
  + _openmp_mutex           4.5  1_gnu               conda-forge/linux-64                    Cached
  + ca-certificates   2021.5.30  ha878542_0          conda-forge/linux-64                    Cached
  + ld_impl_linux-64     2.36.1  hea4e1c9_2          conda-forge/linux-64                    Cached
  + libffi                  3.3  h58526e2_2          conda-forge/linux-64                    Cached
  + libgcc-ng            11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libgomp              11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libstdcxx-ng         11.1.0  h56837e0_8          conda-forge/linux-64                    Cached
  + ma                    1.1.4  py39h39abbe0_2      /home/vsts/conda/conda-bld/linux-64       1 MB
  + ncurses                 6.2  h58526e2_4          conda-forge/linux-64                    Cached
  + openssl              1.1.1l  h7f98852_0          conda-forge/linux-64                    Cached
  + pip                  21.2.4  pyhd8ed1ab_0        conda-forge/noarch                      Cached
  + python                3.9.7  h49503c6_0_cpython  conda-forge/linux-64                    Cached
  + python_abi              3.9  2_cp39              conda-forge/linux-64                    Cached
  + readline                8.1  h46c0cb4_0          conda-forge/linux-64                    Cached
  + setuptools           57.4.0  py39hf3d152e_0      conda-forge/linux-64                    Cached
  + sqlite               3.36.0  h9cd32fc_0          conda-forge/linux-64                    Cached
  + tk                   8.6.11  h27826a3_1          conda-forge/linux-64                    Cached
  + tzdata                2021a  he74cb21_1          conda-forge/noarch                      Cached
  + wheel                0.37.0  pyhd8ed1ab_1        conda-forge/noarch                      Cached
  + xz                    5.2.5  h516909a_1          conda-forge/linux-64                    Cached
  + zlib                 1.2.11  h516909a_1010       conda-forge/linux-64                    Cached

  Summary:

  Install: 22 packages

  Total download: 1 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: ma-1.1.4-py39h39abbe0_2.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/ma_1630841347954/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge          conda-forge
    _openmp_mutex:    4.5-1_gnu                conda-forge
    ca-certificates:  2021.5.30-ha878542_0     conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2        conda-forge
    libffi:           3.3-h58526e2_2           conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8        conda-forge
    libgomp:          11.1.0-hc902ee8_8        conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8        conda-forge
    ma:               1.1.4-py39h39abbe0_2     local      
    ncurses:          6.2-h58526e2_4           conda-forge
    openssl:          1.1.1l-h7f98852_0        conda-forge
    pip:              21.2.4-pyhd8ed1ab_0      conda-forge
    python:           3.9.7-h49503c6_0_cpython conda-forge
    python_abi:       3.9-2_cp39               conda-forge
    readline:         8.1-h46c0cb4_0           conda-forge
    setuptools:       57.4.0-py39hf3d152e_0    conda-forge
    sqlite:           3.36.0-h9cd32fc_0        conda-forge
    tk:               8.6.11-h27826a3_1        conda-forge
    tzdata:           2021a-he74cb21_1         conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1      conda-forge
    xz:               5.2.5-h516909a_1         conda-forge
    zlib:             1.2.11-h516909a_1010     conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/ma_1630841347954/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/home/vsts/conda/conda-bld/ma_1630841347954/test_tmp
========================================= The Modular Aligner =========================================
Available presettings:
    -p, --Presetting <name> [default]              Optimize aligner parameters for a selected 
                                                   sequencing technique. Available presettings are: 
                                                   'Default', 'Illumina', 'Illumina_Paired', 
                                                   'Nanopore', 'PacBio'. 

General options: (these options are not affected by presettings)
    -x, --Index <file_name> []                     Filename of FMD-index. (A FMD-index can be 
                                                   generated via the --Create_Index option.) This 
                                                   option must be set. 

    -i, --In <file_name> []                        Filenames of Fasta/Fastq files containing reads. 
                                                   gz-compressed files are automatically decompressed. 
                                                   Multiple files can be specified by a comma 
                                                   separated list. One file name must be provided at 
                                                   least. 

    -m, --Mate_In <file_name> []                   Filenames of the mates in the case of paired reads. 
                                                   If this option is set, the aligner switches to 
                                                   paired mode automatically. The number of reads 
                                                   given as mates must match the accumulated number of 
                                                   reads provided via the 'in'-option. 

    -X, --Create_Index <fasta_file_name,output_folder,index_name> []
                                                   Generate a FMD-index for a Fasta file. 
                                                   'fasta_file_name' has to be the file-path of the 
                                                   Fasta file holding the genome used for index 
                                                   creation. 'output_folder' is the folder-path of the 
                                                   location used for index storage. 'index_name' is 
                                                   the name used for identifying the new FMD-Index. In 
                                                   the context of alignments, the genome-name is used 
                                                   for FMD-index selection. 

    -o, --SAM_File_name <file_name> [ma_out.sam]
                                                   Name of the SAM file that is used for the output of 
                                                   alignments. Use /dev/stdout for printing to stdout. 

    -t, --Number_of_Threads <int> [2]              Number of threads used in the context of 
                                                   alignments. 

    -h, --Help <bool> [true]                       Print the complete help text. 

Paired Reads options:
    --Use_Paired_Reads <bool> [false]              For paired reads set this flag to true. 

    -d, --Mean_Distance_of_Paired_Reads <double> [400]
                                                   Two reads can be paired, if they are within mean +- 
                                                   (standard deviation)*3 distance from one another on 
                                                   the expected strands (depends on Use Mate Pair 
                                                   on/off) Used in the context of the computation of 
                                                   the mapping quality and for picking optimal 
                                                   alignment pairs. 

    -S, --Standard_Deviation_of_Paired_Reads <double> [150]
                                                   <val> represents the standard deviation for the 
                                                   distance between paired reads. Used in the context 
                                                   of the computation of the mapping quality and for 
                                                   picking optimal alignment pairs. 

    --Score_Factor_for_Paired_Reads <double> [1.25]
                                                   This factor is multiplied to the score of 
                                                   successfully paired reads. Used in the context of 
                                                   the computation of the mapping quality and for 
                                                   picking optimal alignment pairs. <val> < 1 results 
                                                   in penalty; <val> > 1 results in bonus. 

    --Check_for_Consistency <bool> [false]         Check if both paired read files comprise the same 
                                                   number of reads. (Intended for debugging.) 

Seeding options:
    -s, --Seeding_Technique <name> [maxSpan]       Technique used for the initial seeding. Available 
                                                   techniques are: maxSpan and SMEMs. 

    -l, --Minimal_Seed_Length <int> [16]           All seeds with size smaller than 'minimal seed 
                                                   length' are discarded. 

    --Minimal_Ambiguity <int> [0]                  During the extension of seeds using the FMD-index: 
                                                   With increasing extension width, the number of 
                                                   occurrences of corresponding seeds on the reference 
                                                   monotonically decreases. Keep extending, while the 
                                                   number of occurrences is higher than 'Minimal 
                                                   Ambiguity'. 

    --Maximal_Ambiguity <int> [100]                Discard seeds that occur more than 'Maximal 
                                                   ambiguity' time on the reference. Set this option 
                                                   to zero in order to disable it. 

    --Skip_Ambiguous_Seeds <bool> [false]          Enabled: Discard all seeds that are more ambiguous 
                                                   than <Maximal Ambiguity>. Disabled: sample <Maximal 
                                                   Ambiguity> random seeds from too ambiguous seeds. 

    --Seeding_Drop-off_A_-_Minimal_Seed_Size <int> [15]
                                                   Heuristic runtime optimization: For a given read R, 
                                                   let N be the number of seeds of size >= <val>. 
                                                   Discard R, if N < <length(R)> * <Seeding drop-off 
                                                   B>. 

    --Seeding_Drop-off_B_-_Factor <double> [0.005]
                                                   Heuristic runtime optimization: Factor for seed 
                                                   drop-off calculation. For more information see the 
                                                   parameter Seeding drop-off A. 

Strip of Consideration options:
    -N, --Maximal_Number_of_SoCs <int> [30]        Consider the <val> best scored SoCs merely. 0 = 
                                                   Consider all SoCs. 

    -M, --Minimal_Number_of_SoCs <int> [1]         Always consider the first <val> SoCs no matter the 
                                                   Heuristic optimizations. Increasing this parameter 
                                                   might improve the quality of supplementary 
                                                   alignments. 

    --Fixed_SoC_Width <int> [0]                    Set the SoC width to a fixed value. 0 = use the 
                                                   formula given in the paper. (for debugging 
                                                   purposes.) 

SAM Output options:
    -n, --Maximal_Number_of_Reported_Alignments <int> [0]
                                                   Do not output more than <val> alignments. Set to 
                                                   zero for unlimited output. 

    --Minimal_Alignment_Score <int> [75]           Suppress the output of alignments with a score 
                                                   below <val>. 

    --Omit_Secondary_Alignments <bool> [false]     Suppress the output of secondary alignments. 

    --Omit_Supplementary_Alignments <bool> [false]
                                                   Suppress the output of supplementary alignments. 

    --Maximal_Supplementary_Overlap <double> [0.1]
                                                   A non-primary alignment A is considered 
                                                   supplementary, if less than <val> percent of A 
                                                   overlap with the primary alignment on the query. 
                                                   Otherwise A is considered secondary. 

    --Number_Supplementary_Alignments <int> [1]
                                                   Maximal Number of supplementary alignments per 
                                                   primary alignment. 

    --Emulate_NGMLR's_tag_output <bool> [false]
                                                   Output SAM tags as NGMLR would. Enable this flag if 
                                                   you want to use MA in combination with Sniffles. 
                                                   Enabling this flag will drastically increase the 
                                                   size of the SAM output file. 

    --Use_M_in_CIGAR <bool> [true]                 Disabled: Distinguish matches and mismatches in 
                                                   CIGARs using '=' and 'X' operations. Enabled: Use 
                                                   the 'M' operation in CIGARs. 

    --Output_long_cigars_in_CG_tag <bool> [true]
                                                   Some programs crash, if cigars become too long. If 
                                                   this flag is enabled, the CG:B:I tag is used for 
                                                   the output of long cigars (cigars with more than 
                                                   65536 operations). 

    --Soft_clip <bool> [false]                     Output the full query for each alignment, instead 
                                                   of omitting the sequence before and after the 
                                                   alignment. 

Heuristics options:
    --SoC_Score_Drop-off <double> [0.1]            Let x be the maximal encountered SoC score. Stop 
                                                   harmonizing SoCs if there is a SoC with a score 
                                                   smaller than <val>*x. 

    --Minimal_Harmonization_Score <int> [18]       Discard all harmonized SoCs with scores smaller 
                                                   than <val>. Only keep detected inversions with a 
                                                   score >= <val> * <Match Score>. 

    --Relative_Minimal_Harmonization_Score <double> [0.002]
                                                   Discard all harmonized SoCs with scores smaller 
                                                   than length(read)*<val>. 

    --Harmonization_Drop-off_A_-_Score_Difference <double> [0.0001]
                                                   Let x be the maximal encountered harmonization 
                                                   score. Stop harmonizing further SoCs, if 
                                                   <Harmonization Drop-off B> many SoCs with scores 
                                                   below x - <readlength> * <val> occur consecutively. 

    --Harmonization_Drop-off_B_-_Lookahead <int> [3]
                                                   See Harmonization Drop-off A. 

    --Harmonization_Score_Drop-off_-_Minimal_Query_Length <int> [800]
                                                   For reads of length >= <val>: Ignore all SoCs with 
                                                   harmonization scores smaller than the current 
                                                   maximal score. 0 = disabled. 

    --Artifact_Filter_A_-_Maximal_Delta_Distance <double> [0.1]
                                                   Filter a seed, if the difference between the delta 
                                                   distance to its predecessor and successor is less 
                                                   then <val> percent (set to 1 to disable filter) and 
                                                   the delta distance to its pre- and successor is 
                                                   more than <Artifact Filter B> nt. 

    --Artifact_Filter_B_-_Minimal_Delta_Distance <int> [16]
                                                   See Artifact Filter A 

    --Pick_Local_Seed_Set_A_-_Enabled <bool> [false]
                                                   Enable this flag for local seed set computation. 
                                                   (See Pick_Local_Seed_Set_B) 

    --Pick_Local_Seed_Set_B_-_Optimistic_Gap_Estimation <bool> [true]
                                                   After the harmonization MA checks weather it is 
                                                   possible to compute a positively scored alignment 
                                                   from the seed set. Gaps between seeds can be 
                                                   estimated in two ways: Optimistic [true]: Assume 
                                                   that the gap can be filled using merely matches and 
                                                   a single insertion/deletion. Pessimistic [false]: 
                                                   Assume that the gap can be filled using matches and 
                                                   mismatches that add up to a score of 0 and a single 
                                                   insertion/deletion. 

    --Pick_Local_Seed_Set_C_-_Maximal_Gap_Penalty <int> [100]
                                                   Maximal gap cost penalty during local seed set 
                                                   computation. 

    --Maximal_Gap_Size <int> [20]                  If the gap between seeds is larger than <val> on 
                                                   query or reference, a dual extension process is 
                                                   used for filling the gap. Dual extension is more 
                                                   expensive, if the extension does not Z-drop, but 
                                                   more efficient otherwise. 

    --Minimum_Genome_Size_for_Heuristics <int> [10000000]
                                                   Some heuristics can only be applied on genomes of 
                                                   sufficient size. The parameter disables the SoC 
                                                   score Drop-off, if the genome is shorter than 
                                                   <val>. 

    --Disable_All_Heuristics <bool> [false]        Disables all runtime heuristics. (For debugging 
                                                   purposes) 

Dynamic Programming options:
    --Match_Score <int> [2]                        Match score. (Used in the context of Dynamic 
                                                   Programming and for SoC width computation.) 

    --Mismatch_Penalty <int> [4]                   Penalty for mismatch. 

    --Gap_penalty <int> [4]                        First penalty for gap opening. (Two piece affine 
                                                   gap costs) 

    --Extend_Penalty <int> [2]                     First penalty for gap extension. (Two piece affine 
                                                   gap costs) 

    --Second_Gap_Penalty <int> [24]                Second penalty for gap opening. (Two piece affine 
                                                   gap costs) 

    --Second_Extend_Penalty <int> [1]              Second penalty for gap extension. (Two piece affine 
                                                   gap costs) 

    --Padding <int> [1000]                         If an alignment does not reach its read's 
                                                   endpoints, the missing parts can be computed via 
                                                   dynamic programming. If the length of the missing 
                                                   parts is smaller than 'Padding', dynamic 
                                                   programming is used to extend the alignment towards 
                                                   the endpoints of the read. Otherwise, the unaligned 
                                                   parts of the read are ignored and the alignment 
                                                   stays unextended. 

    --Bandwidth_for_Extensions <int> [512]         Bandwidth used in the context of the extension of 
                                                   an alignment towards the endpoints of its read. 
                                                   (See 'Padding') 

    --Minimal_Bandwidth_in_Gaps <int> [20]         Gaps between seeds are generally filled using 
                                                   dynamic programming. This option determines the 
                                                   minimal bandwidth used in the context of fillin 
                                                   gaps. 

    --Z_Drop <int> [200]                           If the running score during dynamic programming 
                                                   drops faster than <val> stop the extension process. 

    --Detect_Small_Inversions <bool> [false]       Use dynamic programming to search for small 
                                                   inversions that do not contain any seeds. (Flag 
                                                   disabled = off) 

    --Z_Drop_Inversions <int> [100]                Check for an inversion, if the running score during 
                                                   dynamic programming drops faster than <val>. 

Minimizer options:
    -k, --Minimizer_Size <int> [15]                Compute Minimizers with a size of <val>nt. A 
                                                   Minimizer index is built for the specific k and w 
                                                   chosen during index generation; To change the 
                                                   minimizer size or window size, a separate index has 
                                                   to be built. 'Seeding Technique' has to be set to 
                                                   minimizers in order to use this. 

    -w, --Minimizer_Window_Size <int> [10]         Compute Minimizers using a window of <val>nt. Two 
                                                   consecutive minimizers can be at most w-k nt apart. 
                                                   See 'Minimizer Size' for further information. 

Version 1.1.4-d2d8fc1-O
By Markus Schmidt & Arne Kutzner
Compiled with following switches: WITH_ZLIB
For more information visit: https://github.com/ITBE-Lab/ma

Resource usage statistics from testing ma:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.5M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: ma-1.1.4-py39h39abbe0_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


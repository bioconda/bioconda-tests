  Package          Version  Build          Channel                                   Size
───────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge    conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu          conda-forge/linux-64                    Cached
  + libgcc-ng       11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libstdcxx-ng    11.1.0  h56837e0_8     conda-forge/linux-64                    Cached
  + meryl              1.3  h1b792b2_0     bioconda/linux-64                       195 KB
  + winnowmap         2.03  h2e03b76_0     /home/vsts/conda/conda-bld/linux-64     768 KB
  + zlib            1.2.11  h516909a_1010  conda-forge/linux-64                    Cached

  Summary:

  Install: 8 packages

  Total download: 963 KB

───────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: winnowmap-2.03-h2e03b76_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/winnowmap_1630964114826/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge      conda-forge
    _openmp_mutex: 4.5-1_gnu            conda-forge
    libgcc-ng:     11.1.0-hc902ee8_8    conda-forge
    libgomp:       11.1.0-hc902ee8_8    conda-forge
    libstdcxx-ng:  11.1.0-h56837e0_8    conda-forge
    meryl:         1.3-h1b792b2_0       bioconda   
    winnowmap:     2.03-h2e03b76_0      local      
    zlib:          1.2.11-h516909a_1010 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/winnowmap_1630964114826/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/home/vsts/conda/conda-bld/winnowmap_1630964114826/test_tmp
winnowmap is built on top of minimap2, while modifying its minimizer sampling and indexing procedures
Usage: winnowmap [options] <target.fa>|<target.idx> [query.fa] [...]
Options:
  Indexing:
    -H           use homopolymer-compressed k-mer
    -k INT       k-mer size (no larger than 28) [15]
    -w INT       minimizer window size [50]
    -W FILE      input file containing list of high freq. k-mers []
    -I NUM       split index for every ~NUM input bases [4G]
    -d FILE      dump index to FILE []
  Mapping:
    -f FLOAT     filter out top FLOAT (<1) fraction of repetitive minimizers [0.0]
    -g NUM       stop chain enlongation if there are no minimizers in INT-bp [5000]
    -G NUM       max intron length (effective with -xsplice; changing -r) [200k]
    -F NUM       max fragment length (effective with -xsr or in the fragment mode) [800]
    -r NUM       bandwidth used in chaining and DP-based alignment [500]
    -n INT       minimal number of minimizers on a chain [3]
    -m INT       minimal chaining score (matching bases minus log gap penalty) [40]
    -X           skip self and dual mappings (for the all-vs-all mode)
    -p FLOAT     min secondary-to-primary score ratio [0.8]
    --sv-off     turn off SV-aware mode
  Alignment:
    -A INT       matching score [2]
    -B INT       mismatch penalty [4]
    -O INT[,INT] gap open penalty [4,24]
    -E INT[,INT] gap extension penalty; a k-long gap costs min{O1+k*E1,O2+k*E2} [2,1]
    -z INT[,INT] Z-drop score and inversion Z-drop score [400,200]
    -s INT       minimal peak DP alignment score [80]
    -u CHAR      how to find GT-AG. f:transcript strand, b:both strands, n:don't match GT-AG [n]
  Input/Output:
    -a           output in the SAM format (PAF by default)
    -o FILE      output alignments to FILE [stdout]
    -L           write CIGAR with >65535 ops at the CG tag
    -R STR       SAM read group line in a format like '@RG\tID:foo\tSM:bar' []
    -c           output CIGAR in PAF
    --cs[=STR]   output the cs tag; STR is 'short' (if absent) or 'long' [none]
    --MD         output the MD tag
    --eqx        write =/X CIGAR operators
    -Y           use soft clipping for supplementary alignments
    -t INT       manually set pthread count rather than automatically
    -K NUM       minibatch size for mapping [1000M]
    --version    show version number
  Preset:
    -x STR       preset (always applied before other options) []
                 - map-ont (ont-to-ref, uses default param)
                 - map-pb (hifi-to-ref, all defaults but does finer read fragmentation in SV-aware mapping)
                 - map-pb-clr (clr-to-ref, sets --sv-off)
                 - splice/splice:hq - long-read/Pacbio-CCS spliced alignment, sets --sv-off
                 - asm5/asm10/asm20 - asm-to-ref mapping
2.03

Resource usage statistics from testing winnowmap:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.3M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: winnowmap-2.03-h2e03b76_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


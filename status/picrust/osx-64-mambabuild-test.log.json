  Package                               Version  Build                   Channel                                    Size
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _r-mutex                              1.0.1  anacondar_1             conda-forge/noarch                       Cached
  + backports                               1.0  py27_1                  conda-forge/osx-64                         4 KB
  + backports.functools_lru_cache         1.6.1  py_0                    conda-forge/noarch                         8 KB
  + backports_abc                           0.5  py27_0                  conda-forge/osx-64                         6 KB
  + biom-format                           2.1.7  py27h3b54f70_1002       conda-forge/osx-64                        11 MB
  + bwidget                              1.9.14  h694c41f_0              conda-forge/osx-64                       Cached
  + bzip2                                 1.0.8  h0d85af4_4              conda-forge/osx-64                       Cached
  + c-ares                               1.17.2  h0d85af4_0              conda-forge/osx-64                       Cached
  + ca-certificates                   2021.5.30  h033912b_0              conda-forge/osx-64                       Cached
  + cairo                                1.16.0  he8db5a5_1006           conda-forge/osx-64                         1 MB
  + cctools_osx-64                      973.0.1  h3e07e27_1              conda-forge/osx-64                       Cached
  + certifi                          2019.11.28  py27h8c360ce_1          conda-forge/osx-64                       149 KB
  + clang                                12.0.1  h694c41f_0              conda-forge/osx-64                       Cached
  + clang-12                             12.0.1  default_he082bbe_0      conda-forge/osx-64                       Cached
  + clang_osx-64                         12.0.1  hb91bd55_0              conda-forge/osx-64                       Cached
  + clangxx                              12.0.1  default_he082bbe_0      conda-forge/osx-64                       Cached
  + clangxx_osx-64                       12.0.1  h7e1b574_0              conda-forge/osx-64                       Cached
  + click                                 7.1.2  pyh9f0ad1d_0            conda-forge/noarch                        64 KB
  + cogent                                  1.9  py27hf9ca5db_3          bioconda/osx-64                            2 MB
  + compiler-rt                          12.0.1  he01351e_0              conda-forge/osx-64                       Cached
  + compiler-rt_osx-64                   12.0.1  hd3f61c9_0              conda-forge/noarch                       Cached
  + curl                                 7.76.1  h06286d4_1              conda-forge/osx-64                       138 KB
  + cycler                               0.10.0  py27_0                  conda-forge/osx-64                        13 KB
  + fontconfig                           2.13.1  h10f422b_1005           conda-forge/osx-64                       Cached
  + freetype                             2.10.4  h4cff582_1              conda-forge/osx-64                       Cached
  + fribidi                              1.0.10  hbcb3906_0              conda-forge/osx-64                       Cached
  + functools32                         3.2.3.2  py27_2                  conda-forge/osx-64                        23 KB
  + future                               0.18.2  py27h8c360ce_1          conda-forge/osx-64                       722 KB
  + futures                               3.3.0  py27h8c360ce_1          conda-forge/osx-64                        25 KB
  + gettext                            0.19.8.1  haf92f58_1004           conda-forge/osx-64                         3 MB
  + gfortran_impl_osx-64                  7.5.0  hdadd0f8_23             conda-forge/osx-64                        17 MB
  + gfortran_osx-64                       7.5.0  h18f7dce_14             conda-forge/osx-64                        21 KB
  + gmp                                   6.2.1  h2e338ed_0              conda-forge/osx-64                       Cached
  + graphite2                            1.3.13  h2e338ed_1001           conda-forge/osx-64                       Cached
  + gsl                                     2.6  h71c5fe9_2              conda-forge/osx-64                         3 MB
  + h5py                                 2.10.0  nompi_py27h106b333_102  conda-forge/osx-64                       996 KB
  + harfbuzz                              2.7.2  h73e2de6_1              conda-forge/osx-64                         2 MB
  + hdf5                                 1.10.5  nompi_h34ad4e8_1111     conda-forge/osx-64                         3 MB
  + icu                                    67.1  hb1e8313_0              conda-forge/osx-64                        13 MB
  + isl                                  0.22.1  hb1e8313_2              conda-forge/osx-64                       Cached
  + jbig                                    2.1  h0d85af4_2003           conda-forge/osx-64                       Cached
  + jpeg                                     9d  hbcb3906_0              conda-forge/osx-64                       Cached
  + kiwisolver                            1.1.0  py27h5cd23e5_1          conda-forge/osx-64                        57 KB
  + krb5                                 1.17.2  h60d9502_0              conda-forge/osx-64                         1 MB
  + ld64_osx-64                             609  h2487922_1              conda-forge/osx-64                       Cached
  + ldid                                  2.1.2  h7660a38_2              conda-forge/osx-64                       Cached
  + lerc                                  2.2.1  h046ec9c_0              conda-forge/osx-64                       Cached
  + libblas                               3.9.0  8_openblas              conda-forge/osx-64                        11 KB
  + libcblas                              3.9.0  8_openblas              conda-forge/osx-64                        11 KB
  + libclang-cpp12                       12.0.1  default_he082bbe_0      conda-forge/osx-64                       Cached
  + libcurl                              7.76.1  h8ef9fac_1              conda-forge/osx-64                       309 KB
  + libcxx                               12.0.1  habf9029_0              conda-forge/osx-64                       Cached
  + libdeflate                              1.7  h35c211d_5              conda-forge/osx-64                       Cached
  + libedit                        3.1.20191231  h0678c8f_2              conda-forge/osx-64                       Cached
  + libev                                  4.33  haf1e3a3_1              conda-forge/osx-64                       Cached
  + libffi                                3.2.1  hb1e8313_1007           conda-forge/osx-64                        42 KB
  + libgfortran                           4.0.0  7_5_0_h1a10cd1_23       conda-forge/osx-64                        19 KB
  + libgfortran-devel_osx-64              7.5.0  h1a10cd1_23             conda-forge/noarch                       345 KB
  + libgfortran4                          7.5.0  h1a10cd1_23             conda-forge/osx-64                         1 MB
  + libglib                              2.66.3  h2575888_0              conda-forge/osx-64                         3 MB
  + libiconv                               1.16  haf1e3a3_0              conda-forge/osx-64                       Cached
  + liblapack                             3.9.0  8_openblas              conda-forge/osx-64                        11 KB
  + libllvm12                            12.0.1  hd011deb_2              conda-forge/osx-64                       Cached
  + libnghttp2                           1.43.0  h07e645a_0              conda-forge/osx-64                       Cached
  + libopenblas                          0.3.12  openmp_h63d9170_1       conda-forge/osx-64                         9 MB
  + libpng                               1.6.37  h7cec526_2              conda-forge/osx-64                       Cached
  + libssh2                              1.10.0  h52ee1ee_0              conda-forge/osx-64                       Cached
  + libtiff                               4.3.0  h1167814_1              conda-forge/osx-64                       Cached
  + libwebp-base                          1.2.1  h0d85af4_0              conda-forge/osx-64                       Cached
  + libxml2                              2.9.10  h2c6e4a5_2              conda-forge/osx-64                         1 MB
  + linecache2                            1.0.0  py27_0                  conda-forge/osx-64                        22 KB
  + llvm-openmp                          12.0.1  hda6cdc1_1              conda-forge/osx-64                       Cached
  + llvm-tools                           12.0.1  hd011deb_2              conda-forge/osx-64                       Cached
  + lz4-c                                 1.9.3  he49afe7_1              conda-forge/osx-64                       Cached
  + make                                    4.3  h22f3db7_1              conda-forge/osx-64                       Cached
  + matplotlib                            2.2.5  h694c41f_3              conda-forge/osx-64                         7 KB
  + matplotlib-base                       2.2.5  py27h11da6c2_1          conda-forge/osx-64                         7 MB
  + mpc                                   1.1.0  ha57cd0f_1009           conda-forge/osx-64                       Cached
  + mpfr                                  4.1.0  h0f52abe_1              conda-forge/osx-64                       Cached
  + ncurses                                 6.2  h2e338ed_4              conda-forge/osx-64                       Cached
  + numpy                                1.16.5  py27hde6bac1_0          conda-forge/osx-64                         4 MB
  + openssl                              1.1.1k  h0d85af4_1              conda-forge/osx-64                       Cached
  + pandas                               0.24.2  py27h86efe34_0          conda-forge/osx-64                        10 MB
  + pango                                1.42.4  ha86e081_5              conda-forge/osx-64                       526 KB
  + pcre                                   8.45  he49afe7_0              conda-forge/osx-64                       Cached
  + pcre2                                 10.35  h164c276_2              conda-forge/osx-64                       677 KB
  + picrust                               1.1.4  pyh5ca1d4c_1            /Users/runner/conda/conda-bld/osx-64       1 MB
  + pip                                  20.1.1  pyh9f0ad1d_0            conda-forge/noarch                         1 MB
  + pixman                               0.40.0  hbcb3906_0              conda-forge/osx-64                       Cached
  + pyparsing                             2.4.7  pyh9f0ad1d_0            conda-forge/noarch                        60 KB
  + pyqi                                  0.3.2  py_0                    conda-forge/noarch                        36 KB
  + python                               2.7.15  h8e446fc_1011_cpython   conda-forge/osx-64                        12 MB
  + python-dateutil                       2.8.1  py_0                    conda-forge/noarch                       220 KB
  + python_abi                              2.7  1_cp27m                 conda-forge/osx-64                         4 KB
  + pytz                                 2020.1  pyh9f0ad1d_0            conda-forge/noarch                       227 KB
  + r-ape                                   5.5  r40he5a6823_0           conda-forge/osx-64                         3 MB
  + r-base                                4.0.2  hc30ca75_1              conda-forge/osx-64                        23 MB
  + r-lattice                           0.20_44  r40h28b5c78_0           conda-forge/osx-64                         1 MB
  + r-nlme                              3.1_150  r40ha752707_0           conda-forge/osx-64                         2 MB
  + r-rcpp                                1.0.7  r40h9951f98_0           conda-forge/osx-64                         2 MB
  + readline                                8.1  h05e3726_0              conda-forge/osx-64                       Cached
  + scipy                                 1.2.1  py27h7e0e109_2          conda-forge/osx-64                        18 MB
  + setuptools                           44.0.0  py27_0                  conda-forge/osx-64                       649 KB
  + singledispatch                        3.6.1  pyh44b312d_0            conda-forge/noarch                        12 KB
  + six                                  1.16.0  pyh6c4a22f_0            conda-forge/noarch                       Cached
  + sqlite                               3.36.0  h23a322b_0              conda-forge/osx-64                       Cached
  + subprocess32                          3.5.4  py27h0b31af3_0          conda-forge/osx-64                        44 KB
  + tapi                              1100.0.11  h9ce4665_0              conda-forge/osx-64                       Cached
  + tk                                   8.6.11  hd798d34_0              conda-forge/osx-64                       Cached
  + tktable                                2.10  h49f0cf7_3              conda-forge/osx-64                       Cached
  + tornado                               5.1.1  py27h1de35cc_1000       conda-forge/osx-64                       642 KB
  + traceback2                            1.4.0  py27_0                  conda-forge/osx-64                        28 KB
  + unittest2                             1.1.0  py_0                    conda-forge/noarch                        68 KB
  + wheel                                0.37.0  pyhd8ed1ab_1            conda-forge/noarch                       Cached
  + xz                                    5.2.5  haf1e3a3_1              conda-forge/osx-64                       Cached
  + zlib                                 1.2.11  h7795811_1010           conda-forge/osx-64                       Cached
  + zstd                                  1.5.0  h582d3a0_0              conda-forge/osx-64                       Cached

  Summary:

  Install: 117 packages

  Total download: 160 MB

──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: picrust-1.1.4-pyh5ca1d4c_1.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/picrust_1630511165738/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p


The following NEW packages will be INSTALLED:

    _r-mutex:                      1.0.1-anacondar_1             conda-forge
    backports:                     1.0-py27_1                    conda-forge
    backports.functools_lru_cache: 1.6.1-py_0                    conda-forge
    backports_abc:                 0.5-py27_0                    conda-forge
    biom-format:                   2.1.7-py27h3b54f70_1002       conda-forge
    bwidget:                       1.9.14-h694c41f_0             conda-forge
    bzip2:                         1.0.8-h0d85af4_4              conda-forge
    c-ares:                        1.17.2-h0d85af4_0             conda-forge
    ca-certificates:               2021.5.30-h033912b_0          conda-forge
    cairo:                         1.16.0-he8db5a5_1006          conda-forge
    cctools_osx-64:                973.0.1-h3e07e27_1            conda-forge
    certifi:                       2019.11.28-py27h8c360ce_1     conda-forge
    clang:                         12.0.1-h694c41f_0             conda-forge
    clang-12:                      12.0.1-default_he082bbe_0     conda-forge
    clang_osx-64:                  12.0.1-hb91bd55_0             conda-forge
    clangxx:                       12.0.1-default_he082bbe_0     conda-forge
    clangxx_osx-64:                12.0.1-h7e1b574_0             conda-forge
    click:                         7.1.2-pyh9f0ad1d_0            conda-forge
    cogent:                        1.9-py27hf9ca5db_3            bioconda   
    compiler-rt:                   12.0.1-he01351e_0             conda-forge
    compiler-rt_osx-64:            12.0.1-hd3f61c9_0             conda-forge
    curl:                          7.76.1-h06286d4_1             conda-forge
    cycler:                        0.10.0-py27_0                 conda-forge
    fontconfig:                    2.13.1-h10f422b_1005          conda-forge
    freetype:                      2.10.4-h4cff582_1             conda-forge
    fribidi:                       1.0.10-hbcb3906_0             conda-forge
    functools32:                   3.2.3.2-py27_2                conda-forge
    future:                        0.18.2-py27h8c360ce_1         conda-forge
    futures:                       3.3.0-py27h8c360ce_1          conda-forge
    gettext:                       0.19.8.1-haf92f58_1004        conda-forge
    gfortran_impl_osx-64:          7.5.0-hdadd0f8_23             conda-forge
    gfortran_osx-64:               7.5.0-h18f7dce_14             conda-forge
    gmp:                           6.2.1-h2e338ed_0              conda-forge
    graphite2:                     1.3.13-h2e338ed_1001          conda-forge
    gsl:                           2.6-h71c5fe9_2                conda-forge
    h5py:                          2.10.0-nompi_py27h106b333_102 conda-forge
    harfbuzz:                      2.7.2-h73e2de6_1              conda-forge
    hdf5:                          1.10.5-nompi_h34ad4e8_1111    conda-forge
    icu:                           67.1-hb1e8313_0               conda-forge
    isl:                           0.22.1-hb1e8313_2             conda-forge
    jbig:                          2.1-h0d85af4_2003             conda-forge
    jpeg:                          9d-hbcb3906_0                 conda-forge
    kiwisolver:                    1.1.0-py27h5cd23e5_1          conda-forge
    krb5:                          1.17.2-h60d9502_0             conda-forge
    ld64_osx-64:                   609-h2487922_1                conda-forge
    ldid:                          2.1.2-h7660a38_2              conda-forge
    lerc:                          2.2.1-h046ec9c_0              conda-forge
    libblas:                       3.9.0-8_openblas              conda-forge
    libcblas:                      3.9.0-8_openblas              conda-forge
    libclang-cpp12:                12.0.1-default_he082bbe_0     conda-forge
    libcurl:                       7.76.1-h8ef9fac_1             conda-forge
    libcxx:                        12.0.1-habf9029_0             conda-forge
    libdeflate:                    1.7-h35c211d_5                conda-forge
    libedit:                       3.1.20191231-h0678c8f_2       conda-forge
    libev:                         4.33-haf1e3a3_1               conda-forge
    libffi:                        3.2.1-hb1e8313_1007           conda-forge
    libgfortran:                   4.0.0-7_5_0_h1a10cd1_23       conda-forge
    libgfortran-devel_osx-64:      7.5.0-h1a10cd1_23             conda-forge
    libgfortran4:                  7.5.0-h1a10cd1_23             conda-forge
    libglib:                       2.66.3-h2575888_0             conda-forge
    libiconv:                      1.16-haf1e3a3_0               conda-forge
    liblapack:                     3.9.0-8_openblas              conda-forge
    libllvm12:                     12.0.1-hd011deb_2             conda-forge
    libnghttp2:                    1.43.0-h07e645a_0             conda-forge
    libopenblas:                   0.3.12-openmp_h63d9170_1      conda-forge
    libpng:                        1.6.37-h7cec526_2             conda-forge
    libssh2:                       1.10.0-h52ee1ee_0             conda-forge
    libtiff:                       4.3.0-h1167814_1              conda-forge
    libwebp-base:                  1.2.1-h0d85af4_0              conda-forge
    libxml2:                       2.9.10-h2c6e4a5_2             conda-forge
    linecache2:                    1.0.0-py27_0                  conda-forge
    llvm-openmp:                   12.0.1-hda6cdc1_1             conda-forge
    llvm-tools:                    12.0.1-hd011deb_2             conda-forge
    lz4-c:                         1.9.3-he49afe7_1              conda-forge
    make:                          4.3-h22f3db7_1                conda-forge
    matplotlib:                    2.2.5-h694c41f_3              conda-forge
    matplotlib-base:               2.2.5-py27h11da6c2_1          conda-forge
    mpc:                           1.1.0-ha57cd0f_1009           conda-forge
    mpfr:                          4.1.0-h0f52abe_1              conda-forge
    ncurses:                       6.2-h2e338ed_4                conda-forge
    numpy:                         1.16.5-py27hde6bac1_0         conda-forge
    openssl:                       1.1.1k-h0d85af4_1             conda-forge
    pandas:                        0.24.2-py27h86efe34_0         conda-forge
    pango:                         1.42.4-ha86e081_5             conda-forge
    pcre:                          8.45-he49afe7_0               conda-forge
    pcre2:                         10.35-h164c276_2              conda-forge
    picrust:                       1.1.4-pyh5ca1d4c_1            local      
    pip:                           20.1.1-pyh9f0ad1d_0           conda-forge
    pixman:                        0.40.0-hbcb3906_0             conda-forge
    pyparsing:                     2.4.7-pyh9f0ad1d_0            conda-forge
    pyqi:                          0.3.2-py_0                    conda-forge
    python:                        2.7.15-h8e446fc_1011_cpython  conda-forge
    python-dateutil:               2.8.1-py_0                    conda-forge
    python_abi:                    2.7-1_cp27m                   conda-forge
    pytz:                          2020.1-pyh9f0ad1d_0           conda-forge
    r-ape:                         5.5-r40he5a6823_0             conda-forge
    r-base:                        4.0.2-hc30ca75_1              conda-forge
    r-lattice:                     0.20_44-r40h28b5c78_0         conda-forge
    r-nlme:                        3.1_150-r40ha752707_0         conda-forge
    r-rcpp:                        1.0.7-r40h9951f98_0           conda-forge
    readline:                      8.1-h05e3726_0                conda-forge
    scipy:                         1.2.1-py27h7e0e109_2          conda-forge
    setuptools:                    44.0.0-py27_0                 conda-forge
    singledispatch:                3.6.1-pyh44b312d_0            conda-forge
    six:                           1.16.0-pyh6c4a22f_0           conda-forge
    sqlite:                        3.36.0-h23a322b_0             conda-forge
    subprocess32:                  3.5.4-py27h0b31af3_0          conda-forge
    tapi:                          1100.0.11-h9ce4665_0          conda-forge
    tk:                            8.6.11-hd798d34_0             conda-forge
    tktable:                       2.10-h49f0cf7_3               conda-forge
    tornado:                       5.1.1-py27h1de35cc_1000       conda-forge
    traceback2:                    1.4.0-py27_0                  conda-forge
    unittest2:                     1.1.0-py_0                    conda-forge
    wheel:                         0.37.0-pyhd8ed1ab_1           conda-forge
    xz:                            5.2.5-haf1e3a3_1              conda-forge
    zlib:                          1.2.11-h7795811_1010          conda-forge
    zstd:                          1.5.0-h582d3a0_0              conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/picrust_1630511165738/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p
export SRC_DIR=/Users/runner/conda/conda-bld/picrust_1630511165738/test_tmp
INFO: activate-gfortran_osx-64.sh made the following environmental changes:
+DEBUG_FFLAGS=-march=core2 -mtune=haswell -ftree-vectorize -fPIC -fstack-protector -O2 -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix -march=core2 -mtune=haswell -ftree-vectorize -fPIC -fstack-protector -O2 -pipe -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments
+DEBUG_FORTRANFLAGS=-march=core2 -mtune=haswell -ftree-vectorize -fPIC -fstack-protector -O2 -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix -march=core2 -mtune=haswell -ftree-vectorize -fPIC -fstack-protector -O2 -pipe -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments
+F77=$PREFIX/bin/x86_64-apple-darwin13.4.0-gfortran
+F90=$PREFIX/bin/x86_64-apple-darwin13.4.0-gfortran
+F95=$PREFIX/bin/x86_64-apple-darwin13.4.0-gfortran
+FC=$PREFIX/bin/x86_64-apple-darwin13.4.0-gfortran
+FC_FOR_BUILD=$PREFIX/bin/-gfortran
+FFLAGS=-march=core2 -mtune=haswell -ftree-vectorize -fPIC -fstack-protector -O2 -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+FORTRANFLAGS=-march=core2 -mtune=haswell -ftree-vectorize -fPIC -fstack-protector -O2 -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+GFORTRAN=$PREFIX/bin/x86_64-apple-darwin13.4.0-gfortran
INFO: activate_clang_osx-64.sh made the following environmental changes:
+AR=x86_64-apple-darwin13.4.0-ar
+AS=x86_64-apple-darwin13.4.0-as
+BUILD=x86_64-apple-darwin13.4.0
+CC=x86_64-apple-darwin13.4.0-clang
+CC_FOR_BUILD=$PREFIX/bin/x86_64-apple-darwin13.4.0-clang
+CFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+CHECKSYMS=x86_64-apple-darwin13.4.0-checksyms
+CLANG=x86_64-apple-darwin13.4.0-clang
+CMAKE_ARGS=-DCMAKE_AR=$PREFIX/bin/x86_64-apple-darwin13.4.0-ar -DCMAKE_CXX_COMPILER_AR=$PREFIX/bin/x86_64-apple-darwin13.4.0-ar -DCMAKE_C_COMPILER_AR=$PREFIX/bin/x86_64-apple-darwin13.4.0-ar -DCMAKE_RANLIB=$PREFIX/bin/x86_64-apple-darwin13.4.0-ranlib -DCMAKE_CXX_COMPILER_RANLIB=$PREFIX/bin/x86_64-apple-darwin13.4.0-ranlib -DCMAKE_C_COMPILER_RANLIB=$PREFIX/bin/x86_64-apple-darwin13.4.0-ranlib -DCMAKE_LINKER=$PREFIX/bin/x86_64-apple-darwin13.4.0-ld -DCMAKE_STRIP=$PREFIX/bin/x86_64-apple-darwin13.4.0-strip -DCMAKE_INSTALL_NAME_TOOL=$PREFIX/bin/x86_64-apple-darwin13.4.0-install_name_tool -DCMAKE_LIBTOOL=$PREFIX/bin/x86_64-apple-darwin13.4.0-libtool -DCMAKE_OSX_DEPLOYMENT_TARGET= -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_SYSROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_INSTALL_LIBDIR=lib
+CMAKE_PREFIX_PATH=:$PREFIX
+CONDA_BUILD_SYSROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk
+CONDA_TOOLCHAIN_BUILD=x86_64-apple-darwin13.4.0
+CONDA_TOOLCHAIN_HOST=x86_64-apple-darwin13.4.0
+CPPFLAGS=-D_FORTIFY_SOURCE=2 -isystem $PREFIX/include
+DEBUG_CFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -Og -g -Wall -Wextra -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+HOST=x86_64-apple-darwin13.4.0
+INSTALL_NAME_TOOL=x86_64-apple-darwin13.4.0-install_name_tool
+LD=x86_64-apple-darwin13.4.0-ld
+LDFLAGS=-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,$PREFIX/lib -L$PREFIX/lib
+LDFLAGS_LD=-pie -headerpad_max_install_names -dead_strip_dylibs -rpath $PREFIX/lib -L$PREFIX/lib
+LIBTOOL=x86_64-apple-darwin13.4.0-libtool
+LIPO=x86_64-apple-darwin13.4.0-lipo
+MESON_ARGS=--buildtype release --prefix=$PREFIX -Dlibdir=lib
+NM=x86_64-apple-darwin13.4.0-nm
+NMEDIT=x86_64-apple-darwin13.4.0-nmedit
+OBJC=x86_64-apple-darwin13.4.0-clang
+OBJC_FOR_BUILD=$PREFIX/bin/x86_64-apple-darwin13.4.0-clang
+OTOOL=x86_64-apple-darwin13.4.0-otool
+PAGESTUFF=x86_64-apple-darwin13.4.0-pagestuff
+RANLIB=x86_64-apple-darwin13.4.0-ranlib
+REDO_PREBINDING=x86_64-apple-darwin13.4.0-redo_prebinding
+SDKROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk
+SEGEDIT=x86_64-apple-darwin13.4.0-segedit
+SEG_ADDR_TABLE=x86_64-apple-darwin13.4.0-seg_addr_table
+SEG_HACK=x86_64-apple-darwin13.4.0-seg_hack
+SIZE=x86_64-apple-darwin13.4.0-size
+STRINGS=x86_64-apple-darwin13.4.0-strings
+STRIP=x86_64-apple-darwin13.4.0-strip
+_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_apple_darwin13_4_0
+ac_cv_func_malloc_0_nonnull=yes
+ac_cv_func_realloc_0_nonnull=yes
+build_alias=x86_64-apple-darwin13.4.0
+host_alias=x86_64-apple-darwin13.4.0
INFO: activate_clangxx_osx-64.sh made the following environmental changes:
+CLANGXX=x86_64-apple-darwin13.4.0-clang++
+CXX=x86_64-apple-darwin13.4.0-clang++
+CXXFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+CXX_FOR_BUILD=$PREFIX/bin/x86_64-apple-darwin13.4.0-clang++
+DEBUG_CXXFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -Og -g -Wall -Wextra -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
Usage: normalize_by_copy_number.py [options] {-i/--input_otu_fp INPUT_OTU_FP -o/--output_otu_fp OUTPUT_OTU_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)



Example usage: 
Print help message and exit
 normalize_by_copy_number.py -h

Normalize the OTU abundances for a given OTU table picked against the newest version of Greengenes
 normalize_by_copy_number.py -i closed_picked_otus.biom -o normalized_otus.biom

Change the version of Greengenes used for OTU picking
 normalize_by_copy_number.py -g 18may2012 -i closed_picked_otus.biom -o normalized_otus.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  -c INPUT_COUNT_FP, --input_count_fp=INPUT_COUNT_FP
                        Precalculated input marker gene copy number
                        predictions on per otu basis in biom format (can be
                        gzipped).Note: using this option overrides
                        --gg_version. [default: none]
  --metadata_identifer=METADATA_IDENTIFER
                        identifier for copy number entry as observation
                        metadata [default: CopyNumber]
  --load_precalc_file_in_biom
                        Instead of loading the precalculated file in tab-
                        delimited format (with otu ids as row ids and traits
                        as columns) load the data in biom format (with otu as
                        SampleIds and traits as ObservationIds) [default:
                        False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_OTU_FP, --input_otu_fp=INPUT_OTU_FP
                        the input otu table filepath in biom format [REQUIRED]
    -o OUTPUT_OTU_FP, --output_otu_fp=OUTPUT_OTU_FP
                        the output otu table filepath in biom format
                        [REQUIRED]
Usage: predict_metagenomes.py [options] {-i/--input_otu_table INPUT_OTU_TABLE -o/--output_metagenome_table OUTPUT_METAGENOME_TABLE}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)



Example usage: 
Print help message and exit
 predict_metagenomes.py -h

Predict KO abundances for a given OTU table picked against the newest version of GreenGenes.
 predict_metagenomes.py -i normalized_otus.biom -o predicted_metagenomes.biom

Change output format to plain tab-delimited
 predict_metagenomes.py -f -i normalized_otus.biom -o predicted_metagenomes.txt

Predict KO abundances for a given OTU table, but do not round predictions to nearest whole number (esp. needed for proportional abundances)
 predict_metagenomes.py --no_round -i normalized_otus.biom -o predicted_metagenomes.txt

Predict COG abundances for a given OTU table.
 predict_metagenomes.py -i normalized_otus.biom -t cog -o cog_predicted_metagenomes.biom

Predict RFAM abundances for a given OTU table.
 predict_metagenomes.py -i normalized_otus.biom -t rfam -o rfam_predicted_metagenomes.biom

Output confidence intervals for each prediction.
 predict_metagenomes.py -i normalized_otus.biom -o predicted_metagenomes.biom --with_confidence

Predict metagenomes using a custom trait table in tab-delimited format.
 predict_metagenomes.py -i otu_table_for_custom_trait_table.biom -c custom_trait_table.tab -o output_metagenome_from_custom_trait_table.biom

Predict metagenomes,variances,and 95% confidence intervals for each gene category using a custom trait table in tab-delimited format.
 predict_metagenomes.py -i otu_table_for_custom_trait_table.biom --input_variance_table custom_trait_table_variances.tab -c custom_trait_table.tab -o output_metagenome_from_custom_trait_table.biom --with_confidence

Change the version of GG used to pick OTUs
 predict_metagenomes.py -i normalized_otus.biom -g 18may2012 -o predicted_metagenomes.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -t TYPE_OF_PREDICTION, --type_of_prediction=TYPE_OF_PREDICTION
                        Type of functional predictions. Valid choices are: ko,
                        cog, rfam [default: ko]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  -c INPUT_COUNT_TABLE, --input_count_table=INPUT_COUNT_TABLE
                        Precalculated function predictions on per otu basis in
                        biom format (can be gzipped). Note: using this option
                        overrides --type_of_prediction and --gg_version.
                        [default: none]
  -a ACCURACY_METRICS, --accuracy_metrics=ACCURACY_METRICS
                        If provided, calculate accuracy metrics for the
                        predicted metagenome.  NOTE: requires that per-genome
                        accuracy metrics were calculated using
                        predict_traits.py during genome prediction (e.g. there
                        are "NSTI" values in the genome .biom file metadata)
  --no_round            Disable rounding number of predicted functions to the
                        the nearest whole number. This option is important if
                        you are inputting abundances as proportions [default:
                        False]
  --normalize_by_function
                        Normalizes the predicted functional abundances by
                        dividing each abundance by the sum of functional
                        abundances in the sample. Total sum of abundances for
                        each sample will equal 1.
  --normalize_by_otu    Normalizes the predicted functional abundances by
                        dividing each abundance by the sum of OTUs in the
                        sample. Note: total sum of abundances for each sample
                        will NOT equal 1.
  --suppress_subset_loading
                        Normally, only counts for OTUs present in the sample
                        are loaded.  If this flag is passed, the full biom
                        table is loaded.  This makes no difference for the
                        analysis, but may result in faster load times (at the
                        cost of more memory usage)
  --load_precalc_file_in_biom
                        Instead of loading the precalculated file in tab-
                        delimited format (with otu ids as row ids and traits
                        as columns) load the data in biom format (with otu as
                        SampleIds and traits as ObservationIds) [default:
                        False]
  --input_variance_table=INPUT_VARIANCE_TABLE
                        Precalculated table of variances corresponding to the
                        precalculated table of function predictions.  As with
                        the count table, these are on a per otu basis and in
                        BIOM format (can be gzipped). Note: using this option
                        overrides --type_of_prediction and --gg_version.
                        [default: none]
  --with_confidence     Calculate 95% confidence intervals for metagenome
                        predictions.  By default, this uses the confidence
                        intervals for the precalculated table of genes for
                        greengenes OTUs.  If you pass a custom count table
                        with -c and select this option, you must also specify
                        a corresponding table of confidence intervals for the
                        gene content prediction using --input_variance_table.
                        (these are generated by running predict_traits.py with
                        the --with_confidence option). If this flag is set,
                        three addtional output files will be generated, named
                        the same as the metagenome prediction output, but with
                        .variance .upper_CI or .lower_CI appended immediately
                        before the file extension [default: False]
  -f, --format_tab_delimited
                        output the predicted metagenome table in tab-delimited
                        format [default: False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_OTU_TABLE, --input_otu_table=INPUT_OTU_TABLE
                        the input otu table in biom format [REQUIRED]
    -o OUTPUT_METAGENOME_TABLE, --output_metagenome_table=OUTPUT_METAGENOME_TABLE
                        the output file for the predicted metagenome
                        [REQUIRED]
Usage: categorize_by_function.py [options] {-i/--input_fp INPUT_FP -o/--output_fp OUTPUT_FP -c/--metadata_category METADATA_CATEGORY -l/--level LEVEL}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

This script collapses hierarchical data to a specified level. For instance, often it is useful to examine KEGG results from a higher level within the pathway hierarchy. Many genes are sometimes involved in multiple pathways, and in these circumstances (also know as a one-to-many relationship), the gene is counted for each pathway. This has a side effect of increasing the total count of genes in the table.

Example usage: 
Print help message and exit
 categorize_by_function.py -h

Collapse predicted metagenome using KEGG Pathway metadata.
 categorize_by_function.py -i predicted_metagenomes.biom -c KEGG_Pathways -l 3 -o predicted_metagenomes.L3.biom

Change output to tab-delimited format (instead of BIOM).
 categorize_by_function.py -f -i predicted_metagenomes.biom -c KEGG_Pathways -l 3 -o predicted_metagenomes.L3.txt

Collapse COG Categories.
 categorize_by_function.py -i cog_predicted_metagenomes.biom -c COG_Category -l 2 -o cog_predicted_metagenomes.L2.biom

Collapse predicted metagenome using taxonomy metadata (not one-to-many).
 categorize_by_function.py -i observation_table.biom -c taxonomy -l 1 -o observation_table.L1.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  --ignore=IGNORE       Ignore the comma separated list of names. For
                        instance, specifying
                        --ignore_unknown=unknown,unclassified will ignore
                        those labels while collapsing. The default is to not
                        ignore anything. [default: none]
  -f, --format_tab_delimited
                        output the predicted metagenome table in tab-delimited
                        format [default: False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_FP, --input_fp=INPUT_FP
                        the predicted metagenome table [REQUIRED]
    -o OUTPUT_FP, --output_fp=OUTPUT_FP
                        the resulting table [REQUIRED]
    -c METADATA_CATEGORY, --metadata_category=METADATA_CATEGORY
                        the metadata category that describes the hierarchy
                        (e.g. KEGG_Pathways, COG_Category, etc.). Note: RFAM
                        predictions can not be collapsed because there are no
                        categories to group them into. [REQUIRED]
    -l LEVEL, --level=LEVEL
                        the level in the hierarchy to collapse to. A value of
                        0 is not allowed, a value of 1 is the highest level,
                        and any higher value nears the leaves of the
                        hierarchy. For instance, if the hierarchy contains 4
                        levels, specifying 3 would collapse at one level above
                        being fully specified. [REQUIRED]
Usage: metagenome_contributions.py [options] {-i/--input_otu_table INPUT_OTU_TABLE -o/--output_fp OUTPUT_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)



Example usage: 
Print help message and exit
 metagenome_contributions.py -h

Partition the predicted contribution to the  metagenomes from each organism in the given OTU table, limited to only K00001, K00002, and K00004.
 metagenome_contributions.py -i normalized_otus.biom -l K00001,K00002,K00004 -o ko_metagenome_contributions.tab

Partition the predicted contribution to the  metagenomes from each organism in the given OTU table, limited to only COG0001 and COG0002.
 metagenome_contributions.py -i normalized_otus.biom -l COG0001,COG0002 -t cog -o cog_metagenome_contributions.tab

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -t TYPE_OF_PREDICTION, --type_of_prediction=TYPE_OF_PREDICTION
                        Type of functional predictions. Valid choices are: ko,
                        cog, rfam [default: ko]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  -c INPUT_COUNT_TABLE, --input_count_table=INPUT_COUNT_TABLE
                        Precalculated function predictions on per otu basis in
                        biom format (can be gzipped). Note: using this option
                        overrides --type_of_prediction and --gg_version.
                        [default: none]
  --suppress_subset_loading
                        Normally, only counts for OTUs present in the sample
                        are loaded.  If this flag is passed, the full biom
                        table is loaded.  This makes no difference for the
                        analysis, but may result in faster load times (at the
                        cost of more memory usage)
  --load_precalc_file_in_biom
                        Instead of loading the precalculated file in tab-
                        delimited format (with otu ids as row ids and traits
                        as columns) load the data in biom format (with otu as
                        SampleIds and traits as ObservationIds) [default:
                        False]
  -f LIMIT_TO_FUNCTIONAL_CATEGORIES, --limit_to_functional_categories=LIMIT_TO_FUNCTIONAL_CATEGORIES
                        If provided only output prediction for functions that
                        match the specified functional category. Multiple
                        categories can be passed as a list separated by |
                        [default: False]
  -l LIMIT_TO_FUNCTION, --limit_to_function=LIMIT_TO_FUNCTION
                        If provided, only output predictions for the specified
                        function ids.  Multiple function ids can be passed
                        using comma delimiters.

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_OTU_TABLE, --input_otu_table=INPUT_OTU_TABLE
                        the input otu table in biom format [REQUIRED]
    -o OUTPUT_FP, --output_fp=OUTPUT_FP
                        the output file for the metagenome contributions
                        [REQUIRED]
Usage: compare_biom.py [options] {-e/--exp_trait_table_fp EXP_TRAIT_TABLE_FP -o/--output_fp OUTPUT_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

 

Example usage: 
Print help message and exit
 compare_biom.py -h

Example 1: Compare an observed table to an expected table using relative abundance
 compare_biom.py -e expected_ra.biom -o compare_results_ra.tab observed_ra.biom

Example 2: Compare an observed table to an expected table using real counts
 compare_biom.py --not_relative_abundance -e expected.biom -o compare_results.tab observed.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -c, --compare_observations
                        Calculate accuracy values by comparing between
                        observations (instead of between samples) [default:
                        False]
  -n, --normalize       Convert both expected and observed tables to relative
                        abundances (instead of observations) [default: False]
  -l, --limit_to_expected_observations
                        Ignore observations that are not in the expected
                        table[default: False]
  --limit_to_observed_observations
                        Ignore observations that are not in the observed
                        table[default: False]
  -s, --shuffle_samples
                        Shuffle samples ids randomly before measuring
                        accuracy[default: False]
  --not_relative_abundance_scores
                        Round numbers (instead of taking ceil() which is used
                        for RA) before calculating TP,FP,FN,TN [default:
                        False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -e EXP_TRAIT_TABLE_FP, --exp_trait_table_fp=EXP_TRAIT_TABLE_FP
                        the expected trait table (biom format) [REQUIRED]
    -o OUTPUT_FP, --output_fp=OUTPUT_FP
                        the output file [REQUIRED]
Usage: download_picrust_files.py [options] {}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

Downloads PICRUSt pre-calculated files to the data directory ($PREFIX/lib/python2.7/site-packages/picrust/data).

Example usage: 
Print help message and exit
 download_picrust_files.py -h

Download default pre-calculated files
 download_picrust_files.py

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -t TYPE_OF_PREDICTION, --type_of_prediction=TYPE_OF_PREDICTION
                        Type of functional predictions. Valid choices are: ko,
                        cog, rfam [default: ko]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  --with_confidence     Download confidence interval files (only available for
                        GreenGenes 13_5) [default: False]
  --force               Force download of files (i.e. overwrite existing)
                        [default: False]

Resource usage statistics from testing picrust:
   Process count: 4
   CPU time: Sys=0:00:01.4, User=0:00:01.7
   Memory: 84.2M
   Disk usage: 16B
   Time elapsed: 0:00:30.9


TEST END: picrust-1.1.4-pyh5ca1d4c_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


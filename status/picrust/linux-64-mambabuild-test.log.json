  Package                               Version  Build                   Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex                           0.1  conda_forge             conda-forge/linux-64                    Cached
  + _openmp_mutex                           4.5  1_gnu                   conda-forge/linux-64                    Cached
  + _r-mutex                              1.0.1  anacondar_1             conda-forge/noarch                      Cached
  + backports                               1.0  py27_1                  conda-forge/linux-64                      4 KB
  + backports.functools_lru_cache         1.6.1  py_0                    conda-forge/noarch                        8 KB
  + backports_abc                           0.5  py27_0                  conda-forge/linux-64                      6 KB
  + binutils_impl_linux-64               2.36.1  h193b22a_2              conda-forge/linux-64                    Cached
  + binutils_linux-64                      2.36  hf3e587d_33             conda-forge/linux-64                     22 KB
  + biom-format                           2.1.7  py27hc1659b7_1002       conda-forge/linux-64                     11 MB
  + bwidget                              1.9.14  ha770c72_0              conda-forge/linux-64                    Cached
  + bzip2                                 1.0.8  h7f98852_4              conda-forge/linux-64                    Cached
  + c-ares                               1.17.2  h7f98852_0              conda-forge/linux-64                    Cached
  + ca-certificates                   2021.5.30  ha878542_0              conda-forge/linux-64                    Cached
  + cairo                                1.16.0  hcf35c78_1003           conda-forge/linux-64                      1 MB
  + certifi                          2019.11.28  py27h8c360ce_1          conda-forge/linux-64                    149 KB
  + click                                 7.1.2  pyh9f0ad1d_0            conda-forge/noarch                       64 KB
  + cogent                                  1.9  py27heb79e2c_3          bioconda/linux-64                         2 MB
  + curl                                 7.76.1  h979ede3_1              conda-forge/linux-64                    149 KB
  + cycler                               0.10.0  py27_0                  conda-forge/linux-64                     13 KB
  + dbus                                 1.13.6  hfdff14a_1              conda-forge/linux-64                    585 KB
  + enum34                               1.1.10  py27h8c360ce_1          conda-forge/linux-64                     49 KB
  + expat                                 2.4.1  h9c3ff4c_0              conda-forge/linux-64                    182 KB
  + fontconfig                           2.13.1  hba837de_1005           conda-forge/linux-64                    Cached
  + freetype                             2.10.4  h0708190_1              conda-forge/linux-64                    Cached
  + fribidi                              1.0.10  h36c2ea0_0              conda-forge/linux-64                    Cached
  + functools32                         3.2.3.2  py27_2                  conda-forge/linux-64                     22 KB
  + future                               0.18.2  py27h8c360ce_1          conda-forge/linux-64                    722 KB
  + futures                               3.3.0  py27h8c360ce_1          conda-forge/linux-64                     26 KB
  + gcc_impl_linux-64                     7.5.0  habd7529_19             conda-forge/linux-64                     38 MB
  + gcc_linux-64                          7.5.0  h47867f9_33             conda-forge/linux-64                     23 KB
  + gettext                            0.19.8.1  hf34092f_1004           conda-forge/linux-64                      4 MB
  + gfortran_impl_linux-64                7.5.0  h56cb351_19             conda-forge/linux-64                      9 MB
  + gfortran_linux-64                     7.5.0  h78c8a43_33             conda-forge/linux-64                     23 KB
  + glib                                 2.66.3  h58526e2_0              conda-forge/linux-64                    500 KB
  + graphite2                            1.3.13  h58526e2_1001           conda-forge/linux-64                    Cached
  + gsl                                     2.6  he838d99_2              conda-forge/linux-64                      3 MB
  + gst-plugins-base                     1.14.5  h0935bb2_2              conda-forge/linux-64                      7 MB
  + gstreamer                            1.14.5  h36ae1b5_2              conda-forge/linux-64                      4 MB
  + gxx_impl_linux-64                     7.5.0  hd0bb8aa_19             conda-forge/linux-64                      9 MB
  + gxx_linux-64                          7.5.0  h555fc39_33             conda-forge/linux-64                     23 KB
  + h5py                                 2.10.0  nompi_py27h513d04c_102  conda-forge/linux-64                      1 MB
  + harfbuzz                              2.4.0  h9f30f68_3              conda-forge/linux-64                      1 MB
  + hdf5                                 1.10.5  nompi_h7c3c948_1111     conda-forge/linux-64                      3 MB
  + icu                                    64.2  he1b5a44_1              conda-forge/linux-64                     13 MB
  + jbig                                    2.1  h7f98852_2003           conda-forge/linux-64                    Cached
  + jpeg                                     9d  h36c2ea0_0              conda-forge/linux-64                    Cached
  + kernel-headers_linux-64              2.6.32  he073ed8_14             conda-forge/noarch                      Cached
  + kiwisolver                            1.1.0  py27h9e3301b_1          conda-forge/linux-64                     88 KB
  + krb5                                 1.17.2  h926e7f8_0              conda-forge/linux-64                      1 MB
  + ld_impl_linux-64                     2.36.1  hea4e1c9_2              conda-forge/linux-64                    Cached
  + lerc                                  2.2.1  h9c3ff4c_0              conda-forge/linux-64                    Cached
  + libblas                               3.9.0  8_openblas              conda-forge/linux-64                     11 KB
  + libcblas                              3.9.0  8_openblas              conda-forge/linux-64                     11 KB
  + libclang                              9.0.1  default_ha53f305_1      conda-forge/linux-64                     24 MB
  + libcurl                              7.76.1  hc4aaa36_1              conda-forge/linux-64                    328 KB
  + libdeflate                              1.7  h7f98852_5              conda-forge/linux-64                    Cached
  + libedit                        3.1.20191231  he28a2e2_2              conda-forge/linux-64                    Cached
  + libev                                  4.33  h516909a_1              conda-forge/linux-64                    Cached
  + libffi                                3.2.1  he1b5a44_1007           conda-forge/linux-64                     47 KB
  + libgcc-devel_linux-64                 7.5.0  hda03d7c_19             conda-forge/linux-64                      4 MB
  + libgcc-ng                            11.1.0  hc902ee8_8              conda-forge/linux-64                    Cached
  + libgfortran-ng                        7.5.0  h14aa051_19             conda-forge/linux-64                     22 KB
  + libgfortran4                          7.5.0  h14aa051_19             conda-forge/linux-64                      1 MB
  + libglib                              2.66.3  hbe7bbb4_0              conda-forge/linux-64                      3 MB
  + libgomp                              11.1.0  hc902ee8_8              conda-forge/linux-64                    Cached
  + libiconv                               1.16  h516909a_0              conda-forge/linux-64                    Cached
  + liblapack                             3.9.0  8_openblas              conda-forge/linux-64                     11 KB
  + libllvm9                              9.0.1  hf817b99_2              conda-forge/linux-64                     26 MB
  + libnghttp2                           1.43.0  h812cca2_0              conda-forge/linux-64                    Cached
  + libopenblas                          0.3.12  pthreads_hb3c22a3_1     conda-forge/linux-64                      8 MB
  + libpng                               1.6.37  h21135ba_2              conda-forge/linux-64                    Cached
  + libssh2                              1.10.0  ha56f1ee_0              conda-forge/linux-64                    Cached
  + libstdcxx-devel_linux-64              7.5.0  hb016644_19             conda-forge/linux-64                      9 MB
  + libstdcxx-ng                         11.1.0  h56837e0_8              conda-forge/linux-64                    Cached
  + libtiff                               4.3.0  hf544144_1              conda-forge/linux-64                    Cached
  + libuuid                              2.32.1  h7f98852_1000           conda-forge/linux-64                    Cached
  + libwebp-base                          1.2.1  h7f98852_0              conda-forge/linux-64                    Cached
  + libxcb                                 1.13  h7f98852_1003           conda-forge/linux-64                    Cached
  + libxkbcommon                         0.10.0  he1b5a44_0              conda-forge/linux-64                    475 KB
  + libxml2                              2.9.10  hee79883_0              conda-forge/linux-64                      1 MB
  + linecache2                            1.0.0  py27_0                  conda-forge/linux-64                     22 KB
  + lz4-c                                 1.9.3  h9c3ff4c_1              conda-forge/linux-64                    Cached
  + make                                    4.3  hd18ef5c_1              conda-forge/linux-64                    Cached
  + matplotlib                            2.2.5  ha770c72_3              conda-forge/linux-64                      7 KB
  + matplotlib-base                       2.2.5  py27h250f245_1          conda-forge/linux-64                      7 MB
  + mpi                                     1.0  mpich                   conda-forge/linux-64                      4 KB
  + mpi4py                                3.0.3  py27hf423c55_1          conda-forge/linux-64                    632 KB
  + mpich                                 3.3.2  h846660c_5              conda-forge/linux-64                      6 MB
  + mysql-connector-c                    6.1.11  h6eb9d5d_1007           conda-forge/linux-64                    Cached
  + mysql-python                          1.2.5  py27h7f98852_0          conda-forge/linux-64                     71 KB
  + ncurses                                 6.2  h58526e2_4              conda-forge/linux-64                    Cached
  + nspr                                   4.30  h9c3ff4c_0              conda-forge/linux-64                    233 KB
  + nss                                    3.69  hb5efdd6_0              conda-forge/linux-64                      2 MB
  + numpy                                1.16.5  py27h95a1406_0          conda-forge/linux-64                      4 MB
  + openssl                              1.1.1k  h7f98852_1              conda-forge/linux-64                    Cached
  + pandas                               0.24.2  py27hb3f55d8_0          conda-forge/linux-64                     11 MB
  + pango                                1.42.4  h7062337_4              conda-forge/linux-64                    521 KB
  + pcre                                   8.45  h9c3ff4c_0              conda-forge/linux-64                    Cached
  + pcre2                                 10.35  h032f7d1_2              conda-forge/linux-64                    693 KB
  + picrust                               1.1.4  pyh5ca1d4c_1            /home/vsts/conda/conda-bld/linux-64       1 MB
  + pip                                  20.1.1  pyh9f0ad1d_0            conda-forge/noarch                        1 MB
  + pixman                               0.38.0  h516909a_1003           conda-forge/linux-64                    594 KB
  + pthread-stubs                           0.4  h36c2ea0_1001           conda-forge/linux-64                    Cached
  + pyparsing                             2.4.7  pyh9f0ad1d_0            conda-forge/noarch                       60 KB
  + pyqi                                  0.3.2  py_0                    conda-forge/noarch                       36 KB
  + pyqt                                 5.12.3  py27hcca6a23_1          conda-forge/linux-64                      6 MB
  + python                               2.7.15  h5a48372_1011_cpython   conda-forge/linux-64                     12 MB
  + python-dateutil                       2.8.1  py_0                    conda-forge/noarch                      220 KB
  + python_abi                              2.7  1_cp27mu                conda-forge/linux-64                      4 KB
  + pytz                                 2020.1  pyh9f0ad1d_0            conda-forge/noarch                      227 KB
  + qt                                   5.12.5  hd8c4c69_1              conda-forge/linux-64                     99 MB
  + r-ape                                   5.5  r40h306847c_0           conda-forge/linux-64                      3 MB
  + r-base                                4.0.2  h95c6c4b_0              conda-forge/linux-64                     24 MB
  + r-lattice                           0.20_44  r40hcfec24a_0           conda-forge/linux-64                      1 MB
  + r-nlme                              3.1_150  r40h31ca83e_0           conda-forge/linux-64                      2 MB
  + r-rcpp                                1.0.7  r40h03ef668_0           conda-forge/linux-64                      2 MB
  + readline                                8.1  h46c0cb4_0              conda-forge/linux-64                    Cached
  + scipy                                 1.2.1  py27h921218d_2          conda-forge/linux-64                     18 MB
  + sed                                     4.8  he412f7d_0              conda-forge/linux-64                    Cached
  + setuptools                           44.0.0  py27_0                  conda-forge/linux-64                    663 KB
  + singledispatch                        3.6.1  pyh44b312d_0            conda-forge/noarch                       12 KB
  + six                                  1.16.0  pyh6c4a22f_0            conda-forge/noarch                      Cached
  + sqlalchemy                           1.3.15  py27hdf8410d_1          conda-forge/linux-64                      2 MB
  + sqlite                               3.36.0  h9cd32fc_0              conda-forge/linux-64                    Cached
  + subprocess32                          3.5.4  py27h516909a_0          conda-forge/linux-64                     46 KB
  + sysroot_linux-64                       2.12  he073ed8_14             conda-forge/noarch                      Cached
  + tk                                   8.6.11  h21135ba_0              conda-forge/linux-64                    Cached
  + tktable                                2.10  hb7b940f_3              conda-forge/linux-64                    Cached
  + tornado                               5.1.1  py27h14c3975_1000       conda-forge/linux-64                    642 KB
  + traceback2                            1.4.0  py27_0                  conda-forge/linux-64                     28 KB
  + unittest2                             1.1.0  py_0                    conda-forge/noarch                       68 KB
  + wheel                                0.37.0  pyhd8ed1ab_1            conda-forge/noarch                      Cached
  + xorg-kbproto                          1.0.7  h7f98852_1002           conda-forge/linux-64                    Cached
  + xorg-libice                          1.0.10  h7f98852_0              conda-forge/linux-64                    Cached
  + xorg-libsm                            1.2.3  hd9c2040_1000           conda-forge/linux-64                    Cached
  + xorg-libx11                           1.7.2  h7f98852_0              conda-forge/linux-64                    Cached
  + xorg-libxau                           1.0.9  h7f98852_0              conda-forge/linux-64                    Cached
  + xorg-libxdmcp                         1.1.3  h7f98852_0              conda-forge/linux-64                    Cached
  + xorg-libxext                          1.3.4  h7f98852_1              conda-forge/linux-64                    Cached
  + xorg-libxrender                      0.9.10  h7f98852_1003           conda-forge/linux-64                    Cached
  + xorg-renderproto                     0.11.1  h7f98852_1002           conda-forge/linux-64                    Cached
  + xorg-xextproto                        7.3.0  h7f98852_1002           conda-forge/linux-64                    Cached
  + xorg-xproto                          7.0.31  h7f98852_1007           conda-forge/linux-64                    Cached
  + xz                                    5.2.5  h516909a_1              conda-forge/linux-64                    Cached
  + zlib                                 1.2.11  h516909a_1010           conda-forge/linux-64                    Cached
  + zstd                                  1.5.0  ha95c52a_0              conda-forge/linux-64                    Cached

  Summary:

  Install: 146 packages

  Total download: 396 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: picrust-1.1.4-pyh5ca1d4c_1.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/picrust_1630510841485/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac


The following NEW packages will be INSTALLED:

    _libgcc_mutex:                 0.1-conda_forge               conda-forge
    _openmp_mutex:                 4.5-1_gnu                     conda-forge
    _r-mutex:                      1.0.1-anacondar_1             conda-forge
    backports:                     1.0-py27_1                    conda-forge
    backports.functools_lru_cache: 1.6.1-py_0                    conda-forge
    backports_abc:                 0.5-py27_0                    conda-forge
    binutils_impl_linux-64:        2.36.1-h193b22a_2             conda-forge
    binutils_linux-64:             2.36-hf3e587d_33              conda-forge
    biom-format:                   2.1.7-py27hc1659b7_1002       conda-forge
    bwidget:                       1.9.14-ha770c72_0             conda-forge
    bzip2:                         1.0.8-h7f98852_4              conda-forge
    c-ares:                        1.17.2-h7f98852_0             conda-forge
    ca-certificates:               2021.5.30-ha878542_0          conda-forge
    cairo:                         1.16.0-hcf35c78_1003          conda-forge
    certifi:                       2019.11.28-py27h8c360ce_1     conda-forge
    click:                         7.1.2-pyh9f0ad1d_0            conda-forge
    cogent:                        1.9-py27heb79e2c_3            bioconda   
    curl:                          7.76.1-h979ede3_1             conda-forge
    cycler:                        0.10.0-py27_0                 conda-forge
    dbus:                          1.13.6-hfdff14a_1             conda-forge
    enum34:                        1.1.10-py27h8c360ce_1         conda-forge
    expat:                         2.4.1-h9c3ff4c_0              conda-forge
    fontconfig:                    2.13.1-hba837de_1005          conda-forge
    freetype:                      2.10.4-h0708190_1             conda-forge
    fribidi:                       1.0.10-h36c2ea0_0             conda-forge
    functools32:                   3.2.3.2-py27_2                conda-forge
    future:                        0.18.2-py27h8c360ce_1         conda-forge
    futures:                       3.3.0-py27h8c360ce_1          conda-forge
    gcc_impl_linux-64:             7.5.0-habd7529_19             conda-forge
    gcc_linux-64:                  7.5.0-h47867f9_33             conda-forge
    gettext:                       0.19.8.1-hf34092f_1004        conda-forge
    gfortran_impl_linux-64:        7.5.0-h56cb351_19             conda-forge
    gfortran_linux-64:             7.5.0-h78c8a43_33             conda-forge
    glib:                          2.66.3-h58526e2_0             conda-forge
    graphite2:                     1.3.13-h58526e2_1001          conda-forge
    gsl:                           2.6-he838d99_2                conda-forge
    gst-plugins-base:              1.14.5-h0935bb2_2             conda-forge
    gstreamer:                     1.14.5-h36ae1b5_2             conda-forge
    gxx_impl_linux-64:             7.5.0-hd0bb8aa_19             conda-forge
    gxx_linux-64:                  7.5.0-h555fc39_33             conda-forge
    h5py:                          2.10.0-nompi_py27h513d04c_102 conda-forge
    harfbuzz:                      2.4.0-h9f30f68_3              conda-forge
    hdf5:                          1.10.5-nompi_h7c3c948_1111    conda-forge
    icu:                           64.2-he1b5a44_1               conda-forge
    jbig:                          2.1-h7f98852_2003             conda-forge
    jpeg:                          9d-h36c2ea0_0                 conda-forge
    kernel-headers_linux-64:       2.6.32-he073ed8_14            conda-forge
    kiwisolver:                    1.1.0-py27h9e3301b_1          conda-forge
    krb5:                          1.17.2-h926e7f8_0             conda-forge
    ld_impl_linux-64:              2.36.1-hea4e1c9_2             conda-forge
    lerc:                          2.2.1-h9c3ff4c_0              conda-forge
    libblas:                       3.9.0-8_openblas              conda-forge
    libcblas:                      3.9.0-8_openblas              conda-forge
    libclang:                      9.0.1-default_ha53f305_1      conda-forge
    libcurl:                       7.76.1-hc4aaa36_1             conda-forge
    libdeflate:                    1.7-h7f98852_5                conda-forge
    libedit:                       3.1.20191231-he28a2e2_2       conda-forge
    libev:                         4.33-h516909a_1               conda-forge
    libffi:                        3.2.1-he1b5a44_1007           conda-forge
    libgcc-devel_linux-64:         7.5.0-hda03d7c_19             conda-forge
    libgcc-ng:                     11.1.0-hc902ee8_8             conda-forge
    libgfortran-ng:                7.5.0-h14aa051_19             conda-forge
    libgfortran4:                  7.5.0-h14aa051_19             conda-forge
    libglib:                       2.66.3-hbe7bbb4_0             conda-forge
    libgomp:                       11.1.0-hc902ee8_8             conda-forge
    libiconv:                      1.16-h516909a_0               conda-forge
    liblapack:                     3.9.0-8_openblas              conda-forge
    libllvm9:                      9.0.1-hf817b99_2              conda-forge
    libnghttp2:                    1.43.0-h812cca2_0             conda-forge
    libopenblas:                   0.3.12-pthreads_hb3c22a3_1    conda-forge
    libpng:                        1.6.37-h21135ba_2             conda-forge
    libssh2:                       1.10.0-ha56f1ee_0             conda-forge
    libstdcxx-devel_linux-64:      7.5.0-hb016644_19             conda-forge
    libstdcxx-ng:                  11.1.0-h56837e0_8             conda-forge
    libtiff:                       4.3.0-hf544144_1              conda-forge
    libuuid:                       2.32.1-h7f98852_1000          conda-forge
    libwebp-base:                  1.2.1-h7f98852_0              conda-forge
    libxcb:                        1.13-h7f98852_1003            conda-forge
    libxkbcommon:                  0.10.0-he1b5a44_0             conda-forge
    libxml2:                       2.9.10-hee79883_0             conda-forge
    linecache2:                    1.0.0-py27_0                  conda-forge
    lz4-c:                         1.9.3-h9c3ff4c_1              conda-forge
    make:                          4.3-hd18ef5c_1                conda-forge
    matplotlib:                    2.2.5-ha770c72_3              conda-forge
    matplotlib-base:               2.2.5-py27h250f245_1          conda-forge
    mpi:                           1.0-mpich                     conda-forge
    mpi4py:                        3.0.3-py27hf423c55_1          conda-forge
    mpich:                         3.3.2-h846660c_5              conda-forge
    mysql-connector-c:             6.1.11-h6eb9d5d_1007          conda-forge
    mysql-python:                  1.2.5-py27h7f98852_0          conda-forge
    ncurses:                       6.2-h58526e2_4                conda-forge
    nspr:                          4.30-h9c3ff4c_0               conda-forge
    nss:                           3.69-hb5efdd6_0               conda-forge
    numpy:                         1.16.5-py27h95a1406_0         conda-forge
    openssl:                       1.1.1k-h7f98852_1             conda-forge
    pandas:                        0.24.2-py27hb3f55d8_0         conda-forge
    pango:                         1.42.4-h7062337_4             conda-forge
    pcre:                          8.45-h9c3ff4c_0               conda-forge
    pcre2:                         10.35-h032f7d1_2              conda-forge
    picrust:                       1.1.4-pyh5ca1d4c_1            local      
    pip:                           20.1.1-pyh9f0ad1d_0           conda-forge
    pixman:                        0.38.0-h516909a_1003          conda-forge
    pthread-stubs:                 0.4-h36c2ea0_1001             conda-forge
    pyparsing:                     2.4.7-pyh9f0ad1d_0            conda-forge
    pyqi:                          0.3.2-py_0                    conda-forge
    pyqt:                          5.12.3-py27hcca6a23_1         conda-forge
    python:                        2.7.15-h5a48372_1011_cpython  conda-forge
    python-dateutil:               2.8.1-py_0                    conda-forge
    python_abi:                    2.7-1_cp27mu                  conda-forge
    pytz:                          2020.1-pyh9f0ad1d_0           conda-forge
    qt:                            5.12.5-hd8c4c69_1             conda-forge
    r-ape:                         5.5-r40h306847c_0             conda-forge
    r-base:                        4.0.2-h95c6c4b_0              conda-forge
    r-lattice:                     0.20_44-r40hcfec24a_0         conda-forge
    r-nlme:                        3.1_150-r40h31ca83e_0         conda-forge
    r-rcpp:                        1.0.7-r40h03ef668_0           conda-forge
    readline:                      8.1-h46c0cb4_0                conda-forge
    scipy:                         1.2.1-py27h921218d_2          conda-forge
    sed:                           4.8-he412f7d_0                conda-forge
    setuptools:                    44.0.0-py27_0                 conda-forge
    singledispatch:                3.6.1-pyh44b312d_0            conda-forge
    six:                           1.16.0-pyh6c4a22f_0           conda-forge
    sqlalchemy:                    1.3.15-py27hdf8410d_1         conda-forge
    sqlite:                        3.36.0-h9cd32fc_0             conda-forge
    subprocess32:                  3.5.4-py27h516909a_0          conda-forge
    sysroot_linux-64:              2.12-he073ed8_14              conda-forge
    tk:                            8.6.11-h21135ba_0             conda-forge
    tktable:                       2.10-hb7b940f_3               conda-forge
    tornado:                       5.1.1-py27h14c3975_1000       conda-forge
    traceback2:                    1.4.0-py27_0                  conda-forge
    unittest2:                     1.1.0-py_0                    conda-forge
    wheel:                         0.37.0-pyhd8ed1ab_1           conda-forge
    xorg-kbproto:                  1.0.7-h7f98852_1002           conda-forge
    xorg-libice:                   1.0.10-h7f98852_0             conda-forge
    xorg-libsm:                    1.2.3-hd9c2040_1000           conda-forge
    xorg-libx11:                   1.7.2-h7f98852_0              conda-forge
    xorg-libxau:                   1.0.9-h7f98852_0              conda-forge
    xorg-libxdmcp:                 1.1.3-h7f98852_0              conda-forge
    xorg-libxext:                  1.3.4-h7f98852_1              conda-forge
    xorg-libxrender:               0.9.10-h7f98852_1003          conda-forge
    xorg-renderproto:              0.11.1-h7f98852_1002          conda-forge
    xorg-xextproto:                7.3.0-h7f98852_1002           conda-forge
    xorg-xproto:                   7.0.31-h7f98852_1007          conda-forge
    xz:                            5.2.5-h516909a_1              conda-forge
    zlib:                          1.2.11-h516909a_1010          conda-forge
    zstd:                          1.5.0-ha95c52a_0              conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/picrust_1630510841485/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac
export SRC_DIR=/home/vsts/conda/conda-bld/picrust_1630510841485/test_tmp
INFO: activate-binutils_linux-64.sh made the following environmental changes:
+ADDR2LINE=$PREFIX/bin/x86_64-conda-linux-gnu-addr2line
+AR=$PREFIX/bin/x86_64-conda-linux-gnu-ar
+AS=$PREFIX/bin/x86_64-conda-linux-gnu-as
+CXXFILT=$PREFIX/bin/x86_64-conda-linux-gnu-c++filt
+ELFEDIT=$PREFIX/bin/x86_64-conda-linux-gnu-elfedit
+GPROF=$PREFIX/bin/x86_64-conda-linux-gnu-gprof
+LD=$PREFIX/bin/x86_64-conda-linux-gnu-ld
+LD_GOLD=$PREFIX/bin/x86_64-conda-linux-gnu-ld.gold
+NM=$PREFIX/bin/x86_64-conda-linux-gnu-nm
+OBJCOPY=$PREFIX/bin/x86_64-conda-linux-gnu-objcopy
+OBJDUMP=$PREFIX/bin/x86_64-conda-linux-gnu-objdump
+RANLIB=$PREFIX/bin/x86_64-conda-linux-gnu-ranlib
+READELF=$PREFIX/bin/x86_64-conda-linux-gnu-readelf
+SIZE=$PREFIX/bin/x86_64-conda-linux-gnu-size
+STRINGS=$PREFIX/bin/x86_64-conda-linux-gnu-strings
+STRIP=$PREFIX/bin/x86_64-conda-linux-gnu-strip
INFO: activate-gcc_linux-64.sh made the following environmental changes:
+BUILD=x86_64-conda-linux-gnu
+CC=$PREFIX/bin/x86_64-conda-linux-gnu-cc
+CC_FOR_BUILD=$PREFIX/bin/x86_64-conda-linux-gnu-cc
+CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+CMAKE_ARGS=-DCMAKE_AR=$PREFIX/bin/x86_64-conda-linux-gnu-ar -DCMAKE_CXX_COMPILER_AR=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-ar -DCMAKE_C_COMPILER_AR=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-ar -DCMAKE_RANLIB=$PREFIX/bin/x86_64-conda-linux-gnu-ranlib -DCMAKE_CXX_COMPILER_RANLIB=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-ranlib -DCMAKE_C_COMPILER_RANLIB=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-ranlib -DCMAKE_LINKER=$PREFIX/bin/x86_64-conda-linux-gnu-ld -DCMAKE_STRIP=$PREFIX/bin/x86_64-conda-linux-gnu-strip -DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER -DCMAKE_FIND_ROOT_PATH_MODE_LIBRARY=ONLY -DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY -DCMAKE_FIND_ROOT_PATH=$PREFIX;/home/vsts/conda/conda-bld/picrust_1630510841485/_build_env/x86_64-conda-linux-gnu/sysroot -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_INSTALL_LIBDIR=lib
+CMAKE_PREFIX_PATH=$PREFIX:$PREFIX/x86_64-conda-linux-gnu/sysroot/usr
+CONDA_BUILD_SYSROOT=$PREFIX/x86_64-conda-linux-gnu/sysroot
+CONDA_TOOLCHAIN_BUILD=x86_64-conda-linux-gnu
+CONDA_TOOLCHAIN_HOST=x86_64-conda-linux-gnu
+CPP=$PREFIX/bin/x86_64-conda-linux-gnu-cpp
+CPPFLAGS=-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem $PREFIX/include
+DEBUG_CFLAGS=-march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+DEBUG_CPPFLAGS=-D_DEBUG -D_FORTIFY_SOURCE=2 -Og -isystem $PREFIX/include
+GCC=$PREFIX/bin/x86_64-conda-linux-gnu-gcc
+GCC_AR=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-ar
+GCC_NM=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-nm
+GCC_RANLIB=$PREFIX/bin/x86_64-conda-linux-gnu-gcc-ranlib
+HOST=x86_64-conda-linux-gnu
+LDFLAGS=-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,$PREFIX/lib -Wl,-rpath-link,$PREFIX/lib -L$PREFIX/lib
+_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_conda_cos6_linux_gnu
+build_alias=x86_64-conda-linux-gnu
+host_alias=x86_64-conda-linux-gnu
INFO: activate-gfortran_linux-64.sh made the following environmental changes:
+DEBUG_FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -ffunction-sections -pipe
+DEBUG_FORTRANFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix -fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fcheck=all -fbacktrace -fimplicit-none -fvar-tracking-assignments -ffunction-sections -pipe
+F77=$PREFIX/bin/x86_64-conda-linux-gnu-gfortran
+F90=$PREFIX/bin/x86_64-conda-linux-gnu-gfortran
+F95=$PREFIX/bin/x86_64-conda-linux-gnu-f95
+FC=$PREFIX/bin/x86_64-conda-linux-gnu-gfortran
+FFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+FORTRANFLAGS=-fopenmp -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+GFORTRAN=$PREFIX/bin/x86_64-conda-linux-gnu-gfortran
INFO: activate-gxx_linux-64.sh made the following environmental changes:
+CXX=$PREFIX/bin/x86_64-conda-linux-gnu-c++
+CXXFLAGS=-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+CXX_FOR_BUILD=$PREFIX/bin/x86_64-conda-linux-gnu-c++
+DEBUG_CXXFLAGS=-fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-all -fno-plt -Og -g -Wall -Wextra -fvar-tracking-assignments -ffunction-sections -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/picrust-1.1.4 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+GXX=$PREFIX/bin/x86_64-conda-linux-gnu-g++
Usage: normalize_by_copy_number.py [options] {-i/--input_otu_fp INPUT_OTU_FP -o/--output_otu_fp OUTPUT_OTU_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)



Example usage: 
Print help message and exit
 normalize_by_copy_number.py -h

Normalize the OTU abundances for a given OTU table picked against the newest version of Greengenes
 normalize_by_copy_number.py -i closed_picked_otus.biom -o normalized_otus.biom

Change the version of Greengenes used for OTU picking
 normalize_by_copy_number.py -g 18may2012 -i closed_picked_otus.biom -o normalized_otus.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  -c INPUT_COUNT_FP, --input_count_fp=INPUT_COUNT_FP
                        Precalculated input marker gene copy number
                        predictions on per otu basis in biom format (can be
                        gzipped).Note: using this option overrides
                        --gg_version. [default: none]
  --metadata_identifer=METADATA_IDENTIFER
                        identifier for copy number entry as observation
                        metadata [default: CopyNumber]
  --load_precalc_file_in_biom
                        Instead of loading the precalculated file in tab-
                        delimited format (with otu ids as row ids and traits
                        as columns) load the data in biom format (with otu as
                        SampleIds and traits as ObservationIds) [default:
                        False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_OTU_FP, --input_otu_fp=INPUT_OTU_FP
                        the input otu table filepath in biom format [REQUIRED]
    -o OUTPUT_OTU_FP, --output_otu_fp=OUTPUT_OTU_FP
                        the output otu table filepath in biom format
                        [REQUIRED]
Usage: predict_metagenomes.py [options] {-i/--input_otu_table INPUT_OTU_TABLE -o/--output_metagenome_table OUTPUT_METAGENOME_TABLE}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)



Example usage: 
Print help message and exit
 predict_metagenomes.py -h

Predict KO abundances for a given OTU table picked against the newest version of GreenGenes.
 predict_metagenomes.py -i normalized_otus.biom -o predicted_metagenomes.biom

Change output format to plain tab-delimited
 predict_metagenomes.py -f -i normalized_otus.biom -o predicted_metagenomes.txt

Predict KO abundances for a given OTU table, but do not round predictions to nearest whole number (esp. needed for proportional abundances)
 predict_metagenomes.py --no_round -i normalized_otus.biom -o predicted_metagenomes.txt

Predict COG abundances for a given OTU table.
 predict_metagenomes.py -i normalized_otus.biom -t cog -o cog_predicted_metagenomes.biom

Predict RFAM abundances for a given OTU table.
 predict_metagenomes.py -i normalized_otus.biom -t rfam -o rfam_predicted_metagenomes.biom

Output confidence intervals for each prediction.
 predict_metagenomes.py -i normalized_otus.biom -o predicted_metagenomes.biom --with_confidence

Predict metagenomes using a custom trait table in tab-delimited format.
 predict_metagenomes.py -i otu_table_for_custom_trait_table.biom -c custom_trait_table.tab -o output_metagenome_from_custom_trait_table.biom

Predict metagenomes,variances,and 95% confidence intervals for each gene category using a custom trait table in tab-delimited format.
 predict_metagenomes.py -i otu_table_for_custom_trait_table.biom --input_variance_table custom_trait_table_variances.tab -c custom_trait_table.tab -o output_metagenome_from_custom_trait_table.biom --with_confidence

Change the version of GG used to pick OTUs
 predict_metagenomes.py -i normalized_otus.biom -g 18may2012 -o predicted_metagenomes.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -t TYPE_OF_PREDICTION, --type_of_prediction=TYPE_OF_PREDICTION
                        Type of functional predictions. Valid choices are: ko,
                        cog, rfam [default: ko]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  -c INPUT_COUNT_TABLE, --input_count_table=INPUT_COUNT_TABLE
                        Precalculated function predictions on per otu basis in
                        biom format (can be gzipped). Note: using this option
                        overrides --type_of_prediction and --gg_version.
                        [default: none]
  -a ACCURACY_METRICS, --accuracy_metrics=ACCURACY_METRICS
                        If provided, calculate accuracy metrics for the
                        predicted metagenome.  NOTE: requires that per-genome
                        accuracy metrics were calculated using
                        predict_traits.py during genome prediction (e.g. there
                        are "NSTI" values in the genome .biom file metadata)
  --no_round            Disable rounding number of predicted functions to the
                        the nearest whole number. This option is important if
                        you are inputting abundances as proportions [default:
                        False]
  --normalize_by_function
                        Normalizes the predicted functional abundances by
                        dividing each abundance by the sum of functional
                        abundances in the sample. Total sum of abundances for
                        each sample will equal 1.
  --normalize_by_otu    Normalizes the predicted functional abundances by
                        dividing each abundance by the sum of OTUs in the
                        sample. Note: total sum of abundances for each sample
                        will NOT equal 1.
  --suppress_subset_loading
                        Normally, only counts for OTUs present in the sample
                        are loaded.  If this flag is passed, the full biom
                        table is loaded.  This makes no difference for the
                        analysis, but may result in faster load times (at the
                        cost of more memory usage)
  --load_precalc_file_in_biom
                        Instead of loading the precalculated file in tab-
                        delimited format (with otu ids as row ids and traits
                        as columns) load the data in biom format (with otu as
                        SampleIds and traits as ObservationIds) [default:
                        False]
  --input_variance_table=INPUT_VARIANCE_TABLE
                        Precalculated table of variances corresponding to the
                        precalculated table of function predictions.  As with
                        the count table, these are on a per otu basis and in
                        BIOM format (can be gzipped). Note: using this option
                        overrides --type_of_prediction and --gg_version.
                        [default: none]
  --with_confidence     Calculate 95% confidence intervals for metagenome
                        predictions.  By default, this uses the confidence
                        intervals for the precalculated table of genes for
                        greengenes OTUs.  If you pass a custom count table
                        with -c and select this option, you must also specify
                        a corresponding table of confidence intervals for the
                        gene content prediction using --input_variance_table.
                        (these are generated by running predict_traits.py with
                        the --with_confidence option). If this flag is set,
                        three addtional output files will be generated, named
                        the same as the metagenome prediction output, but with
                        .variance .upper_CI or .lower_CI appended immediately
                        before the file extension [default: False]
  -f, --format_tab_delimited
                        output the predicted metagenome table in tab-delimited
                        format [default: False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_OTU_TABLE, --input_otu_table=INPUT_OTU_TABLE
                        the input otu table in biom format [REQUIRED]
    -o OUTPUT_METAGENOME_TABLE, --output_metagenome_table=OUTPUT_METAGENOME_TABLE
                        the output file for the predicted metagenome
                        [REQUIRED]
Usage: categorize_by_function.py [options] {-i/--input_fp INPUT_FP -o/--output_fp OUTPUT_FP -c/--metadata_category METADATA_CATEGORY -l/--level LEVEL}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

This script collapses hierarchical data to a specified level. For instance, often it is useful to examine KEGG results from a higher level within the pathway hierarchy. Many genes are sometimes involved in multiple pathways, and in these circumstances (also know as a one-to-many relationship), the gene is counted for each pathway. This has a side effect of increasing the total count of genes in the table.

Example usage: 
Print help message and exit
 categorize_by_function.py -h

Collapse predicted metagenome using KEGG Pathway metadata.
 categorize_by_function.py -i predicted_metagenomes.biom -c KEGG_Pathways -l 3 -o predicted_metagenomes.L3.biom

Change output to tab-delimited format (instead of BIOM).
 categorize_by_function.py -f -i predicted_metagenomes.biom -c KEGG_Pathways -l 3 -o predicted_metagenomes.L3.txt

Collapse COG Categories.
 categorize_by_function.py -i cog_predicted_metagenomes.biom -c COG_Category -l 2 -o cog_predicted_metagenomes.L2.biom

Collapse predicted metagenome using taxonomy metadata (not one-to-many).
 categorize_by_function.py -i observation_table.biom -c taxonomy -l 1 -o observation_table.L1.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  --ignore=IGNORE       Ignore the comma separated list of names. For
                        instance, specifying
                        --ignore_unknown=unknown,unclassified will ignore
                        those labels while collapsing. The default is to not
                        ignore anything. [default: none]
  -f, --format_tab_delimited
                        output the predicted metagenome table in tab-delimited
                        format [default: False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_FP, --input_fp=INPUT_FP
                        the predicted metagenome table [REQUIRED]
    -o OUTPUT_FP, --output_fp=OUTPUT_FP
                        the resulting table [REQUIRED]
    -c METADATA_CATEGORY, --metadata_category=METADATA_CATEGORY
                        the metadata category that describes the hierarchy
                        (e.g. KEGG_Pathways, COG_Category, etc.). Note: RFAM
                        predictions can not be collapsed because there are no
                        categories to group them into. [REQUIRED]
    -l LEVEL, --level=LEVEL
                        the level in the hierarchy to collapse to. A value of
                        0 is not allowed, a value of 1 is the highest level,
                        and any higher value nears the leaves of the
                        hierarchy. For instance, if the hierarchy contains 4
                        levels, specifying 3 would collapse at one level above
                        being fully specified. [REQUIRED]
Usage: metagenome_contributions.py [options] {-i/--input_otu_table INPUT_OTU_TABLE -o/--output_fp OUTPUT_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)



Example usage: 
Print help message and exit
 metagenome_contributions.py -h

Partition the predicted contribution to the  metagenomes from each organism in the given OTU table, limited to only K00001, K00002, and K00004.
 metagenome_contributions.py -i normalized_otus.biom -l K00001,K00002,K00004 -o ko_metagenome_contributions.tab

Partition the predicted contribution to the  metagenomes from each organism in the given OTU table, limited to only COG0001 and COG0002.
 metagenome_contributions.py -i normalized_otus.biom -l COG0001,COG0002 -t cog -o cog_metagenome_contributions.tab

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -t TYPE_OF_PREDICTION, --type_of_prediction=TYPE_OF_PREDICTION
                        Type of functional predictions. Valid choices are: ko,
                        cog, rfam [default: ko]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  -c INPUT_COUNT_TABLE, --input_count_table=INPUT_COUNT_TABLE
                        Precalculated function predictions on per otu basis in
                        biom format (can be gzipped). Note: using this option
                        overrides --type_of_prediction and --gg_version.
                        [default: none]
  --suppress_subset_loading
                        Normally, only counts for OTUs present in the sample
                        are loaded.  If this flag is passed, the full biom
                        table is loaded.  This makes no difference for the
                        analysis, but may result in faster load times (at the
                        cost of more memory usage)
  --load_precalc_file_in_biom
                        Instead of loading the precalculated file in tab-
                        delimited format (with otu ids as row ids and traits
                        as columns) load the data in biom format (with otu as
                        SampleIds and traits as ObservationIds) [default:
                        False]
  -f LIMIT_TO_FUNCTIONAL_CATEGORIES, --limit_to_functional_categories=LIMIT_TO_FUNCTIONAL_CATEGORIES
                        If provided only output prediction for functions that
                        match the specified functional category. Multiple
                        categories can be passed as a list separated by |
                        [default: False]
  -l LIMIT_TO_FUNCTION, --limit_to_function=LIMIT_TO_FUNCTION
                        If provided, only output predictions for the specified
                        function ids.  Multiple function ids can be passed
                        using comma delimiters.

  REQUIRED options:
    The following options must be provided under all circumstances.

    -i INPUT_OTU_TABLE, --input_otu_table=INPUT_OTU_TABLE
                        the input otu table in biom format [REQUIRED]
    -o OUTPUT_FP, --output_fp=OUTPUT_FP
                        the output file for the metagenome contributions
                        [REQUIRED]
Usage: compare_biom.py [options] {-e/--exp_trait_table_fp EXP_TRAIT_TABLE_FP -o/--output_fp OUTPUT_FP}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

 

Example usage: 
Print help message and exit
 compare_biom.py -h

Example 1: Compare an observed table to an expected table using relative abundance
 compare_biom.py -e expected_ra.biom -o compare_results_ra.tab observed_ra.biom

Example 2: Compare an observed table to an expected table using real counts
 compare_biom.py --not_relative_abundance -e expected.biom -o compare_results.tab observed.biom

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -c, --compare_observations
                        Calculate accuracy values by comparing between
                        observations (instead of between samples) [default:
                        False]
  -n, --normalize       Convert both expected and observed tables to relative
                        abundances (instead of observations) [default: False]
  -l, --limit_to_expected_observations
                        Ignore observations that are not in the expected
                        table[default: False]
  --limit_to_observed_observations
                        Ignore observations that are not in the observed
                        table[default: False]
  -s, --shuffle_samples
                        Shuffle samples ids randomly before measuring
                        accuracy[default: False]
  --not_relative_abundance_scores
                        Round numbers (instead of taking ceil() which is used
                        for RA) before calculating TP,FP,FN,TN [default:
                        False]

  REQUIRED options:
    The following options must be provided under all circumstances.

    -e EXP_TRAIT_TABLE_FP, --exp_trait_table_fp=EXP_TRAIT_TABLE_FP
                        the expected trait table (biom format) [REQUIRED]
    -o OUTPUT_FP, --output_fp=OUTPUT_FP
                        the output file [REQUIRED]
Usage: download_picrust_files.py [options] {}

[] indicates optional input (order unimportant)
{} indicates required input (order unimportant)

Downloads PICRUSt pre-calculated files to the data directory ($PREFIX/lib/python2.7/site-packages/picrust/data).

Example usage: 
Print help message and exit
 download_picrust_files.py -h

Download default pre-calculated files
 download_picrust_files.py

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -v, --verbose         Print information during execution -- useful for
                        debugging [default: False]
  -t TYPE_OF_PREDICTION, --type_of_prediction=TYPE_OF_PREDICTION
                        Type of functional predictions. Valid choices are: ko,
                        cog, rfam [default: ko]
  -g GG_VERSION, --gg_version=GG_VERSION
                        Version of GreenGenes that was used for OTU picking.
                        Valid choices are: 13_5, 18may2012 [default: 13_5]
  --with_confidence     Download confidence interval files (only available for
                        GreenGenes 13_5) [default: False]
  --force               Force download of files (i.e. overwrite existing)
                        [default: False]

Resource usage statistics from testing picrust:
   Process count: 3
   CPU time: Sys=0:00:00.2, User=0:00:00.7
   Memory: 103.2M
   Disk usage: 20B
   Time elapsed: 0:00:06.2


TEST END: picrust-1.1.4-pyh5ca1d4c_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


Updating build index: /Users/runner/conda/conda-bld

TEST START: pycoqc-2.5.2-py_0.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmp1ph771fu/info/recipe/conda_build_config.yaml
  Package                    Version  Build                    Channel                                    Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + attrs                     21.2.0  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + brotlipy                   0.7.0  py37h271585c_1001        conda-forge/osx-64                       357 KB
  + bzip2                      1.0.8  h0d85af4_4               conda-forge/osx-64                       Cached
  + c-ares                    1.17.2  h0d85af4_0               conda-forge/osx-64                       Cached
  + ca-certificates        2021.5.30  h033912b_0               conda-forge/osx-64                       Cached
  + certifi                2021.5.30  py37hf985489_0           conda-forge/osx-64                       141 KB
  + cffi                      1.14.6  py37hda351d9_0           conda-forge/osx-64                       218 KB
  + chardet                    4.0.0  py37hf985489_1           conda-forge/osx-64                       198 KB
  + charset-normalizer         2.0.0  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + cryptography               3.4.7  py37hce4a858_0           conda-forge/osx-64                       754 KB
  + curl                      7.78.0  hb861fe1_0               conda-forge/osx-64                       Cached
  + decorator                  5.0.9  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + h5py                       2.9.0  nompi_py37h6248fd5_1104  conda-forge/osx-64                       959 KB
  + hdf5                      1.10.5  nompi_h34ad4e8_1111      conda-forge/osx-64                         3 MB
  + idna                         3.1  pyhd3deb0d_0             conda-forge/noarch                       Cached
  + importlib-metadata         4.8.1  py37hf985489_0           conda-forge/osx-64                        32 KB
  + importlib_metadata         4.8.1  hd8ed1ab_0               conda-forge/noarch                         4 KB
  + ipython_genutils           0.2.0  py_1                     conda-forge/noarch                        21 KB
  + jinja2                    2.10.1  py_0                     conda-forge/noarch                        91 KB
  + jsonschema                 3.2.0  py37hc8dfbb8_1           conda-forge/osx-64                        89 KB
  + jupyter_core               4.7.1  py37hf985489_0           conda-forge/osx-64                        72 KB
  + krb5                      1.19.2  hcfbf3a7_0               conda-forge/osx-64                       Cached
  + libblas                    3.9.0  8_openblas               conda-forge/osx-64                        11 KB
  + libcblas                   3.9.0  8_openblas               conda-forge/osx-64                        11 KB
  + libcurl                   7.78.0  hf45b732_0               conda-forge/osx-64                       Cached
  + libcxx                    12.0.1  habf9029_0               conda-forge/osx-64                       Cached
  + libdeflate                   1.3  h01d97ff_0               conda-forge/osx-64                        63 KB
  + libedit             3.1.20191231  h0678c8f_2               conda-forge/osx-64                       Cached
  + libev                       4.33  haf1e3a3_1               conda-forge/osx-64                       Cached
  + libffi                       3.3  h046ec9c_2               conda-forge/osx-64                       Cached
  + libgfortran                4.0.0  7_5_0_h1a10cd1_23        conda-forge/osx-64                        19 KB
  + libgfortran4               7.5.0  h1a10cd1_23              conda-forge/osx-64                         1 MB
  + liblapack                  3.9.0  8_openblas               conda-forge/osx-64                        11 KB
  + libnghttp2                1.43.0  h07e645a_0               conda-forge/osx-64                       Cached
  + libopenblas               0.3.12  openmp_h63d9170_1        conda-forge/osx-64                         9 MB
  + libssh2                   1.10.0  h52ee1ee_0               conda-forge/osx-64                       Cached
  + llvm-openmp               12.0.1  hda6cdc1_1               conda-forge/osx-64                       Cached
  + markupsafe                 2.0.1  py37h271585c_0           conda-forge/osx-64                        21 KB
  + nbformat                   5.1.3  pyhd8ed1ab_0             conda-forge/noarch                        47 KB
  + ncurses                      6.2  h2e338ed_4               conda-forge/osx-64                       Cached
  + numpy                     1.17.1  py37h6b0580a_0           conda-forge/osx-64                         5 MB
  + openssl                   1.1.1l  h0d85af4_0               conda-forge/osx-64                       Cached
  + pandas                    0.25.1  py37h86efe34_0           conda-forge/osx-64                        10 MB
  + pip                       21.2.4  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + plotly                     4.1.0  py_0                     conda-forge/noarch                         4 MB
  + pycoqc                     2.5.2  py_0                     /Users/runner/conda/conda-bld/osx-64      37 KB
  + pycparser                   2.20  pyh9f0ad1d_2             conda-forge/noarch                       Cached
  + pyopenssl                 20.0.1  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + pyrsistent                0.17.3  py37h271585c_2           conda-forge/osx-64                        87 KB
  + pysam                     0.15.3  py37h4ace0ce_3           bioconda/osx-64                            2 MB
  + pysocks                    1.7.1  py37hf985489_3           conda-forge/osx-64                        27 KB
  + python                    3.7.10  h7728216_100_cpython     conda-forge/osx-64                        24 MB
  + python-dateutil            2.8.2  pyhd8ed1ab_0             conda-forge/noarch                       240 KB
  + python_abi                   3.7  2_cp37m                  conda-forge/osx-64                         4 KB
  + pytz                      2021.1  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + readline                     8.1  h05e3726_0               conda-forge/osx-64                       Cached
  + requests                  2.26.0  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + retrying                   1.3.3  py_2                     conda-forge/noarch                        11 KB
  + scipy                      1.3.1  py37h7e0e109_2           conda-forge/osx-64                        18 MB
  + setuptools                57.4.0  py37hf985489_0           conda-forge/osx-64                       963 KB
  + six                       1.16.0  pyh6c4a22f_0             conda-forge/noarch                       Cached
  + sqlite                    3.36.0  h23a322b_0               conda-forge/osx-64                       Cached
  + tk                        8.6.11  h5dbffcc_1               conda-forge/osx-64                       Cached
  + tqdm                      4.35.0  py_0                     conda-forge/noarch                        42 KB
  + traitlets                  5.1.0  pyhd8ed1ab_0             conda-forge/noarch                        82 KB
  + typing_extensions       3.10.0.0  pyha770c72_0             conda-forge/noarch                       Cached
  + urllib3                   1.26.6  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + wheel                     0.37.0  pyhd8ed1ab_1             conda-forge/noarch                       Cached
  + xz                         5.2.5  haf1e3a3_1               conda-forge/osx-64                       Cached
  + zipp                       3.5.0  pyhd8ed1ab_0             conda-forge/noarch                       Cached
  + zlib                      1.2.11  h7795811_1010            conda-forge/osx-64                       Cached

  Summary:

  Install: 71 packages

  Total download: 81 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/pycoqc_1630708946391/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    attrs:              21.2.0-pyhd8ed1ab_0           conda-forge
    brotlipy:           0.7.0-py37h271585c_1001       conda-forge
    bzip2:              1.0.8-h0d85af4_4              conda-forge
    c-ares:             1.17.2-h0d85af4_0             conda-forge
    ca-certificates:    2021.5.30-h033912b_0          conda-forge
    certifi:            2021.5.30-py37hf985489_0      conda-forge
    cffi:               1.14.6-py37hda351d9_0         conda-forge
    chardet:            4.0.0-py37hf985489_1          conda-forge
    charset-normalizer: 2.0.0-pyhd8ed1ab_0            conda-forge
    cryptography:       3.4.7-py37hce4a858_0          conda-forge
    curl:               7.78.0-hb861fe1_0             conda-forge
    decorator:          5.0.9-pyhd8ed1ab_0            conda-forge
    h5py:               2.9.0-nompi_py37h6248fd5_1104 conda-forge
    hdf5:               1.10.5-nompi_h34ad4e8_1111    conda-forge
    idna:               3.1-pyhd3deb0d_0              conda-forge
    importlib-metadata: 4.8.1-py37hf985489_0          conda-forge
    importlib_metadata: 4.8.1-hd8ed1ab_0              conda-forge
    ipython_genutils:   0.2.0-py_1                    conda-forge
    jinja2:             2.10.1-py_0                   conda-forge
    jsonschema:         3.2.0-py37hc8dfbb8_1          conda-forge
    jupyter_core:       4.7.1-py37hf985489_0          conda-forge
    krb5:               1.19.2-hcfbf3a7_0             conda-forge
    libblas:            3.9.0-8_openblas              conda-forge
    libcblas:           3.9.0-8_openblas              conda-forge
    libcurl:            7.78.0-hf45b732_0             conda-forge
    libcxx:             12.0.1-habf9029_0             conda-forge
    libdeflate:         1.3-h01d97ff_0                conda-forge
    libedit:            3.1.20191231-h0678c8f_2       conda-forge
    libev:              4.33-haf1e3a3_1               conda-forge
    libffi:             3.3-h046ec9c_2                conda-forge
    libgfortran:        4.0.0-7_5_0_h1a10cd1_23       conda-forge
    libgfortran4:       7.5.0-h1a10cd1_23             conda-forge
    liblapack:          3.9.0-8_openblas              conda-forge
    libnghttp2:         1.43.0-h07e645a_0             conda-forge
    libopenblas:        0.3.12-openmp_h63d9170_1      conda-forge
    libssh2:            1.10.0-h52ee1ee_0             conda-forge
    llvm-openmp:        12.0.1-hda6cdc1_1             conda-forge
    markupsafe:         2.0.1-py37h271585c_0          conda-forge
    nbformat:           5.1.3-pyhd8ed1ab_0            conda-forge
    ncurses:            6.2-h2e338ed_4                conda-forge
    numpy:              1.17.1-py37h6b0580a_0         conda-forge
    openssl:            1.1.1l-h0d85af4_0             conda-forge
    pandas:             0.25.1-py37h86efe34_0         conda-forge
    pip:                21.2.4-pyhd8ed1ab_0           conda-forge
    plotly:             4.1.0-py_0                    conda-forge
    pycoqc:             2.5.2-py_0                    local      
    pycparser:          2.20-pyh9f0ad1d_2             conda-forge
    pyopenssl:          20.0.1-pyhd8ed1ab_0           conda-forge
    pyrsistent:         0.17.3-py37h271585c_2         conda-forge
    pysam:              0.15.3-py37h4ace0ce_3         bioconda   
    pysocks:            1.7.1-py37hf985489_3          conda-forge
    python:             3.7.10-h7728216_100_cpython   conda-forge
    python-dateutil:    2.8.2-pyhd8ed1ab_0            conda-forge
    python_abi:         3.7-2_cp37m                   conda-forge
    pytz:               2021.1-pyhd8ed1ab_0           conda-forge
    readline:           8.1-h05e3726_0                conda-forge
    requests:           2.26.0-pyhd8ed1ab_0           conda-forge
    retrying:           1.3.3-py_2                    conda-forge
    scipy:              1.3.1-py37h7e0e109_2          conda-forge
    setuptools:         57.4.0-py37hf985489_0         conda-forge
    six:                1.16.0-pyh6c4a22f_0           conda-forge
    sqlite:             3.36.0-h23a322b_0             conda-forge
    tk:                 8.6.11-h5dbffcc_1             conda-forge
    tqdm:               4.35.0-py_0                   conda-forge
    traitlets:          5.1.0-pyhd8ed1ab_0            conda-forge
    typing_extensions:  3.10.0.0-pyha770c72_0         conda-forge
    urllib3:            1.26.6-pyhd8ed1ab_0           conda-forge
    wheel:              0.37.0-pyhd8ed1ab_1           conda-forge
    xz:                 5.2.5-haf1e3a3_1              conda-forge
    zipp:               3.5.0-pyhd8ed1ab_0            conda-forge
    zlib:               1.2.11-h7795811_1010          conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/pycoqc_1630708946391/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/Users/runner/conda/conda-bld/pycoqc_1630708946391/test_tmp
import: 'pycoQC.pycoQC'
import: 'pycoQC.Fast5_to_seq_summary'
import: 'pycoQC.Barcode_split'
import: 'pycoQC.Barcode_split'
import: 'pycoQC.Fast5_to_seq_summary'
import: 'pycoQC.pycoQC'
usage: pycoQC [-h] [--version]
              [--summary_file [SUMMARY_FILE [SUMMARY_FILE ...]]]
              [--barcode_file [BARCODE_FILE [BARCODE_FILE ...]]]
              [--bam_file [BAM_FILE [BAM_FILE ...]]]
              [--html_outfile HTML_OUTFILE] [--json_outfile JSON_OUTFILE]
              [--min_pass_qual MIN_PASS_QUAL] [--min_pass_len MIN_PASS_LEN]
              [--filter_calibration] [--filter_duplicated]
              [--min_barcode_percent MIN_BARCODE_PERCENT]
              [--report_title REPORT_TITLE] [--template_file TEMPLATE_FILE]
              [--config_file CONFIG_FILE] [--skip_coverage_plot]
              [--sample SAMPLE] [--default_config] [-v | -q]

pycoQC computes metrics and generates interactive QC plots from the sequencing summary
report generated by Oxford Nanopore technologies basecallers

* Minimal usage
    pycoQC -f sequencing_summary.txt -o pycoQC_output.html
* Including Guppy barcoding file + html output + json output
    pycoQC -f sequencing_summary.txt -b barcoding_sequencing.txt -o pycoQC_output.html -j pycoQC_output.json
* Including Bam file + html output
    pycoQC -f sequencing_summary.txt -a alignment.bam -o pycoQC_output.html

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -v, --verbose         Increase verbosity
  -q, --quiet           Reduce verbosity

Input/output options:
  --summary_file [SUMMARY_FILE [SUMMARY_FILE ...]], -f [SUMMARY_FILE [SUMMARY_FILE ...]]
                        Path to a sequencing_summary generated by Albacore
                        1.0.0 + (read_fast5_basecaller.py) / Guppy 2.1.3+
                        (guppy_basecaller). One can also pass multiple space
                        separated file paths or a UNIX style regex matching
                        multiple files (Required)
  --barcode_file [BARCODE_FILE [BARCODE_FILE ...]], -b [BARCODE_FILE [BARCODE_FILE ...]]
                        Path to the barcode_file generated by Guppy 2.1.3+
                        (guppy_barcoder) or Deepbinner 0.2.0+. This is not a
                        required file. One can also pass multiple space
                        separated file paths or a UNIX style regex matching
                        multiple files (optional)
  --bam_file [BAM_FILE [BAM_FILE ...]], -a [BAM_FILE [BAM_FILE ...]]
                        Path to a Bam file corresponding to reads in the
                        summary_file. Preferably aligned with Minimap2 One can
                        also pass multiple space separated file paths or a
                        UNIX style regex matching multiple files (optional)
  --html_outfile HTML_OUTFILE, -o HTML_OUTFILE
                        Path to an output html file report (required if
                        json_outfile not given)
  --json_outfile JSON_OUTFILE, -j JSON_OUTFILE
                        Path to an output json file report (required if
                        html_outfile not given)

Filtering options:
  --min_pass_qual MIN_PASS_QUAL
                        Minimum quality to consider a read as 'pass' (default:
                        7)
  --min_pass_len MIN_PASS_LEN
                        Minimum read length to consider a read as 'pass'
                        (default: 0)
  --filter_calibration  If given, reads flagged as calibration strand by the
                        basecaller are removed (default: False)
  --filter_duplicated   If given, duplicated read_ids are removed but the
                        first occurence is kept (Guppy sometimes outputs the
                        same read multiple times) (default: False)
  --min_barcode_percent MIN_BARCODE_PERCENT
                        Minimal percent of total reads to retain barcode
                        label. If below, the barcode value is set as
                        `unclassified` (default: 0.1)

HTML report options:
  --report_title REPORT_TITLE
                        Title to use in the html report (default: PycoQC
                        report)
  --template_file TEMPLATE_FILE
                        Jinja2 html template for the html report (default: )
  --config_file CONFIG_FILE
                        Path to a JSON configuration file for the html report.
                        If not provided, looks for it in ~/.pycoQC and
                        ~/.config/pycoQC/config. If it's still not found,
                        falls back to default parameters. The first level keys
                        are the names of the plots to be included. The second
                        level keys are the parameters to pass to each plotting
                        function (default: )")
  --skip_coverage_plot  Skip the coverage plot in HTML report. Useful when
                        using a reference file containing many sequences, i.e.
                        transcriptome (default: False)

Other options:
  --sample SAMPLE       If not None a n number of reads will be randomly
                        selected instead of the entire dataset for ploting
                        function (deterministic sampling) (default: 100000)
  --default_config, -d  Print default configuration file. Can be used to
                        generate a template JSON file (default: False)
usage: Fast5_to_seq_summary [-h] [--version] --fast5_dir FAST5_DIR
                            --seq_summary_fn SEQ_SUMMARY_FN
                            [--max_fast5 MAX_FAST5] [--threads THREADS]
                            [--basecall_id BASECALL_ID]
                            [--fields FIELDS [FIELDS ...]] [--include_path]
                            [--verbose_level VERBOSE_LEVEL]

Fast5_to_seq_summary generate a sequencing summary like file from a directory
containing Fast5 files

optional arguments:
  -h, --help            show this help message and exit
  --version, -v         show program's version number and exit
  --fast5_dir FAST5_DIR, -f FAST5_DIR
                        Directory containing fast5 files. Can contain multiple
                        subdirectories
  --seq_summary_fn SEQ_SUMMARY_FN, -s SEQ_SUMMARY_FN
                        path of the summary sequencing file where to write the
                        data extracted from the fast5 files
  --max_fast5 MAX_FAST5
                        Maximum number of file to try to parse. 0 to
                        deactivate (default: 0)
  --threads THREADS, -t THREADS
                        Total number of threads to use. 1 thread is used for
                        the reader and 1 for the writer. Minimum 3 (default:
                        4)
  --basecall_id BASECALL_ID
                        id of the basecalling group. By default leave to 0,
                        but if you perfome multiple basecalling on the same
                        fast5 files, this can be used to indicate the
                        corresponding group (1, 2 ...) (default: 0)
  --fields FIELDS [FIELDS ...]
                        list of field names corresponding to attributes to try
                        to fetch from the fast5 files (default: ['read_id',
                        'run_id', 'channel', 'start_time',
                        'sequence_length_template', 'mean_qscore_template',
                        'calibration_strand_genome_template',
                        'barcode_arrangement'])
  --include_path        If given, the absolute path to the corresponding file
                        is added in an extra column (default: False)
  --verbose_level VERBOSE_LEVEL
                        Level of verbosity, from 2 (Chatty) to 0 (Nothing)
                        (default: 0)
usage: Barcode_split [-h] [--version] --summary_file
                     [SUMMARY_FILE [SUMMARY_FILE ...]]
                     [--barcode_file [BARCODE_FILE [BARCODE_FILE ...]]]
                     [--output_dir OUTPUT_DIR] [--output_unclassified]
                     [--min_barcode_percent MIN_BARCODE_PERCENT] [-v | -q]

Barcode_split is a simple tool to split sequencing summary report in per
barcodes

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --summary_file [SUMMARY_FILE [SUMMARY_FILE ...]], -f [SUMMARY_FILE [SUMMARY_FILE ...]]
                        Path to a sequencing_summary generated by Albacore
                        1.0.0 + (read_fast5_basecaller.py) / Guppy 2.1.3+
                        (guppy_basecaller). One can also pass multiple space
                        separated file paths or a UNIX style regex matching
                        multiple files
  --barcode_file [BARCODE_FILE [BARCODE_FILE ...]], -b [BARCODE_FILE [BARCODE_FILE ...]]
                        Path to the barcode_file generated by Guppy 2.1.3+
                        (guppy_barcoder) or Deepbinner 0.2.0+. One can also
                        pass multiple space separated file paths or a UNIX
                        style regex matching multiple files
  --output_dir OUTPUT_DIR, -o OUTPUT_DIR
                        Folder where to output split barcode data (default:
                        current dir
  --output_unclassified, -u
                        If given, unclassified barcodes are also written in a
                        file. By default they are skiped
  --min_barcode_percent MIN_BARCODE_PERCENT, -p MIN_BARCODE_PERCENT
                        Minimal percent of total reads to retain barcode
                        label. If below, the barcode value is set as
                        `unclassified` (default: 0.1)
  -v, --verbose         Increase verbosity
  -q, --quiet           Reduce verbosity

Resource usage statistics from testing pycoqc:
   Process count: 4
   CPU time: Sys=0:00:00.8, User=0:00:01.7
   Memory: 108.1M
   Disk usage: 20B
   Time elapsed: 0:00:23.1


TEST END: pycoqc-2.5.2-py_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                 Version  Build          Channel                                   Size
──────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex             0.1  conda_forge    conda-forge/linux-64                    Cached
  + _openmp_mutex             4.5  1_gnu          conda-forge/linux-64                    Cached
  + bzip2                   1.0.8  h7f98852_4     conda-forge/linux-64                    Cached
  + c-ares                 1.17.2  h7f98852_0     conda-forge/linux-64                    Cached
  + ca-certificates     2021.5.30  ha878542_0     conda-forge/linux-64                    Cached
  + curl                   7.78.0  hea6ffbf_0     conda-forge/linux-64                    148 KB
  + htslib                   1.12  h9093b5e_1     bioconda/linux-64                         2 MB
  + krb5                   1.19.2  hcc1bbae_0     conda-forge/linux-64                    Cached
  + libbigwig               0.4.6  h1b8c3c0_1     bioconda/linux-64                       331 KB
  + libcurl                7.78.0  h2574ce0_0     conda-forge/linux-64                    Cached
  + libdeflate                1.7  h7f98852_5     conda-forge/linux-64                     67 KB
  + libedit          3.1.20191231  he28a2e2_2     conda-forge/linux-64                    Cached
  + libev                    4.33  h516909a_1     conda-forge/linux-64                    Cached
  + libgcc-ng              11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libgomp                11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libnghttp2             1.43.0  h812cca2_0     conda-forge/linux-64                    Cached
  + libssh2                1.10.0  ha56f1ee_0     conda-forge/linux-64                    Cached
  + libstdcxx-ng           11.1.0  h56837e0_8     conda-forge/linux-64                    Cached
  + megadepth               1.1.1  ha140323_0     /home/vsts/conda/conda-bld/linux-64     106 KB
  + ncurses                   6.2  h58526e2_4     conda-forge/linux-64                    Cached
  + openssl                1.1.1l  h7f98852_0     conda-forge/linux-64                    Cached
  + tk                     8.6.11  h27826a3_1     conda-forge/linux-64                    Cached
  + xz                      5.2.5  h516909a_1     conda-forge/linux-64                    Cached
  + zlib                   1.2.11  h516909a_1010  conda-forge/linux-64                    Cached

  Summary:

  Install: 24 packages

  Total download: 3 MB

──────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: megadepth-1.1.1-ha140323_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/megadepth_1631021608925/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    _libgcc_mutex:   0.1-conda_forge         conda-forge
    _openmp_mutex:   4.5-1_gnu               conda-forge
    bzip2:           1.0.8-h7f98852_4        conda-forge
    c-ares:          1.17.2-h7f98852_0       conda-forge
    ca-certificates: 2021.5.30-ha878542_0    conda-forge
    curl:            7.78.0-hea6ffbf_0       conda-forge
    htslib:          1.12-h9093b5e_1         bioconda   
    krb5:            1.19.2-hcc1bbae_0       conda-forge
    libbigwig:       0.4.6-h1b8c3c0_1        bioconda   
    libcurl:         7.78.0-h2574ce0_0       conda-forge
    libdeflate:      1.7-h7f98852_5          conda-forge
    libedit:         3.1.20191231-he28a2e2_2 conda-forge
    libev:           4.33-h516909a_1         conda-forge
    libgcc-ng:       11.1.0-hc902ee8_8       conda-forge
    libgomp:         11.1.0-hc902ee8_8       conda-forge
    libnghttp2:      1.43.0-h812cca2_0       conda-forge
    libssh2:         1.10.0-ha56f1ee_0       conda-forge
    libstdcxx-ng:    11.1.0-h56837e0_8       conda-forge
    megadepth:       1.1.1-ha140323_0        local      
    ncurses:         6.2-h58526e2_4          conda-forge
    openssl:         1.1.1l-h7f98852_0       conda-forge
    tk:              8.6.11-h27826a3_1       conda-forge
    xz:              5.2.5-h516909a_1        conda-forge
    zlib:            1.2.11-h516909a_1010    conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/megadepth_1631021608925/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/home/vsts/conda/conda-bld/megadepth_1631021608925/test_tmp
megadepth 1.1.1

BAM and BigWig utility.

Usage:
  megadepth <bam|bw|-> [options]

Options:
  -h --help                Show this screen.
  --version                Show version.
  --threads                # of threads to do: BAM decompression OR compute sums over multiple BigWigs in parallel
                            if the 2nd is intended then a TXT file listing the paths to the BigWigs to process in parallel
                            should be passed in as the main input file instead of a single BigWig file (EXPERIMENTAL).
  --prefix                 String to use to prefix all output files.
  --no-auc-stdout          Force all AUC(s) to be written to <prefix>.auc.tsv rather than STDOUT
  --no-annotation-stdout   Force summarized annotation regions to be written to <prefix>.annotation.tsv rather than STDOUT
  --no-coverage-stdout     Force covered regions to be written to <prefix>.coverage.tsv rather than STDOUT
  --keep-order             Output annotation coverage in the order chromosomes appear in the BAM/BigWig file
                           The default is to output annotation coverage in the order chromosomes appear in the annotation BED file.
                           This is only applicable if --annotation is used for either BAM or BigWig input.

BigWig Input:
Extract regions and their counts from a BigWig outputting BED format if a BigWig file is detected as input (exclusive of the other BAM modes):
                                          Extracts all reads from the passed in BigWig and output as BED format.
                                           This will also report the AUC over the annotated regions to STDOUT.
                                           If only the name of the BigWig file is passed in with no other args, it will *only* report total AUC to STDOUT.
  --annotation <bed>                      Only output the regions in this BED applying the argument to --op to them.
  --op <sum[default], mean, min, max>     Statistic to run on the intervals provided by --annotation
  --sums-only                             Discard coordinates from output of summarized regions
  --bwbuffer <1GB[default]>               Size of buffer for reading BigWig files, critical to use a large value (~1GB) for remote BigWigs.
                                           Default setting should be fine for most uses, but raise if very slow on a remote BigWig.


BAM Input:
Extract basic junction information from the BAM, including co-occurrence
If only the name of the BAM file is passed in with no other args, it will *only* report total AUC to STDOUT.
  --fasta              Path to the reference FASTA file if a CRAM file is passed as the input file (ignored otherwise)
                       If not passed, references will be downloaded using the CRAM header.
  --junctions          Extract co-occurring jx coordinates, strand, and anchor length, per read
                       writes to a TSV file <prefix>.jxs.tsv
  --all-junctions      Extract all jx coordinates, strand, and anchor length, per read for any jx
                       writes to a TSV file <prefix>.all_jxs.tsv
  --longreads          Modifies certain buffer sizes to accommodate longer reads such as PB/Oxford.
  --filter-in          Integer bitmask, any bits of which alignments need to have to be kept (similar to samtools view -f).
  --filter-out         Integer bitmask, any bits of which alignments need to have to be skipped (similar to samtools view -F).
  --add-chr-prefix     Adds "chr" prefix to relevant chromosomes for BAMs w/o it, pass "human" or "mouse".
                       Only works for human/mouse references (default: off).

Non-reference summaries:
  --alts                       Print differing from ref per-base coverages
                               Writes to a CSV file <prefix>.alts.tsv
  --include-softclip           Print a record to the alts CSV for soft-clipped bases
                               Writes total counts to a separate TSV file <prefix>.softclip.tsv
  --only-polya                 If --include-softclip, only print softclips which are mostly A's or T's
  --include-n                  Print mismatch records when mismatched read base is N
  --print-qual                 Print quality values for mismatched bases
  --delta                      Print POS field as +/- delta from previous
  --require-mdz                Quit with error unless MD:Z field exists everywhere it's
                               expected
  --head                       Print sequence names and lengths in SAM/BAM header

Coverage and quantification:
  --coverage           Print per-base coverage (slow but totally worth it)
  --auc                Print per-base area-under-coverage, will generate it for the genome
                       and for the annotation if --annotation is also passed in
                       Defaults to STDOUT, unless other params are passed in as well, then
                       if writes to a TSV file <prefix>.auc.tsv
  --bigwig             Output coverage as BigWig file(s).  Writes to <prefix>.bw
                       (also <prefix>.unique.bw when --min-unique-qual is specified).
                       Requires libBigWig.
  --annotation <BED|window_size>   Path to BED file containing list of regions to sum coverage over
                       (tab-delimited: chrm,start,end). Or this can specify a contiguous region size in bp.
  --op <sum[default], mean>     Statistic to run on the intervals provided by --annotation
  --no-index           If using --annotation, skip the use of the BAM index (BAI) for pulling out regions.
                       Setting this can be faster if doing windows across the whole genome.
                       This will be turned on automatically if a window size is passed to --annotation.
  --min-unique-qual <int>
                       Output second bigWig consisting built only from alignments
                       with at least this mapping quality.  --bigwig must be specified.
                       Also produces second set of annotation sums based on this coverage
                       if --annotation is enabled
  --double-count       Allow overlapping ends of PE read to count twice toward
                       coverage
  --num-bases          Report total sum of bases in alignments processed (that pass filters)
  --gzip               Turns on gzipping of coverage output (no effect if --bigwig is passsed),
                       this will also enable --no-coverage-stdout.

Other outputs:
  --read-ends          Print counts of read starts/ends, if --min-unique-qual is set
                       then only the alignments that pass that filter will be counted here
                       Writes to 2 TSV files: <prefix>.starts.tsv, <prefix>.ends.tsv
  --frag-dist          Print fragment length distribution across the genome
                       Writes to a TSV file <prefix>.frags.tsv
  --echo-sam           Print a SAM record for each aligned read
  --ends               Report end coordinate for each read (useful for debugging)
  --test-polya         Lower Poly-A filter minimums for testing (only useful for debugging/testing)



Resource usage statistics from testing megadepth:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.5M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: megadepth-1.1.1-ha140323_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


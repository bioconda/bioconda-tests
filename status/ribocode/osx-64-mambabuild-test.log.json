  Package                 Version  Build                   Channel                                    Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + biopython                1.79  py39h89e85a6_0          conda-forge/osx-64                       Cached
  + bzip2                   1.0.8  h0d85af4_4              conda-forge/osx-64                       Cached
  + c-ares                 1.17.2  h0d85af4_0              conda-forge/osx-64                       Cached
  + ca-certificates     2021.5.30  h033912b_0              conda-forge/osx-64                       Cached
  + cached-property         1.5.2  hd8ed1ab_1              conda-forge/noarch                       Cached
  + cached_property         1.5.2  pyha770c72_1            conda-forge/noarch                       Cached
  + certifi             2021.5.30  py39h6e9494a_0          conda-forge/osx-64                       Cached
  + cycler                 0.10.0  py_2                    conda-forge/noarch                       Cached
  + freetype               2.10.4  h4cff582_1              conda-forge/osx-64                       Cached
  + future                 0.18.2  py39h6e9494a_3          conda-forge/osx-64                       Cached
  + h5py                    3.4.0  nompi_py39hbc6cb89_100  conda-forge/osx-64                       Cached
  + hdf5                   1.12.1  nompi_h2f0ef1a_100      conda-forge/osx-64                       Cached
  + htseq                  0.13.5  py39hdd6a155_1          bioconda/osx-64                          277 KB
  + jbig                      2.1  h0d85af4_2003           conda-forge/osx-64                       Cached
  + jpeg                       9d  hbcb3906_0              conda-forge/osx-64                       Cached
  + kiwisolver              1.3.2  py39hf018cea_0          conda-forge/osx-64                       Cached
  + krb5                   1.19.2  hcfbf3a7_0              conda-forge/osx-64                       Cached
  + lcms2                    2.12  h577c468_0              conda-forge/osx-64                       Cached
  + lerc                    2.2.1  h046ec9c_0              conda-forge/osx-64                       Cached
  + libblas                 3.9.0  11_osx64_openblas       conda-forge/osx-64                       Cached
  + libcblas                3.9.0  11_osx64_openblas       conda-forge/osx-64                       Cached
  + libcurl                7.78.0  hf45b732_0              conda-forge/osx-64                       Cached
  + libcxx                 12.0.1  habf9029_0              conda-forge/osx-64                       Cached
  + libdeflate                1.7  h35c211d_5              conda-forge/osx-64                       Cached
  + libedit          3.1.20191231  h0678c8f_2              conda-forge/osx-64                       Cached
  + libev                    4.33  haf1e3a3_1              conda-forge/osx-64                       Cached
  + libffi                    3.3  h046ec9c_2              conda-forge/osx-64                       Cached
  + libgfortran             5.0.0  9_3_0_h6c81a4c_23       conda-forge/osx-64                       Cached
  + libgfortran5            9.3.0  h6c81a4c_23             conda-forge/osx-64                       Cached
  + liblapack               3.9.0  11_osx64_openblas       conda-forge/osx-64                       Cached
  + libnghttp2             1.43.0  h07e645a_0              conda-forge/osx-64                       Cached
  + libopenblas            0.3.17  openmp_h3351f45_1       conda-forge/osx-64                       Cached
  + libpng                 1.6.37  h7cec526_2              conda-forge/osx-64                       Cached
  + libssh2                1.10.0  h52ee1ee_0              conda-forge/osx-64                       Cached
  + libtiff                 4.3.0  h1167814_1              conda-forge/osx-64                       Cached
  + libwebp-base            1.2.1  h0d85af4_0              conda-forge/osx-64                       Cached
  + llvm-openmp            12.0.1  hda6cdc1_1              conda-forge/osx-64                       Cached
  + lz4-c                   1.9.3  he49afe7_1              conda-forge/osx-64                       Cached
  + matplotlib              3.4.3  py39h6e9494a_0          conda-forge/osx-64                         7 KB
  + matplotlib-base         3.4.3  py39hb07454d_0          conda-forge/osx-64                       Cached
  + ncurses                   6.2  h2e338ed_4              conda-forge/osx-64                       Cached
  + numpy                  1.21.2  py39h7eed0ac_0          conda-forge/osx-64                       Cached
  + olefile                  0.46  pyh9f0ad1d_1            conda-forge/noarch                       Cached
  + openjpeg                2.4.0  h6e7aa92_1              conda-forge/osx-64                       Cached
  + openssl                1.1.1l  h0d85af4_0              conda-forge/osx-64                       Cached
  + pillow                  8.3.2  py39he9bb72f_0          conda-forge/osx-64                       Cached
  + pip                    21.2.4  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + pyfasta                 0.5.2  py_1                    bioconda/noarch                           17 KB
  + pyparsing               2.4.7  pyh9f0ad1d_0            conda-forge/noarch                       Cached
  + pysam                0.16.0.1  py39h56703ae_3          bioconda/osx-64                            2 MB
  + python                  3.9.7  hd187cdc_0_cpython      conda-forge/osx-64                       Cached
  + python-dateutil         2.8.2  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + python_abi                3.9  2_cp39                  conda-forge/osx-64                       Cached
  + readline                  8.1  h05e3726_0              conda-forge/osx-64                       Cached
  + ribocode               1.2.11  pyh145b6a8_1            /Users/runner/conda/conda-bld/osx-64      29 KB
  + scipy                   1.7.1  py39h056f1c0_0          conda-forge/osx-64                       Cached
  + setuptools             57.4.0  py39h6e9494a_0          conda-forge/osx-64                       Cached
  + six                    1.16.0  pyh6c4a22f_0            conda-forge/noarch                       Cached
  + sqlite                 3.36.0  h23a322b_0              conda-forge/osx-64                       Cached
  + tk                     8.6.11  h5dbffcc_1              conda-forge/osx-64                       Cached
  + tornado                   6.1  py39h89e85a6_1          conda-forge/osx-64                       Cached
  + tzdata                  2021a  he74cb21_1              conda-forge/noarch                       Cached
  + wheel                  0.37.0  pyhd8ed1ab_1            conda-forge/noarch                       Cached
  + xz                      5.2.5  haf1e3a3_1              conda-forge/osx-64                       Cached
  + zlib                   1.2.11  h7795811_1010           conda-forge/osx-64                       Cached
  + zstd                    1.5.0  h582d3a0_0              conda-forge/osx-64                       Cached

  Summary:

  Install: 66 packages

  Total download: 2 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: ribocode-1.2.11-pyh145b6a8_1.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/ribocode_1630722915989/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_


The following NEW packages will be INSTALLED:

    biopython:       1.79-py39h89e85a6_0          conda-forge
    bzip2:           1.0.8-h0d85af4_4             conda-forge
    c-ares:          1.17.2-h0d85af4_0            conda-forge
    ca-certificates: 2021.5.30-h033912b_0         conda-forge
    cached-property: 1.5.2-hd8ed1ab_1             conda-forge
    cached_property: 1.5.2-pyha770c72_1           conda-forge
    certifi:         2021.5.30-py39h6e9494a_0     conda-forge
    cycler:          0.10.0-py_2                  conda-forge
    freetype:        2.10.4-h4cff582_1            conda-forge
    future:          0.18.2-py39h6e9494a_3        conda-forge
    h5py:            3.4.0-nompi_py39hbc6cb89_100 conda-forge
    hdf5:            1.12.1-nompi_h2f0ef1a_100    conda-forge
    htseq:           0.13.5-py39hdd6a155_1        bioconda   
    jbig:            2.1-h0d85af4_2003            conda-forge
    jpeg:            9d-hbcb3906_0                conda-forge
    kiwisolver:      1.3.2-py39hf018cea_0         conda-forge
    krb5:            1.19.2-hcfbf3a7_0            conda-forge
    lcms2:           2.12-h577c468_0              conda-forge
    lerc:            2.2.1-h046ec9c_0             conda-forge
    libblas:         3.9.0-11_osx64_openblas      conda-forge
    libcblas:        3.9.0-11_osx64_openblas      conda-forge
    libcurl:         7.78.0-hf45b732_0            conda-forge
    libcxx:          12.0.1-habf9029_0            conda-forge
    libdeflate:      1.7-h35c211d_5               conda-forge
    libedit:         3.1.20191231-h0678c8f_2      conda-forge
    libev:           4.33-haf1e3a3_1              conda-forge
    libffi:          3.3-h046ec9c_2               conda-forge
    libgfortran:     5.0.0-9_3_0_h6c81a4c_23      conda-forge
    libgfortran5:    9.3.0-h6c81a4c_23            conda-forge
    liblapack:       3.9.0-11_osx64_openblas      conda-forge
    libnghttp2:      1.43.0-h07e645a_0            conda-forge
    libopenblas:     0.3.17-openmp_h3351f45_1     conda-forge
    libpng:          1.6.37-h7cec526_2            conda-forge
    libssh2:         1.10.0-h52ee1ee_0            conda-forge
    libtiff:         4.3.0-h1167814_1             conda-forge
    libwebp-base:    1.2.1-h0d85af4_0             conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1            conda-forge
    lz4-c:           1.9.3-he49afe7_1             conda-forge
    matplotlib:      3.4.3-py39h6e9494a_0         conda-forge
    matplotlib-base: 3.4.3-py39hb07454d_0         conda-forge
    ncurses:         6.2-h2e338ed_4               conda-forge
    numpy:           1.21.2-py39h7eed0ac_0        conda-forge
    olefile:         0.46-pyh9f0ad1d_1            conda-forge
    openjpeg:        2.4.0-h6e7aa92_1             conda-forge
    openssl:         1.1.1l-h0d85af4_0            conda-forge
    pillow:          8.3.2-py39he9bb72f_0         conda-forge
    pip:             21.2.4-pyhd8ed1ab_0          conda-forge
    pyfasta:         0.5.2-py_1                   bioconda   
    pyparsing:       2.4.7-pyh9f0ad1d_0           conda-forge
    pysam:           0.16.0.1-py39h56703ae_3      bioconda   
    python:          3.9.7-hd187cdc_0_cpython     conda-forge
    python-dateutil: 2.8.2-pyhd8ed1ab_0           conda-forge
    python_abi:      3.9-2_cp39                   conda-forge
    readline:        8.1-h05e3726_0               conda-forge
    ribocode:        1.2.11-pyh145b6a8_1          local      
    scipy:           1.7.1-py39h056f1c0_0         conda-forge
    setuptools:      57.4.0-py39h6e9494a_0        conda-forge
    six:             1.16.0-pyh6c4a22f_0          conda-forge
    sqlite:          3.36.0-h23a322b_0            conda-forge
    tk:              8.6.11-h5dbffcc_1            conda-forge
    tornado:         6.1-py39h89e85a6_1           conda-forge
    tzdata:          2021a-he74cb21_1             conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1          conda-forge
    xz:              5.2.5-haf1e3a3_1             conda-forge
    zlib:            1.2.11-h7795811_1010         conda-forge
    zstd:            1.5.0-h582d3a0_0             conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/ribocode_1630722915989/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_
export SRC_DIR=/Users/runner/conda/conda-bld/ribocode_1630722915989/test_tmp
import: 'RiboCode'
import: 'RiboCode'
usage: RiboCode [-h] -a ANNOT_DIR -c CONFIG_FILE [-l {yes,no}]
                [-p PVAL_CUTOFF] [-s START_CODON]
                [-A ALTERNATIVE_START_CODONS] [-S STOP_CODON]
                [-t TRANSL_TABLE] [-m MIN_AA_LENGTH] [-g] [-b]
                [-o OUTPUT_NAME] [-V]

The main function designed for detecting ORF using ribosome-profiling data.

optional arguments:
  -h, --help            show this help message and exit
  -a ANNOT_DIR, --annot_dir ANNOT_DIR
                        transcripts annotation directory, generated by
                        prepare_transcripts.
  -c CONFIG_FILE, --config_file CONFIG_FILE
                        list bam file and P-sites information in this file,
                        please refer to the example file in data folder.
  -l {yes,no}, --longest-orf {yes,no}
                        Default: yes, the region from most distal AUG to stop
                        was defined as an ORF. If set to no , the position of
                        start codon will be automatically determined by
                        program.
  -p PVAL_CUTOFF, --pval-cutoff PVAL_CUTOFF
                        P-value cutoff for ORF filtering, default 0.05
  -s START_CODON, --start_codon START_CODON
                        The canonical start codon. default: ATG
  -A ALTERNATIVE_START_CODONS, --alt_start_codons ALTERNATIVE_START_CODONS
                        The alternative start codon, such as CTG,GTG, default:
                        None. Multiple codons should be separated by comma.
  -S STOP_CODON, --stop_codon STOP_CODON
                        Stop codon, default: TAA,TAG,TGA
  -t TRANSL_TABLE, --transl_table TRANSL_TABLE
                        ORF translation table(Default: 1). Assign the correct
                        genetic code based on your organism, [please refer: ht
                        tps://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi
                        ]
  -m MIN_AA_LENGTH, --min-AA-length MIN_AA_LENGTH
                        The minimal length of predicted peptides,default 20
  -g, --output-gtf      output the gtf file of predicted ORFs
  -b, --output-bed      output the bed file of predicted ORFs
  -o OUTPUT_NAME, --output-name OUTPUT_NAME
                        output file name, default: final_result
  -V, --version         show program's version number and exit
usage: RiboCode_onestep [-h] -g GTFFILE -f GENOMEFASTA
                        (-r RPF_MAPPING_FILE | -i RPF_MAPPING_FILE)
                        [-stranded {yes,reverse,no}] [-m MINLENGTH]
                        [-M MAXLENGTH] [-f0_percent FRAME0_PERCENT]
                        [-l {yes,no}] [-p PVAL_CUTOFF] [-s START_CODON]
                        [-A ALTERNATIVE_START_CODONS] [-S STOP_CODON]
                        [-t TRANSL_TABLE] [-mA MIN_AA_LENGTH] [-o OUTPUT_NAME]
                        [-outgtf] [-outbed] [-V]

The function contains the steps to prepare a reference genome, to determinate
the P-site locations and to detect ORFs. It automatically creates some of the
output files.

optional arguments:
  -h, --help            show this help message and exit
  -g GTFFILE, --gtf GTFFILE
                        Default, suitable for GENCODE and ENSEMBL GTF file,
                        please refer: https://en.wikipedia.org/wiki/GENCODE
  -f GENOMEFASTA, --fasta GENOMEFASTA
                        The genome sequences file in fasta format.
  -r RPF_MAPPING_FILE, --rpf_mapping_file RPF_MAPPING_FILE
                        ribo-seq BAM/SAM file aligned to the transcriptome.
  -i RPF_MAPPING_FILE, --input_file RPF_MAPPING_FILE
                        the file list the ribo-seq BAM/SAM files aligned to
                        the transcriptome.
  -stranded {yes,reverse,no}, --stranded {yes,reverse,no}
                        whether the data is strand-specific, reverse means
                        reversed strand interpretation.(default: yes)
  -m MINLENGTH, --minimum-length MINLENGTH
                        minimum read length for metaplots analysis, default 24
  -M MAXLENGTH, --maximum-length MAXLENGTH
                        maximum read length for metaplots analysis, default 36
  -f0_percent FRAME0_PERCENT, --frame0_percent FRAME0_PERCENT
                        proportion threshold of reads in frame0. For
                        automatically predicting P-site location, default 0.65
  -l {yes,no}, --longest-orf {yes,no}
                        Default: yes, the region from most distal AUG to stop
                        was defined as an ORF. If set to no , the position of
                        start codon will be automatically determined by
                        program.
  -p PVAL_CUTOFF, --pval-cutoff PVAL_CUTOFF
                        P-value cutoff for ORF filtering, default 0.05
  -s START_CODON, --start_codon START_CODON
                        The canonical start codon. default: ATG
  -A ALTERNATIVE_START_CODONS, --alt_start_codons ALTERNATIVE_START_CODONS
                        The alternative start codon, such as CTG,GTG, default:
                        None. Multiple codons should be separated by comma.
  -S STOP_CODON, --stop_codon STOP_CODON
                        Stop codon, default: TAA,TAG,TGA
  -t TRANSL_TABLE, --transl_table TRANSL_TABLE
                        ORF translation table(Default: 1). Assign the correct
                        genetic code based on your organism, [please refer: ht
                        tps://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi
                        ]
  -mA MIN_AA_LENGTH, --min-AA-length MIN_AA_LENGTH
                        The minimal length of predicted peptides,default 20
  -o OUTPUT_NAME, --output-name OUTPUT_NAME
                        output file name, default: final_result
  -outgtf, --output-gtf
                        output the gtf file of predicted ORFs
  -outbed, --output-bed
                        output the bed file of predicted ORFs
  -V, --version         show program's version number and exit
usage: prepare_transcripts [-h] -g GTFFILE -f GENOMEFASTA -o OUT_DIR [-V]

This script is designed for preparing transcripts annotation files.

optional arguments:
  -h, --help            show this help message and exit
  -g GTFFILE, --gtf GTFFILE
                        Default, suitable for GENCODE and ENSEMBL GTF file,
                        please refer: https://en.wikipedia.org/wiki/GENCODE,
                        or using GTFupdate command to update your GTF file.
  -f GENOMEFASTA, --fasta GENOMEFASTA
                        The genome sequences file in fasta format.
  -o OUT_DIR, --out_dir OUT_DIR
                        annotation directory name.
  -V, --version         show program's version number and exit
usage: metaplots [-h] -a ANNOT_DIR (-r RPF_MAPPING_FILE | -i RPF_MAPPING_FILE)
                 [-s {yes,reverse,no}] [-m MINLENGTH] [-M MAXLENGTH]
                 [-pv1 PVALUE1_CUTOFF] [-pv2 PVALUE2_CUTOFF]
                 [-f0_percent FRAME0_PERCENT] [-o OUTNAME] [-V]

This script create aggregate plots of distances from the 5'end of reads to
start or stop codons, which help determine the length range of the PRF reads
that are most likely originated from the translating ribosomes and identify
the P-site locations for each reads lengths.

optional arguments:
  -h, --help            show this help message and exit
  -a ANNOT_DIR, --annot_dir ANNOT_DIR
                        transcripts annotation directory, generated by
                        prepare_transcripts.
  -r RPF_MAPPING_FILE, --rpf_mapping_file RPF_MAPPING_FILE
                        ribo-seq BAM/SAM file aligned to the transcriptome.
  -i RPF_MAPPING_FILE, --input_file RPF_MAPPING_FILE
                        the file list the ribo-seq BAM/SAM files aligned to
                        the transcriptome.
  -s {yes,reverse,no}, --stranded {yes,reverse,no}
                        whether the data is strand-specific, reverse means
                        reversed strand interpretation.(default: yes)
  -m MINLENGTH, --minimum-length MINLENGTH
                        minimum length of read to output, default 24
  -M MAXLENGTH, --maximum-length MAXLENGTH
                        maximum length of read to output, default 36
  -pv1 PVALUE1_CUTOFF, --pvalue1_cutoff PVALUE1_CUTOFF
                        pvalue cutoff of frame0 > frame2 for automatically
                        predicting P-site location, default 0.001
  -pv2 PVALUE2_CUTOFF, --pvalue2_cutoff PVALUE2_CUTOFF
                        pvalue cutoff of frame0 > frame2 for automatically
                        predicting P-site location, default 0.001
  -f0_percent FRAME0_PERCENT, --frame0_percent FRAME0_PERCENT
                        proportion threshold of the number of reads in frame0,
                        defined by f0/(f0+f1+f2), default 0.65
  -o OUTNAME, --outname OUTNAME
                        name of output pdf file(default: metaplots)
  -V, --version         show program's version number and exit
usage: plot_orf_density [-h] -a ANNOT_DIR -c CONFIG_FILE -t TRANSCRIPT_ID -s
                        ORF_TSTART -e ORF_TSTOP [-o OUTNAME] [-V]

This script is designed for plot the P-site profile of specified ORF.

optional arguments:
  -h, --help            show this help message and exit
  -a ANNOT_DIR, --annot_dir ANNOT_DIR
                        transcripts annotation directory, generated by
                        prepare_transcripts.
  -c CONFIG_FILE, --config_file CONFIG_FILE
                        defile bam file information in this file, please refer
                        to the example file in data folder.
  -t TRANSCRIPT_ID, --transcript_id TRANSCRIPT_ID
                        the transcript id
  -s ORF_TSTART, --orf_tstart ORF_TSTART
                        transcript-level coordinates of start of ORF
                        (orf_tstart)
  -e ORF_TSTOP, --orf_tstop ORF_TSTOP
                        transcript-level coordinates of end of ORF (orf_tstop)
  -o OUTNAME, --outname OUTNAME
                        output file name,default is
                        transcriptid_tstart_tstop.pdf
  -V, --version         show program's version number and exit
usage: ORFcount [-h] [-s {yes,reverse,no}] [-a MIN_QUALITY]
                [-c {union,intersection-strict}] [-g GTF_FILE] -r
                RPF_MAPPING_FILE [-f FIRST_EXCLUDE_CODONS]
                [-l LAST_EXCLUDE_CODONS] [-e EXCLUDE_MIN_ORF] [-m MIN_READ]
                [-M MAX_READ] [-o OUTPUT_FILE] [-V]

This script is designed for calculating the number of reads mapping to ORF
with the alignment files in SAM/BAM format (aligned to genome) and a feature
file in GTF format

optional arguments:
  -h, --help            show this help message and exit
  -s {yes,reverse,no}, --stranded {yes,reverse,no}
                        whether the data is strand-specific, reverse means
                        reversed strand interpretation. (default: yes)
  -a MIN_QUALITY, --minaqual MIN_QUALITY
                        skip all reads with alignment quality lower than the
                        given minimum value (default:10)
  -c {union,intersection-strict}, --count_mode {union,intersection-strict}
                        mode to handle reads overlapping more than one ORF
                        (choices: union,intersection-strict;default:
                        intersection-strict)
  -g GTF_FILE, --gtf GTF_FILE
                        ORF gtf file generated by RiboCode,
                        default:final_result
  -r RPF_MAPPING_FILE, --rpf_mapping_file RPF_MAPPING_FILE
                        ribo-seq BAM/SAM file aligned to the genome, multiple
                        files should be separated with ","
  -f FIRST_EXCLUDE_CODONS, --first_exclude_codons FIRST_EXCLUDE_CODONS
                        excluding the reads aligned to the first few codons of
                        the ORF, default:15
  -l LAST_EXCLUDE_CODONS, --last_exclude_codons LAST_EXCLUDE_CODONS
                        excluding the reads aligned to the last few codons of
                        the ORF, default:5
  -e EXCLUDE_MIN_ORF, --exclude_min_ORF EXCLUDE_MIN_ORF
                        the minimal length(nt) of ORF for excluding the reads
                        aligned to first and last few codons, default:100
  -m MIN_READ, --min_read MIN_READ
                        minimal read length for the counting of RPF,default:26
  -M MAX_READ, --max_read MAX_READ
                        maximal read length for the counting of RPF,default:34
  -o OUTPUT_FILE, --output OUTPUT_FILE
                        write out all ORF counts into a file, default is to
                        write to standard output
  -V, --version         show program's version number and exit
usage: GTFupdate [-h] gtfFile

This script is designed for preparing the appropriate GTF file from custom GTF
file (or those not from ENSEMBL/GENCODE database)

positional arguments:
  gtfFile

optional arguments:
  -h, --help  show this help message and exit

Resource usage statistics from testing ribocode:
   Process count: 4
   CPU time: Sys=0:00:00.4, User=0:00:01.7
   Memory: 73.4M
   Disk usage: 20B
   Time elapsed: 0:00:22.8


TEST END: ribocode-1.2.11-pyh145b6a8_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                            Version  Build                Channel                                    Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + blast                             2.12.0  pl5262h78c34c6_0     bioconda/osx-64                           21 MB
  + bzip2                              1.0.8  h0d85af4_4           conda-forge/osx-64                       Cached
  + c-ares                            1.17.2  h0d85af4_0           conda-forge/osx-64                       Cached
  + ca-certificates                2021.5.30  h033912b_0           conda-forge/osx-64                       Cached
  + curl                              7.78.0  hb861fe1_0           conda-forge/osx-64                       137 KB
  + entrez-direct                       13.9  pl5262h193322a_2     bioconda/osx-64                            5 MB
  + expat                              2.4.1  he49afe7_0           conda-forge/osx-64                       Cached
  + krb5                              1.19.2  hcfbf3a7_0           conda-forge/osx-64                       Cached
  + libcurl                           7.78.0  hf45b732_0           conda-forge/osx-64                       Cached
  + libcxx                            12.0.1  habf9029_0           conda-forge/osx-64                       Cached
  + libedit                     3.1.20191231  h0678c8f_2           conda-forge/osx-64                       Cached
  + libev                               4.33  haf1e3a3_1           conda-forge/osx-64                       Cached
  + libnghttp2                        1.43.0  h07e645a_0           conda-forge/osx-64                       Cached
  + libssh2                           1.10.0  h52ee1ee_0           conda-forge/osx-64                       Cached
  + llvm-openmp                       12.0.1  hda6cdc1_1           conda-forge/osx-64                       Cached
  + mcl                               14.137  pl5262hb4d813b_6     /Users/runner/conda/conda-bld/osx-64       2 MB
  + ncurses                              6.2  h2e338ed_4           conda-forge/osx-64                       Cached
  + openssl                           1.1.1k  h0d85af4_1           conda-forge/osx-64                       Cached
  + pcre                                8.45  he49afe7_0           conda-forge/osx-64                       Cached
  + perl                              5.26.2  hbcb3906_1008        conda-forge/osx-64                       Cached
  + perl-app-cpanminus                1.7044  pl526_1              bioconda/osx-64                          Cached
  + perl-archive-tar                    2.32  pl526_0              bioconda/osx-64                           31 KB
  + perl-base                           2.23  pl526_1              bioconda/osx-64                          Cached
  + perl-business-isbn                 3.004  pl526_0              bioconda/osx-64                          Cached
  + perl-business-isbn-data     20140910.003  pl526_0              bioconda/osx-64                          Cached
  + perl-carp                           1.38  pl526_3              bioconda/osx-64                          Cached
  + perl-common-sense                   3.74  pl526_2              bioconda/osx-64                          Cached
  + perl-compress-raw-bzip2            2.087  pl526h6de7cb9_0      bioconda/osx-64                           47 KB
  + perl-compress-raw-zlib             2.087  pl526h770b8ee_0      bioconda/osx-64                          Cached
  + perl-constant                       1.33  pl526_1              bioconda/osx-64                          Cached
  + perl-data-dumper                   2.173  pl526_0              bioconda/osx-64                          Cached
  + perl-digest-hmac                    1.03  pl526_3              bioconda/osx-64                          Cached
  + perl-digest-md5                     2.55  pl526_0              bioconda/osx-64                          Cached
  + perl-encode                         2.88  pl526_1              bioconda/osx-64                          Cached
  + perl-encode-locale                  1.05  pl526_6              bioconda/osx-64                          Cached
  + perl-exporter                       5.72  pl526_1              bioconda/osx-64                          Cached
  + perl-exporter-tiny              1.002001  pl526_0              bioconda/osx-64                          Cached
  + perl-extutils-makemaker             7.36  pl526_1              bioconda/osx-64                          Cached
  + perl-file-listing                   6.04  pl526_1              bioconda/osx-64                          Cached
  + perl-file-path                      2.16  pl526_0              bioconda/osx-64                          Cached
  + perl-file-temp                    0.2304  pl526_2              bioconda/osx-64                          Cached
  + perl-html-parser                    3.72  pl526h04f5b5a_5      bioconda/osx-64                          Cached
  + perl-html-tagset                    3.20  pl526_3              bioconda/osx-64                          Cached
  + perl-html-tree                      5.07  pl526_1              bioconda/osx-64                          Cached
  + perl-http-cookies                   6.04  pl526_0              bioconda/osx-64                          Cached
  + perl-http-daemon                    6.01  pl526_1              bioconda/osx-64                          Cached
  + perl-http-date                      6.02  pl526_3              bioconda/osx-64                          Cached
  + perl-http-message                   6.18  pl526_0              bioconda/osx-64                          Cached
  + perl-http-negotiate                 6.01  pl526_3              bioconda/osx-64                          Cached
  + perl-io-compress                   2.087  pl526h6de7cb9_0      bioconda/osx-64                           81 KB
  + perl-io-html                       1.001  pl526_2              bioconda/osx-64                          Cached
  + perl-io-socket-ssl                 2.066  pl526_0              bioconda/osx-64                          Cached
  + perl-io-zlib                        1.10  pl526_2              bioconda/osx-64                            9 KB
  + perl-json                           4.02  pl526_0              bioconda/osx-64                          Cached
  + perl-json-xs                        2.34  pl526h04f5b5a_3      bioconda/osx-64                          Cached
  + perl-libwww-perl                    6.39  pl526_0              bioconda/noarch                          Cached
  + perl-list-moreutils                0.428  pl526_1              bioconda/osx-64                          Cached
  + perl-list-moreutils-xs             0.428  pl526_0              bioconda/osx-64                          Cached
  + perl-lwp-mediatypes                 6.04  pl526_0              bioconda/osx-64                          Cached
  + perl-lwp-protocol-https             6.07  pl526_4              bioconda/osx-64                          Cached
  + perl-mime-base64                    3.15  pl526_1              bioconda/osx-64                          Cached
  + perl-mozilla-ca                 20180117  pl526_1              bioconda/osx-64                          Cached
  + perl-net-http                       6.19  pl526_0              bioconda/noarch                          Cached
  + perl-net-ssleay                     1.88  pl526hb1dc21d_0      bioconda/osx-64                          Cached
  + perl-ntlm                           1.09  pl526_4              bioconda/osx-64                          Cached
  + perl-parent                        0.236  pl526_1              bioconda/osx-64                          Cached
  + perl-pathtools                      3.75  pl526h1de35cc_1      bioconda/osx-64                          Cached
  + perl-scalar-list-utils              1.52  pl526h01d97ff_0      bioconda/osx-64                          Cached
  + perl-socket                        2.027  pl526_1              bioconda/osx-64                          Cached
  + perl-storable                       3.15  pl526h1de35cc_0      bioconda/osx-64                          Cached
  + perl-test-requiresinternet          0.05  pl526_0              bioconda/osx-64                          Cached
  + perl-time-local                     1.28  pl526_1              bioconda/osx-64                          Cached
  + perl-try-tiny                       0.30  pl526_1              bioconda/osx-64                          Cached
  + perl-types-serialiser                1.0  pl526_2              bioconda/osx-64                          Cached
  + perl-uri                            1.76  pl526_0              bioconda/osx-64                          Cached
  + perl-www-robotrules                 6.02  pl526_3              bioconda/osx-64                          Cached
  + perl-xml-namespacesupport           1.12  pl526_0              bioconda/osx-64                          Cached
  + perl-xml-parser                  2.44_01  pl5262h06ef574_1002  conda-forge/osx-64                       Cached
  + perl-xml-sax                        1.02  pl526_0              bioconda/noarch                          Cached
  + perl-xml-sax-base                   1.09  pl526_0              bioconda/osx-64                          Cached
  + perl-xml-sax-expat                  0.51  pl526_3              bioconda/osx-64                          Cached
  + perl-xml-simple                     2.25  pl526_1              bioconda/osx-64                          Cached
  + perl-xsloader                       0.24  pl526_0              bioconda/osx-64                          Cached
  + tk                                8.6.11  hd798d34_0           conda-forge/osx-64                       Cached
  + zlib                              1.2.11  h7795811_1010        conda-forge/osx-64                       Cached

  Summary:

  Install: 85 packages

  Total download: 29 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: mcl-14.137-pl5262hb4d813b_6.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/mcl_1630478559512/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    blast:                      2.12.0-pl5262h78c34c6_0     bioconda   
    bzip2:                      1.0.8-h0d85af4_4            conda-forge
    c-ares:                     1.17.2-h0d85af4_0           conda-forge
    ca-certificates:            2021.5.30-h033912b_0        conda-forge
    curl:                       7.78.0-hb861fe1_0           conda-forge
    entrez-direct:              13.9-pl5262h193322a_2       bioconda   
    expat:                      2.4.1-he49afe7_0            conda-forge
    krb5:                       1.19.2-hcfbf3a7_0           conda-forge
    libcurl:                    7.78.0-hf45b732_0           conda-forge
    libcxx:                     12.0.1-habf9029_0           conda-forge
    libedit:                    3.1.20191231-h0678c8f_2     conda-forge
    libev:                      4.33-haf1e3a3_1             conda-forge
    libnghttp2:                 1.43.0-h07e645a_0           conda-forge
    libssh2:                    1.10.0-h52ee1ee_0           conda-forge
    llvm-openmp:                12.0.1-hda6cdc1_1           conda-forge
    mcl:                        14.137-pl5262hb4d813b_6     local      
    ncurses:                    6.2-h2e338ed_4              conda-forge
    openssl:                    1.1.1k-h0d85af4_1           conda-forge
    pcre:                       8.45-he49afe7_0             conda-forge
    perl:                       5.26.2-hbcb3906_1008        conda-forge
    perl-app-cpanminus:         1.7044-pl526_1              bioconda   
    perl-archive-tar:           2.32-pl526_0                bioconda   
    perl-base:                  2.23-pl526_1                bioconda   
    perl-business-isbn:         3.004-pl526_0               bioconda   
    perl-business-isbn-data:    20140910.003-pl526_0        bioconda   
    perl-carp:                  1.38-pl526_3                bioconda   
    perl-common-sense:          3.74-pl526_2                bioconda   
    perl-compress-raw-bzip2:    2.087-pl526h6de7cb9_0       bioconda   
    perl-compress-raw-zlib:     2.087-pl526h770b8ee_0       bioconda   
    perl-constant:              1.33-pl526_1                bioconda   
    perl-data-dumper:           2.173-pl526_0               bioconda   
    perl-digest-hmac:           1.03-pl526_3                bioconda   
    perl-digest-md5:            2.55-pl526_0                bioconda   
    perl-encode:                2.88-pl526_1                bioconda   
    perl-encode-locale:         1.05-pl526_6                bioconda   
    perl-exporter:              5.72-pl526_1                bioconda   
    perl-exporter-tiny:         1.002001-pl526_0            bioconda   
    perl-extutils-makemaker:    7.36-pl526_1                bioconda   
    perl-file-listing:          6.04-pl526_1                bioconda   
    perl-file-path:             2.16-pl526_0                bioconda   
    perl-file-temp:             0.2304-pl526_2              bioconda   
    perl-html-parser:           3.72-pl526h04f5b5a_5        bioconda   
    perl-html-tagset:           3.20-pl526_3                bioconda   
    perl-html-tree:             5.07-pl526_1                bioconda   
    perl-http-cookies:          6.04-pl526_0                bioconda   
    perl-http-daemon:           6.01-pl526_1                bioconda   
    perl-http-date:             6.02-pl526_3                bioconda   
    perl-http-message:          6.18-pl526_0                bioconda   
    perl-http-negotiate:        6.01-pl526_3                bioconda   
    perl-io-compress:           2.087-pl526h6de7cb9_0       bioconda   
    perl-io-html:               1.001-pl526_2               bioconda   
    perl-io-socket-ssl:         2.066-pl526_0               bioconda   
    perl-io-zlib:               1.10-pl526_2                bioconda   
    perl-json:                  4.02-pl526_0                bioconda   
    perl-json-xs:               2.34-pl526h04f5b5a_3        bioconda   
    perl-libwww-perl:           6.39-pl526_0                bioconda   
    perl-list-moreutils:        0.428-pl526_1               bioconda   
    perl-list-moreutils-xs:     0.428-pl526_0               bioconda   
    perl-lwp-mediatypes:        6.04-pl526_0                bioconda   
    perl-lwp-protocol-https:    6.07-pl526_4                bioconda   
    perl-mime-base64:           3.15-pl526_1                bioconda   
    perl-mozilla-ca:            20180117-pl526_1            bioconda   
    perl-net-http:              6.19-pl526_0                bioconda   
    perl-net-ssleay:            1.88-pl526hb1dc21d_0        bioconda   
    perl-ntlm:                  1.09-pl526_4                bioconda   
    perl-parent:                0.236-pl526_1               bioconda   
    perl-pathtools:             3.75-pl526h1de35cc_1        bioconda   
    perl-scalar-list-utils:     1.52-pl526h01d97ff_0        bioconda   
    perl-socket:                2.027-pl526_1               bioconda   
    perl-storable:              3.15-pl526h1de35cc_0        bioconda   
    perl-test-requiresinternet: 0.05-pl526_0                bioconda   
    perl-time-local:            1.28-pl526_1                bioconda   
    perl-try-tiny:              0.30-pl526_1                bioconda   
    perl-types-serialiser:      1.0-pl526_2                 bioconda   
    perl-uri:                   1.76-pl526_0                bioconda   
    perl-www-robotrules:        6.02-pl526_3                bioconda   
    perl-xml-namespacesupport:  1.12-pl526_0                bioconda   
    perl-xml-parser:            2.44_01-pl5262h06ef574_1002 conda-forge
    perl-xml-sax:               1.02-pl526_0                bioconda   
    perl-xml-sax-base:          1.09-pl526_0                bioconda   
    perl-xml-sax-expat:         0.51-pl526_3                bioconda   
    perl-xml-simple:            2.25-pl526_1                bioconda   
    perl-xsloader:              0.24-pl526_0                bioconda   
    tk:                         8.6.11-hd798d34_0           conda-forge
    zlib:                       1.2.11-h7795811_1010        conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/mcl_1630478559512/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/Users/runner/conda/conda-bld/mcl_1630478559512/test_tmp
Usage: clm <mode> [--nop] [options] [files]
       clm <mode> -h (for mode specific options)

clm mate [options] <cl file> <cl file>
clm meet [options] <cl file>+
clm vol [options] <cl file>+
clm dist [options] <cl file>+
clm info [options] <mx file> <cl file>+
clm info2 [options] <mx-file> <cl-file>+
clm imac [options] -imx <mx file>
clm order [options] <cl-[stack-]file>+
clm close [options] -imx <mx file>
clm residue [options] -icl <cl-file> -imx <mx-file>
clm adjust [options] -icl <cl-file> -imx <mx-file>
clm optics -imx <mx-file> -min-pts <int> -{max,min}-eps <threshold>
clm enstrict [-o <cl-file>] <cl-file>
clm fold [options] -tab <tab-file> -imx <mx-file>

clm help <mode> (invoke manual page for <mode>)
help pages should be available for: mate meet vol dist info imac order close residue
clmformat 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
clxdo annot2tab  <annot-file> <dict-file>        #  make dict file from annot file
clxdo check_symmetry       <mx-file>             #  check symmetry. OUTPUTS DIFFERENCE EDGES
clxdo check_symmetry_present  <mx-file>          #  check symmetry of presence. OUTPUTS DIFFERENCE EDGES
clxdo cls_annot_summary <cls-annot-dump-file>
clxdo coarsen <cls-file> <mx-file>               # create graph on clusters
clxdo diff_mx <tbl-file> <tbl-file>              # dumps all edges from a-b
clxdo diff_table <tbl-file> <tbl-file>           # prints max(abs(a-b))
clxdo dist_pct <STDIN clm dist output>           #  convert clm dist output to percentages
clxdo dump_clustering <cls-file> <dict-file>     # dump clustering as lines of labels
clxdo factor_table_from_clustering <node-to-factormatrix> <node-clustering> <factor-dictionary>
clxdo gen_root <num>                             #  generate root clustering on <num> nodes
clxdo gen_singletons <num>                       #  generate singletons clustering on <num> nodes
clxdo granularity          <cls-file>            #  show cluster sizes
clxdo granularity_divide   <num> <cls-file>      #  #clusters, #nodes in clusters >= num
clxdo granularity_gq  <num> <cls-file>           #  all sizes at least <num>
clxdo granularity_hist     <cls-file>            #  show cluster sizes distribution
clxdo granularity_largest  <num> <cls-file>      #  <num> biggest sizes
clxdo grok    <cls-file> <mx-file> <nsm-name> <ccm-name> #  node-cls and cls-cls
clxdo make_map <source-cls> <dest-cls>           # make map file between clusterings
clxdo multiplex_coarse_clustering <coarse-clustering> <fine-clustering>
clxdo randomize_clustering  <cls-file>           #  randomize clustering
clxdo tab_grep <tab-file> <identifier-file>      # get mcl identifiers for external identifiers
clxdo volatility           <cls-file>+           #  output list of volatile nodes
-o <fname>      !  write output to file <fname>

--version       i  show version
-h              i  output description of most important options
--help          i  output description of options
-z              i  show some of the default settings
--jury-charter  i  show the meaning of the jury pruning synopsis
-how-much-ram <int> i  show estimated RAM usage for graphs with <int> nodes
--show-schemes  i  show the preset -scheme options

-overlap <split|cut|keep>    what to do with overlap (default cut)
-force-connected y/n    analyze clustering, make sure it induces cocos
-check-connected y/n    analyze clustering, see whether it induces cocos
--write-limit      output the limit matrix
-show-log y/n      send log to stdout
-discard-loops y/n    remove loops in input graphs if any
--sum-loops        set loop weight to sum of node arc weights
-c <num>           increase loop-weights <num>-fold
-q log-spec        quiet level of logging
-analyze y/n       append performance/characteristics measures
-sort <mode>       order clustering by one of lex|size|revsize|none
-digits <int>      precision in interchange (intermediate matrices) output
--write-binary     write binary output

--abc              expect abc-format (label input), write label output
--sif              expect sif-format (label input), write label output
--etc              expect etc-format (label input), write label output
--expect-values    accept extended SIF or ETC format (label:weight fields)
-use-tab fname     expect native network format, write label output using dictionary
-abc-tf tf-spec    transform label values

--abc-neg-log      log-transform label value, negate sign
--abc-neg-log10    log10-transform label value, negate sign
-write-graph fname    write input matrix to file
-write-graphx fname    write transformed matrix to file

-write-expanded <fname>    file name to write expanded graph to

-annot <description>    string describing the experiment
-aa <suffix>       append <suffix> to mcl-created output file name
-odir <directory> !  use this directory for output
-az             i  show output file name mcl would construct
-ax             i  show the suffix mcl constructs from parameters
-ap <prefix>       prepend <prefix> to mcl-created output file name
--d                use automatic naming and use input directory for output

-tf tf-spec        transform matrix values
-icl fname         subcluster this clustering
-pi <num>          preprocess by applying inflation with parameter <num>
-ph <num>          as -pi, applied before shadowing
-if <num>          assume expanded input, inflate with parameter <num>
-I <num>        !  main inflation value (default 2.0)
-scheme <int>   !  use a preset resource scheme (cf --show-schemes)
-resource <int> !  allow <int> neighbours throughout computation
-sparse <num>      estimated sparse matrix-vector overhead per summand (default 10)
-te <int>       !  expansion thread number, use with multiple CPUs

--show             (small graphs only [#<20]) dump iterands to *screen*
-v {pruning|explain|clusters|all}    mode verbose
-V {pruning|explain|clusters|all}    mode silent

-p <num>           the rigid pruning threshold
-P <int>           (inverted) rigid pruning threshold (cf -z)
-R <int>           recover to maximally <int> entries if needed
-S <int>           select down to <int> entries if needed
-pct <pct>         try recovery if mass is less than <pct>

-warn-factor <int>    warn if pruning reduces entry count by <int>
-warn-pct <pct>    warn if pruning reduces mass to <pct> weight

-dump-stem <str>    use <str> to construct dump (file) names
-dump <mode>       <mode> in chr|ite|cls|dag (cf manual page)
-dump-interval <int>:<int>    only dump for iterand indices in this interval
-dump-modulo <int>    only dump if the iterand index modulo <int> vanishes

Legend:
  (i)   for informative options that exit after usage
  (!)   for important options that you should be aware of
Consult the manual page for more information
mcxblastline wraps around the generic mclpipeline script. It fills in the name
of the BLAST parser (mcxdeblast) and the tag ('blast') used to propagate
mcxdeblast options through the pipeline to mcxdeblast itself.  You can freely
use all mclpipeline options other than --parser=<executable> and
--parser-tag=<str>.

Usage: mclpipeline --parser=<executable> --parser-tag=<str> [options] file-name

This will successively call four programs,
   mcxdeblast , mcxassemble , mcl , clmformat
These programs write by default to files with names sharing a common base.
The parser should implement the behaviour expected by mclpipeline.
,_______ global options:
   --whatif          shows only what would be done.
   --start-assemble  skip the parse step, assume needed files exist already.
   --start-mcl       start running mcl immediately, as above.
   --start-format    only (re)do the formatting stage, as above.
   --prepare-mcl     create the input file for mcl, then quit.
   --help            show this.
,_______ global options (affecting shared base name of created files):
   --xi=<suf>        strip <suf> from file-name for use as base stem.
   --xo-dat=<suf>    attach <suf> to parse result.
   --xo-ass=<suf>    attach <suf> to mcxassemble result.
   --xo-mcl=<suf>    use <suf> as mcl result attachment.
   --xa-mcl=<suf>    append to mcl suffix.
   --xe-mcl=<suf>    append to mcl file name.
   --xo-fmt=<suf>    attach <suf> to clmformat result.
     mnemonics: eXtension In, Out, Append, Extra.
,_______ parse options
   --parser=<script> name of parse script
   --parser-tag=<str>   tag of options to pass to parse script.
,_______ mcxassemble options:
   --ass-repeat=<str>str in <add|max|mul|left|right>
   --ass-nomap       map file does not exist or should be ignored.
and GENERALLY,
   --ass<-opt[=val]> add '-opt [val]' to mcxassemble command line.
   --start-assemble=<base-name>  start running mcxassemble with base-name.
,_______ mcl options:
   --mcl-te=<num>    number of expansion threads.
   --mcl-I=<float>   inflation value, MAIN mcl handle.
   --mcl-i=<float>   initial inflation value.
   --mcl-l=<int>     initial loop length.
   --mcl-pi=<float>  pre-inflation value.
   --mcl-c=<float>   center value.
   --mcl-scheme=<i>  i in 1..5, resource allocation level.
   --mcl-o=<fname>   if you *need* to use this, I must be improved.
and GENERALLY,
   --mcl<-opt[=val]> add '-opt [val]' to mcl command line, e.g.
                           --mcl-v=all adds '-v all' to the mcl command line.
   --start-mcl=<file-name>
                     start running mcl with file-name.  optionally combines
                     with the --xi option.
,_______ clmformat options:
   --fmt-lump-size=<num>   collect clusters of size lq <num> in a single file.
   --fmt-lump-count=<num>  make batches containing approximately <num> nodes.
   --fmt-notab             tab file does not exist or should be ignored.
   --fmt-tab=<fname>       use tab file fname.
and GENERALLY,
   --fmt<-opt[=val]>       add '-opt [val]' to clmformat command line.
________________
The above options are generic pipeline options.  You can pass any mcxdeblast
option by inserting the 'blast' tag in front of that particular option. For
example, the mcxdeblast --score=x option (where x is 'b' or 'e') should
be passed to mcxblastline as --blast-score=x.

The mcxdeblast --xo-dat option is special; it must *not* be prefixed, as it is
shared with mclpipeline, as can be seen from the above listing.  The mcxdeblast
--xi-dat option should not be used, as it encapsulated by the mclpipeline --xi
option.
mclcm 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.

Usage: mclpipeline --parser=<executable> --parser-tag=<str> [options] file-name

This will successively call four programs,
    , mcxassemble , mcl , clmformat
These programs write by default to files with names sharing a common base.
The parser should implement the behaviour expected by mclpipeline.
,_______ global options:
   --whatif          shows only what would be done.
   --start-assemble  skip the parse step, assume needed files exist already.
   --start-mcl       start running mcl immediately, as above.
   --start-format    only (re)do the formatting stage, as above.
   --prepare-mcl     create the input file for mcl, then quit.
   --help            show this.
,_______ global options (affecting shared base name of created files):
   --xi=<suf>        strip <suf> from file-name for use as base stem.
   --xo-dat=<suf>    attach <suf> to parse result.
   --xo-ass=<suf>    attach <suf> to mcxassemble result.
   --xo-mcl=<suf>    use <suf> as mcl result attachment.
   --xa-mcl=<suf>    append to mcl suffix.
   --xe-mcl=<suf>    append to mcl file name.
   --xo-fmt=<suf>    attach <suf> to clmformat result.
     mnemonics: eXtension In, Out, Append, Extra.
,_______ parse options
   --parser=<script> name of parse script
   --parser-tag=<str>   tag of options to pass to parse script.
,_______ mcxassemble options:
   --ass-repeat=<str>str in <add|max|mul|left|right>
   --ass-nomap       map file does not exist or should be ignored.
and GENERALLY,
   --ass<-opt[=val]> add '-opt [val]' to mcxassemble command line.
   --start-assemble=<base-name>  start running mcxassemble with base-name.
,_______ mcl options:
   --mcl-te=<num>    number of expansion threads.
   --mcl-I=<float>   inflation value, MAIN mcl handle.
   --mcl-i=<float>   initial inflation value.
   --mcl-l=<int>     initial loop length.
   --mcl-pi=<float>  pre-inflation value.
   --mcl-c=<float>   center value.
   --mcl-scheme=<i>  i in 1..5, resource allocation level.
   --mcl-o=<fname>   if you *need* to use this, I must be improved.
and GENERALLY,
   --mcl<-opt[=val]> add '-opt [val]' to mcl command line, e.g.
                           --mcl-v=all adds '-v all' to the mcl command line.
   --start-mcl=<file-name>
                     start running mcl with file-name.  optionally combines
                     with the --xi option.
,_______ clmformat options:
   --fmt-lump-size=<num>   collect clusters of size lq <num> in a single file.
   --fmt-lump-count=<num>  make batches containing approximately <num> nodes.
   --fmt-notab             tab file does not exist or should be ignored.
   --fmt-tab=<fname>       use tab file fname.
and GENERALLY,
   --fmt<-opt[=val]>       add '-opt [val]' to clmformat command line.
Usage: mcx <mode> [options] [files]
       mcx <mode> -h  (for mode specific options)

mcx convert [options] <cl file>+
mcx query [options]
mcx diameter [options]
mcx clcf [options]
mcx erdos [options]
mcx ctty [options]
mcx collect [files]
mcx alter [options]
mcx tab [files]
mcx fp [options]

mcx help <mode> (invoke manual page for <mode>)
help pages should be available for: convert query diameter clcf ctty fp
mcxarray 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
mcxassemble 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
Usage: mcxdeblast <options> file-name
where file-name is in BLAST NCBI format.
mcxdeblast will create
   base.hdr    [to be read by mcxassemble]
   base.raw    [to be read by mcxassemble]
   base.map    [to be read by mcxassemble]
   base.tab    [to be read by clmformat]
   base.err    [error log]
where base is derived from or equal to file-name
Options:
   --m9              Expect column (-m 9) input.
   --line-mode=abc   Output simple ID1 ID2 SCORE format.
   --score=<b|e|r>   Use bit scores, E-values,
                        or bit scores normalized by hsp-length
   --sort=<a|o>      Use alphabetic sorting (default) or occurrence.
   --tab=<fname>     Use user-supplied tab file.
   --xi-dat=<suf>    Strip <suf> from file-name to create output base name.
   --xo-dat=<suf>    Add <suf> to base name.
   --bcut=<val>      Ignore hits below bit score <val>
   --ecut=<val>      Ignore hits below E-value <val>
   --rcut=<val>      Ignore hits below raw value <val>
   --out=<fname>     Output file name ('-' for STDOUT)
mcxdump 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
mcxload 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
mcxmap 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
mcxrand 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.
mcxsubs 14-137
Copyright (c) 1999-2014, Stijn van Dongen. mcl comes with NO WARRANTY
to the extent permitted by law. You may redistribute copies of mcl under
the terms of the GNU General Public License.

Resource usage statistics from testing mcl:
   Process count: 2
   CPU time: Sys=0:00:00.0, User=0:00:00.0
   Memory: 10.2M
   Disk usage: 12B
   Time elapsed: 0:00:02.0


TEST END: mcl-14.137-pl5262hb4d813b_6.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


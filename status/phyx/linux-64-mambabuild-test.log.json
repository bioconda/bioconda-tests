  Package               Version  Build                Channel                                   Size
──────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex           0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex           4.5  1_gnu                conda-forge/linux-64                    Cached
  + armadillo           9.900.5  h7c03176_0           conda-forge/linux-64                    582 KB
  + arpack                3.7.0  hdefa2d7_2           conda-forge/linux-64                    215 KB
  + ca-certificates   2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + lapack                3.9.0  netlib               conda-forge/linux-64                     11 KB
  + ld_impl_linux-64     2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas               3.9.0  11_linux64_openblas  conda-forge/linux-64                     12 KB
  + libcblas              3.9.0  11_linux64_openblas  conda-forge/linux-64                     11 KB
  + libffi                  3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng            11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng       11.1.0  h69a702a_8           conda-forge/linux-64                     19 KB
  + libgfortran5         11.1.0  h6c583b3_8           conda-forge/linux-64                      2 MB
  + libgomp              11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack             3.9.0  11_linux64_openblas  conda-forge/linux-64                     11 KB
  + libopenblas          0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                      9 MB
  + libstdcxx-ng         11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + ncurses                 6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + nlopt                 2.7.0  py39h3e08f04_1       conda-forge/linux-64                    412 KB
  + numpy                1.21.2  py39hdbf815f_0       conda-forge/linux-64                      6 MB
  + openblas             0.3.17  pthreads_h4748800_1  conda-forge/linux-64                     10 MB
  + openssl              1.1.1l  h7f98852_0           conda-forge/linux-64                    Cached
  + phyx                    1.1  h7021e79_1           /home/vsts/conda/conda-bld/linux-64       1 MB
  + pip                  21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + python                3.9.7  h49503c6_0_cpython   conda-forge/linux-64                    Cached
  + python_abi              3.9  2_cp39               conda-forge/linux-64                    Cached
  + readline                8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + setuptools           58.0.2  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + sqlite               3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + superlu               5.2.2  h16cfea0_0           conda-forge/linux-64                    217 KB
  + tk                   8.6.11  h27826a3_1           conda-forge/linux-64                    Cached
  + tzdata                2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                    5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                 1.2.11  h516909a_1010        conda-forge/linux-64                    Cached

  Summary:

  Install: 35 packages

  Total download: 30 MB

──────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: phyx-1.1-h7021e79_1.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/phyx_1631073840053/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    armadillo:        9.900.5-h7c03176_0         conda-forge
    arpack:           3.7.0-hdefa2d7_2           conda-forge
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    lapack:           3.9.0-netlib               conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    ncurses:          6.2-h58526e2_4             conda-forge
    nlopt:            2.7.0-py39h3e08f04_1       conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    openblas:         0.3.17-pthreads_h4748800_1 conda-forge
    openssl:          1.1.1l-h7f98852_0          conda-forge
    phyx:             1.1-h7021e79_1             local      
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    python:           3.9.7-h49503c6_0_cpython   conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    readline:         8.1-h46c0cb4_0             conda-forge
    setuptools:       58.0.2-py39hf3d152e_0      conda-forge
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    superlu:          5.2.2-h16cfea0_0           conda-forge
    tk:               8.6.11-h27826a3_1          conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/phyx_1631073840053/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho
export SRC_DIR=/home/vsts/conda/conda-bld/phyx_1631073840053/test_tmp
Generate a codon alignment from aligned amino acids and unaligned nucleotides.
Taxa found in only 1 input file will be removed.
This will take fasta, fastq, phylip, and nexus inputs.

Usage: pxaa2cdn [OPTIONS]...

Options:
 -a, --aaseqf=FILE   input sequence file, STDIN otherwise
 -n, --nucseqf=FILE  input sequence file, STDIN otherwise
 -o, --outf=FILE     output fasta file, STOUT otherwise
 -r, --rmlastcdn     removes last codon (default: false)
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Fit a lineage diversification model to a tree.
This will take a newick- or nexus-formatted tree from a file or STDIN.

Usage: pxbdfit [OPTIONS]...

Options:
 -t, --treef=FILE    input treefile, STDIN otherwise
 -m, --model=STRING  diversification model; either 'yule', 'bd' (default), or 'best'
 -o, --outf=FILE     output file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Birth-death tree simulator.

Usage: pxbdsim [OPTIONS]...

Options:
 -e, --extant=INT    number of extant species, alt to time
 -t, --time=DOUBLE   timespan of simulation (age of root), alt to extant
 -b, --birth=DOUBLE  birth rate, default=1
 -d, --death=DOUBLE  death rate, default=0
 -n, --nreps=INT     number of replicates, default=1
 -o, --outf=FILE     output file, STOUT otherwise
 -s, --showextinct   show lineages that went extinct, default=false
 -x, --seed=INT      random number seed, clock otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Sequence alignment bootstrap or jackknife resampling.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.

Usage: pxboot [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -p, --partf=FILE    file listing empirical partitions: NAME = START-STOP[\INTERVAL]
 -f, --frac=DOUBLE   jackknife percentage, default bootstrap (i.e. -f 1.0)
 -x, --seed=INT      random number seed, clock otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
This will print out bipartitions found in treefile.
Trees are assumed rooted unless the -e argument is provided.
This will take a newick- or nexus-formatted tree from a file or STDIN.

Usage: pxbp [OPTIONS]...

Options:
 -t, --treef=FILE    input treefile, STDIN otherwise
 -v, --verbose       give more output
 -e, --edgeall       force edgewise (not node - so when things are unrooted) and
                           assume all taxa are present in all trees
 -u, --uniquetree    output unique trees and *no* other output
 -m, --maptree=FILE  put the bipart freq on the edges of this tree. This will 
                           create a *.pxbpmapped.tre file.
 -c, --cutoff        skip biparts that have support lower than this.
 -s, --suppress      don't print all the output (maybe you use this
                           with the maptree feature
 -o, --outf=FILE     output file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Sequence file concatenation.
Can use wildcards e.g.:
  pxcat -s *.phy -o my_cat_file.fa
However, if the argument list is too long (shell limit), put filenames in a file:
  for x in *.phy; do echo $x >> flist.txt; done
and call using the -f option:
  pxcat -f flist.txt -o my_cat_file.fa
This will take fasta, fastq, phylip, and nexus sequence formats.
Individual files may be of different formats.

Usage: pxcat [OPTIONS]... FILES

Options:
 -s, --seqf=FILE     list of input sequence files (space delimited)
 -f, --flistFILE     file listing input files (one per line)
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -p, --partf=FILE    output partition file, none otherwise
 -u, --uppercase     export characters in uppercase
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Clean alignments by removing positions/taxa with too much ambiguous data.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.
Results are written in fasta format.

Usage: pxclsq [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output fasta file, STOUT otherwise
 -p, --prop=DOUBLE   proportion required to be present, default=0.5
 -t, --taxa          consider missing data per taxon (default: per site)
 -c, --codon         examine sequences by codon rather than site
                       - requires all sequences be in frame and of correct length
 -i, --info          report counts of missing data and exit
                       - combine with -t to get report by taxon (rather than site)
                       - combine with -c to use codons as units
 -v, --verbose       more verbose output (i.e. if entire seqs are removed)
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Compute a consensus sequence from an alignment.
This will take fasta, phylip, and nexus formats from a file or STDIN.
Results are written in fasta format.

Usage: pxconsq [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Continuous character rate estimation with Brownian and OU.
This will take fasta, phylip, and nexus formats from a file or STDIN.

Usage: pxcontrates [OPTIONS]...

Options:
 -c, --charf=FILE     input character file, STDIN otherwise
 -t, --treef=FILE     input tree file, STDIN otherwise
 -a, --analysis=NUM   analysis type (0=anc[DEFAULT], 1=ratetest)
 -o, --outf=FILE      output sequence file, STOUT otherwise
 -h, --help           display this help and exit
 -V, --version        display version and exit
 -C, --citation       display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Filter fastq files by mean quality.
Data can be read from a file or STDIN.

Usage: pxfqfilt [OPTIONS]...

Options:
 -m, --mean=VALUE    mean value under which seqs are filtered
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
MCMC log file manipulator.
Can combine and resample parameters or trees across files.
Log files need not contain the same number of samples.
Input files may be indicated using wildcards e.g. '*.trees'
Parameter log files are expected to be whitespace delimited.
*NOTE* All values are in terms of number of SAMPLES (NOT generations).

Usage: pxlog [OPTIONS]...

Options:
 -p, --parmf=FILE    input parameter log file(s)
 -t, --treef=FILE    input tree log file(s)
 -o, --outf=FILE     output file, STOUT otherwise
 -b, --burnin=INT    number of samples to exclude at the beginning of a file
 -n, --thin=INT      interval of resampling
 -r, --rand=INT      number of random samples (without replacement) not yet implemented!
 -i, --info          calculate log file attributes and exit
 -c, --columns       print out column names (parameter logs only)
 -d, --delete=CSL    delete columns by 1-index sep by commas (NO SPACES!) (parameter logs only)
 -k, --keep=CSL      keep only columns by 1-index sep by commas (NO SPACES!) (parameter logs only)
 -x, --seed=INT      random number seed, clock otherwise
 -v, --verbose       make the output more verbose
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Print sequence file summary.
By default returns all properties. Alternatively choose 1 property.
This will take fasta, phylip, and nexus formats from a file or STDIN.

Usage: pxlssq [OPTIONS]...

Options:
 -s, --seqf=FILE     input seq file, STDIN otherwise
 -i, --indiv         output stats for individual sequences
 -n, --nseq          return the number of sequences
 -c, --nchar         return the number of characters (only if aligned)
                        - for unaligned seqs, use with -i flag
 -l, --labels        return all taxon labels (one per line)
 -p, --prot          force interpret as protein (if inference fails)
 -a, --aligned       return whether sequences are aligned (same length)
 -f, --freqs         return character state frequencies
 -m, --missing       return the proportion of missing (-,?) characters
 -o, --outf=FILE     output stats file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Print tree summary.
By default returns all properties. Alternatively choose 1 property.
This will take a newick- or nexus-formatted tree from a file or STDIN.

Usage: pxlstr [OPTIONS]...

Options:
 -t, --treef=FILE    input tree file, STDIN otherwise
 -r, --rooted        return whether the tree is rooted
 -a, --age           return the height of root (must be rooted and ultrametric)
 -n, --ntips         return the number of terminals
 -u, --ultrametric   return whether tree is ultrametric
 -b, --binary        return whether tree is binary
 -l, --length        return the length of the tree
 -i, --tiplabels     return all tip labels (one per line)
 -v, --rtvar         return root-to-tip variance
 -o, --outf=FILE     output tree stats file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Get the number of descendant tips of internal nodes specified by mrca statements.
This will take a newick- or nexus-formatted tree from a file or STDIN,
and an MRCA file with format:
MRCANAME = tip1 tip2 ...

Usage: pxmrca [OPTIONS]...

Options:
 -t, --treef=FILE    input newick tree file, STDIN otherwise
 -m, --mrca=FILE     file containing MRCA declarations
 -o, --outf=FILE     output newick file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Extract subclade(s) from tree(s).
This will take a newick- or nexus-formatted tree from a file or STDIN,
and an MRCA file with format:
MRCANAME = tip1 tip2 ...
If multiple MRCAs are provided, multiple subtrees are returned

Usage: pxmrcacut [OPTIONS]...

Options:
 -t, --treef=FILE    input newick tree file, STDIN otherwise
 -m, --mrca=FILE     file containing MRCA declarations
 -o, --outf=FILE     output newick file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Label internal nodes with clade names.
This will take a newick- or nexus-formatted tree from a file or STDIN,
and an MRCA file with format:
MRCANAME = tip1 tip2 ...
If no MRCA file is present, this will label anything
that isn't labeled

Usage: pxmrcaname [OPTIONS]...

Options:
 -t, --treef=FILE    input newick tree file, STDIN otherwise
 -m, --mrca=FILE     file containing MRCA declarations
 -o, --outf=FILE     output newick file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Basic neighbour-joining tree maker.
This will take fasta, fastq, phylip, and nexus inputs from a file or STDIN.

Usage: pxnj [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output newick file, STOUT otherwise
 -n, --nthreads=INT  number of threads, default=1
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Conduct Needleman-Wunsch analysis for all the seqs in a file.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.
Output is a list of the scores and distances (and the alignments if asked).

Usage: pxnw [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output score/distance file, STOUT otherwise
 -a, --outalnf=FILE  output sequence file, won't output otherwise
 -t, --seqtype=INT   sequence type, default=DNA (DNA=0,AA=1)
 -m, --matrix=FILE   scoring matrix, default DNA=EDNAFULL, AA=BLOSUM62
 -n, --nthreads=INT  number of threads (open mp), default=2
 -v, --verbose       make the output more verbose, turns off parallel
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Nucleotide sequence recoding.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.

Usage: pxrecode [OPTIONS]...

Options:
 -s, --seqf=FILE      input sequence file, STDIN otherwise
 -r, --recode=STRING  string identifying recoding scheme (default: RY)
  Supported recodings (use any valid combination):
      R = A|G
      Y = C|T
      S = C|G
      W = A|T
      M = A|C
      K = G|T
      B = C|G|T
      D = A|G|T
      H = A|C|T
      V = A|C|G
 -o, --outf=FILE      output sequence file, STOUT otherwise
 -h, --help           display this help and exit
 -V, --version        display version and exit
 -C, --citation       display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Reverse complement sequences.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.
Results are written in fasta format.

Usage: pxrevcomp [OPTIONS]... [FILE]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -i, --ids=IDS       a comma sep list of ids to flip (NO SPACES!)
 -g, --guess         EXPERIMENTAL: guess whether there are seqs that need to be 
                       rev comp. uses edlib library on first seq
 -p, --pguess        EXPERIMENTAL: progressively guess 
 -m, --sguess        EXPERIMENTAL: sampled guess 
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Taxon relabelling for alignments.
This will take fasta, phylip, and nexus formats from a file or STDIN.
Two ordered lists of taxa, -c (current) and -n (new) must be provided.
Results are written in fasta format.

Usage: pxrls [OPTIONS]... FILES

Options:
 -s, --seqf=FILE     input seq file, STDIN otherwise
 -c, --cnames=FILE   file containing current taxon labels (one per line)
 -n, --nnames=FILE   file containing new taxon labels (one per line)
 -o, --outf=FILE     output file, STOUT otherwise
 -v, --verbose       make the output more verbose
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Taxon relabelling for trees.
Two ordered lists of taxa, -c (current) and -n (new) must be provided.
This will take a newick- or nexus-formatted tree from a file or STDIN.
Output is written in newick format.

Usage: pxrlt [OPTIONS]...

Options:
 -t, --treef=FILE    input tree file, STDIN otherwise
 -c, --cnames=FILE   file containing current taxon labels (one per line)
 -n, --nnames=FILE   file containing new taxon labels (one per line)
 -o, --outf=FILE     output file, STOUT otherwise
 -v, --verbose       make the output more verbose
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Remove sequences by label.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.
Results are written in fasta format.

Usage: pxrms [OPTIONS]...

Options:
 -s, --seqf=FILE     input nucleotide sequence file, STDIN otherwise
 -n, --names=CSL     names sep by commas (NO SPACES!)
 -f, --namesf=FILE   names in a file (each on a line)
 -r, --regex=STRING  match tip labels by a regular expression
 -c, --comp          take the complement (i.e. remove any taxa not in list)
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Remove tree tips by label.
This will take a newick- or nexus-formatted tree from a file or STDIN.
Output is written in newick format.

Usage: pxrmt [OPTIONS]...

Options:
 -t, --treef=FILE    input tree file, STDIN otherwise
 -n, --names=CSL     names sep by commas (NO SPACES!)
 -f, --namesf=FILE   names in a file (each on a line)
 -r, --regex=STRING  match tip labels by a regular expression
 -c, --comp          take the complement (i.e. remove any taxa not in list)
 -o, --outf=FILE     output tree file, STOUT otherwise
 -s, --silent        suppress warnings of missing tips
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Reroot (or unroot) a tree file and produce a newick.
This will take a newick- or nexus-formatted tree from a file or STDIN.
Output is written in newick format.

Usage: pxrr [OPTIONS]...

Options:
 -t, --treef=FILE     input tree file, STDIN otherwise
 -g, --outgroups=CSL  outgroup sep by commas (NO SPACES!)
 -r, --ranked         turn on ordering of outgroups. will root on first one present
 -u, --unroot         unroot the tree
 -o, --outf=FILE      output tree file, STOUT otherwise
 -s, --silent         do not error if outgroup(s) not found
 -h, --help           display this help and exit
 -V, --version        display version and exit
 -C, --citation       display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Convert seqfiles from nexus, phylip, fastq to fasta.
Data can be read from a file or STDIN.

Usage: pxs2fa [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -u, --uppercase     export characters in uppercase
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Convert seqfiles from nexus, phylip, or fastq to nexus.
Can read from STDIN or file.

Usage: pxs2nex [OPTIONS]...

 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -u, --uppercase     export characters in uppercase
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Convert seqfiles from nexus, phylip, or fastq to phylip.
Can read from STDIN or file.

Usage: pxs2phy [OPTIONS]...

 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output sequence file, STOUT otherwise
 -u, --uppercase     export characters in uppercase
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Basic sequence simulator under the GTR model.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.

Usage: pxseqgen [OPTIONS]...

Options:
 -t, --treef=FILE       input treefile, STDIN otherwise
 -o, --outf=FILE        output seq file, STOUT otherwise
 -l, --length=INT       length of sequences to generate. default is 1000
 -b, --basef=Input      comma-delimited base freqs in order: A,C,G,T. default is equal
 -g, --gamma=INT        gamma shape value. default is no rate variation
 -i, --pinvar=FLOAT     proportion of invariable sites. default is 0.0
 -r, --ratemat=Input    comma-delimited input values for rate matrix. default is JC69
                          order: A<->C,A<->G,A<->T,C<->G,C<->T,G<->T
 -w, --aaratemat=Input  comma-delimited amino acid rate matrix. default is all freqs equal
                        order is ARNDCQEGHILKMFPSTWYV
 -q, --aabasefreq=Input AA frequencies, order: ARNDCQEGHILKMFPSTWYV
 -c, --protein          run as amino acid
 -n, --nreps=INT        number of replicates
 -x, --seed=INT         random number seed, clock otherwise
 -a, --ancestors        print the ancestral node sequences. default is no
                          use -p for the nodes labels
 -p, --printnodelabels  print newick with internal node labels. default is no
 -m, --multimodel=Input specify multiple models across tree
                          input is as follows:
                            A<->C,A<->G,A<->T,C<->G,C<->T,G<->T,Node#,A<->C,A<->G,A<->T,C<->G,C<->T,G<->T
                            EX:.3,.3,.3,.3,.3,1,.3,.3,.2,.5,.4
 -k, --rootseq=STRING   set root sequence. default is random (from basefreqs)
 -h, --help             display this help and exit
 -V, --version          display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
This will conduct state reconstruction analyses.

Usage: pxstrec [OPTIONS]... FILES

Options:
 -d, --dataf=FILE    input data file
 -w, --datawide      data is in wide format so (001 instead of 2)
 -z, --dataz         data is in probability format (0,1,0,0)
 -t, --treef=FILE    input tree file
 -c, --conf=FILE     configuration file
 -o, --outanc=FILE   output file for ancestral calc
 -n, --outstnum=FILE output file for stochastic mapping number
 -a, --outstnumany=FILE output file for stochastic mapping number any
 -m, --outsttim=FILE output file for stochastic mapping duration
 -p, --periods=NUMS  comma separated times
 -l, --logf=FILE     log file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Conduct Smith-Waterman analysis for all the seqs in a file.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.
Output is a list of the scores and distances (and the alignments if asked).

Usage: pxsw [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output score/distance file, STOUT otherwise
 -a, --outalnf=FILE  output sequence file, won't output otherwise
 -t, --seqtype=INT   sequence type, default=DNA (DNA=0,AA=1)
 -m, --matrix=FILE   scoring matrix, default DNA=EDNAFULL, AA=BLOSUM62
 -n, --nthreads=INT  number of threads (open mp), default=2
 -v, --verbose       make the output more verbose, turns off parallel
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
This will convert a tree file to newick.
This will take a newick- or nexus-formatted tree from a file or STDIN.

Usage: pxt2new [OPTIONS]...

Options:
 -t, --treef=FILE    input tree file, STDIN otherwise
 -o, --outf=FILE     output tree file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Translate DNA alignment to amino acids.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.
NOTE: assumes sequences are in frame.

Usage: pxtlate [OPTIONS]...

Options:
 -s, --seqf=FILE     input nucleotide sequence file, STDIN otherwise
 -t, --table=STRING  which translation table to use. currently available:
                       'std' (standard, default)
                       'vmt' (vertebrate mtDNA)
                       'ivmt' (invertebrate mtDNA)
                       'ymt' (yeast mtDNA)
 -o, --outf=FILE     output aa sequence file, STOUT otherwise
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Tree rescaling by providing either scaling factor or root height.
This will take a newick- or nexus-formatted tree from a file or STDIN.
Output is written in newick format.

Usage: pxtscale [OPTIONS]...

Options:
 -t, --treef=FILE        input tree file, STDIN otherwise
 -s, --scale=DOUBLE      edge length scaling factor
 -r, --rootheight=DOUBLE height of root (tree must be ultrametric)
 -o, --outf=FILE         output file, STOUT otherwise
 -h, --help              display this help and exit
 -V, --version           display version and exit
 -C, --citation          display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Bare bones UPGMA tree generator
Currently only uses uncorrected p-distances.
This will take fasta, fastq, phylip, and nexus formats from a file or STDIN.

Usage: pxupgma [OPTIONS]...

Options:
 -s, --seqf=FILE     input sequence file, STDIN otherwise
 -o, --outf=FILE     output newick file, STOUT otherwise
 -h, --help          display this help and exit
 -V,  --version      display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>
Convert vcf file to fasta.
Currently only handles haploid data; phased data will come soon.
Data can be read from a file or STDIN.

Usage: pxvcf2fa [OPTIONS]...

Options:
 -s, --seqf=FILE     input vcf file, STDIN otherwise
 -o, --outf=FILE     output fasta sequence file, STOUT otherwise
 -u, --uppercase     export characters in uppercase
 -h, --help          display this help and exit
 -V, --version       display version and exit
 -C, --citation      display phyx citation and exit

Report bugs to: <https://github.com/FePhyFoFum/phyx/issues>
phyx home page: <https://github.com/FePhyFoFum/phyx>

Resource usage statistics from testing phyx:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 20B
   Time elapsed: 0:00:02.1


TEST END: phyx-1.1-h7021e79_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                  Version  Build                Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex              0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex              4.5  1_gnu                conda-forge/linux-64                    Cached
  + blosc                   1.21.0  h9c3ff4c_0           conda-forge/linux-64                    841 KB
  + bzip2                    1.0.8  h7f98852_4           conda-forge/linux-64                    Cached
  + c-ares                  1.17.2  h7f98852_0           conda-forge/linux-64                    Cached
  + ca-certificates      2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + hdf5                    1.12.1  nompi_h2750804_100   conda-forge/linux-64                      4 MB
  + krb5                    1.19.2  hcc1bbae_0           conda-forge/linux-64                    Cached
  + ld_impl_linux-64        2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas                  3.9.0  11_linux64_openblas  conda-forge/linux-64                     12 KB
  + libcblas                 3.9.0  11_linux64_openblas  conda-forge/linux-64                     11 KB
  + libcurl                 7.78.0  h2574ce0_0           conda-forge/linux-64                    Cached
  + libdeflate                 1.7  h7f98852_5           conda-forge/linux-64                     67 KB
  + libedit           3.1.20191231  he28a2e2_2           conda-forge/linux-64                    Cached
  + libev                     4.33  h516909a_1           conda-forge/linux-64                    Cached
  + libffi                     3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng               11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng          11.1.0  h69a702a_8           conda-forge/linux-64                     19 KB
  + libgfortran5            11.1.0  h6c583b3_8           conda-forge/linux-64                      2 MB
  + libgomp                 11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack                3.9.0  11_linux64_openblas  conda-forge/linux-64                     11 KB
  + libnghttp2              1.43.0  h812cca2_0           conda-forge/linux-64                    Cached
  + libopenblas             0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                      9 MB
  + libssh2                 1.10.0  ha56f1ee_0           conda-forge/linux-64                    Cached
  + libstdcxx-ng            11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + lzo                       2.10  h516909a_1000        conda-forge/linux-64                    Cached
  + mock                     4.0.3  py39hf3d152e_1       conda-forge/linux-64                     51 KB
  + ncurses                    6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + numexpr                  2.7.3  py39hde0f152_0       conda-forge/linux-64                    201 KB
  + numpy                   1.21.2  py39hdbf815f_0       conda-forge/linux-64                      6 MB
  + openssl                 1.1.1k  h7f98852_1           conda-forge/linux-64                    Cached
  + pip                     21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + pysam                 0.16.0.1  py39h051187c_3       bioconda/linux-64                         3 MB
  + pysamstats               1.1.2  py39hd1f1204_8       /home/vsts/conda/conda-bld/linux-64     287 KB
  + pytables                 3.6.1  py39h2669a42_4       conda-forge/linux-64                      2 MB
  + python                   3.9.6  h49503c6_1_cpython   conda-forge/linux-64                    Cached
  + python_abi                 3.9  2_cp39               conda-forge/linux-64                    Cached
  + readline                   8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + setuptools              57.4.0  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + six                     1.16.0  pyh6c4a22f_0         conda-forge/noarch                      Cached
  + sqlite                  3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tk                      8.6.11  h21135ba_0           conda-forge/linux-64                    Cached
  + tzdata                   2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                   0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                       5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                    1.2.11  h516909a_1010        conda-forge/linux-64                    Cached

  Summary:

  Install: 46 packages

  Total download: 26 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: pysamstats-1.1.2-py39hd1f1204_8.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/pysamstats_1630488768112/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    blosc:            1.21.0-h9c3ff4c_0          conda-forge
    bzip2:            1.0.8-h7f98852_4           conda-forge
    c-ares:           1.17.2-h7f98852_0          conda-forge
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    hdf5:             1.12.1-nompi_h2750804_100  conda-forge
    krb5:             1.19.2-hcc1bbae_0          conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libcurl:          7.78.0-h2574ce0_0          conda-forge
    libdeflate:       1.7-h7f98852_5             conda-forge
    libedit:          3.1.20191231-he28a2e2_2    conda-forge
    libev:            4.33-h516909a_1            conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libnghttp2:       1.43.0-h812cca2_0          conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libssh2:          1.10.0-ha56f1ee_0          conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    lzo:              2.10-h516909a_1000         conda-forge
    mock:             4.0.3-py39hf3d152e_1       conda-forge
    ncurses:          6.2-h58526e2_4             conda-forge
    numexpr:          2.7.3-py39hde0f152_0       conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    openssl:          1.1.1k-h7f98852_1          conda-forge
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    pysam:            0.16.0.1-py39h051187c_3    bioconda   
    pysamstats:       1.1.2-py39hd1f1204_8       local      
    pytables:         3.6.1-py39h2669a42_4       conda-forge
    python:           3.9.6-h49503c6_1_cpython   conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    readline:         8.1-h46c0cb4_0             conda-forge
    setuptools:       57.4.0-py39hf3d152e_0      conda-forge
    six:              1.16.0-pyh6c4a22f_0        conda-forge
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    tk:               8.6.11-h21135ba_0          conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/pysamstats_1630488768112/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p
export SRC_DIR=/home/vsts/conda/conda-bld/pysamstats_1630488768112/test_tmp
import: 'pysamstats'
import: 'pysamstats.opt'
import: 'pysamstats'
import: 'pysamstats.opt'
Usage: pysamstats [options] FILE

Calculate statistics against genome positions based on sequence alignments
from a SAM or BAM file and print them to stdout.

Options:
  -h, --help            show this help message and exit
  -t TYPE, --type=TYPE  Type of statistics to print, one of: alignment_binned,
                        baseq, baseq_ext, baseq_ext_strand, baseq_strand,
                        coverage, coverage_binned, coverage_ext,
                        coverage_ext_binned, coverage_ext_strand, coverage_gc,
                        coverage_strand, mapq, mapq_binned, mapq_strand, tlen,
                        tlen_binned, tlen_strand, variation, variation_strand.
  -c CHROMOSOME, --chromosome=CHROMOSOME
                        Chromosome name.
  -s START, --start=START
                        Start position (1-based).
  -e END, --end=END     End position (1-based).
  -z, --zero-based      Use zero-based coordinates (default is false, i.e.,
                        use one-based coords).
  -u, --truncate        Truncate pileup-based stats so no records are emitted
                        outside the specified range.
  -S STEPPER, --stepper=STEPPER
                        Stepper to provide to underlying pysam call. Options
                        are:"all" (default): all reads are returned, except
                        where flags BAM_FUNMAP, BAM_FSECONDARY, BAM_FQCFAIL,
                        BAM_FDUP set; "nofilter" applies no filter to returned
                        reads; "samtools": filter & read processing as in
                        _csamtools_ pileup. This requires a fasta file. For
                        complete details see the pysam documentation.
  -d, --pad             Pad pileup-based stats so a record is emitted for
                        every position (default is only covered positions).
  -D MAX_DEPTH, --max-depth=MAX_DEPTH
                        Maximum read depth permitted in pileup-based
                        statistics. The default limit is 8000.
  -f FASTA, --fasta=FASTA
                        Reference sequence file, only required for some
                        statistics.
  -o, --omit-header     Omit header row from output.
  -p N, --progress=N    Report progress every N rows.
  --window-size=N       Size of window for binned statistics (default is 300).
  --window-offset=N     Window offset to use for deciding which genome
                        position to report binned statistics against. The
                        default is 150, i.e., the middle of 300bp window.
  --format=FORMAT       Output format, one of {tsv, csv, hdf5} (defaults to
                        tsv). N.B., hdf5 requires PyTables to be installed.
  --output=OUTPUT       Path to output file. If not provided, write to stdout.
  --fields=FIELDS       Comma-separated list of fields to output (defaults to
                        all fields).
  --hdf5-group=HDF5_GROUP
                        Name of HDF5 group to write to (defaults to the root
                        group).
  --hdf5-dataset=HDF5_DATASET
                        Name of HDF5 dataset to create (defaults to "data").
  --hdf5-complib=HDF5_COMPLIB
                        HDF5 compression library (defaults to zlib).
  --hdf5-complevel=HDF5_COMPLEVEL
                        HDF5 compression level (defaults to 5).
  --hdf5-chunksize=HDF5_CHUNKSIZE
                        Size of chunks in number of bytes (defaults to 2**20).
  --min-mapq=MIN_MAPQ   Only reads with mapping quality equal to or greater
                        than this value will be counted (0 by default).
  --min-baseq=MIN_BASEQ
                        Only reads with base quality equal to or greater than
                        this value will be counted (0 by default). Only
                        applies to pileup-based statistics.
  --no-dup              Don't count reads flagged as duplicate.
  --no-del              Don't count reads aligned with a deletion at the given
                        position. Only applies to pileup-based statistics.

Pileup-based statistics types (each row has statistics over reads in a pileup column):

    * coverage            - Number of reads aligned to each genome position
                            (total and properly paired).
    * coverage_strand     - As coverage but with forward/reverse strand counts.
    * coverage_ext        - Various additional coverage metrics, including
                            coverage for reads not properly paired (mate
                            unmapped, mate on other chromosome, ...).
    * coverage_ext_strand - As coverage_ext but with forward/reverse strand counts.
    * coverage_gc         - As coverage but also includes a column for %GC.
    * variation           - Numbers of matches, mismatches, deletions,
                            insertions, etc.
    * variation_strand    - As variation but with forward/reverse strand counts.
    * tlen                - Insert size statistics.
    * tlen_strand         - As tlen but with statistics by forward/reverse strand.
    * mapq                - Mapping quality statistics.
    * mapq_strand         - As mapq but with statistics by forward/reverse strand.
    * baseq               - Base quality statistics.
    * baseq_strand        - As baseq but with statistics by forward/reverse strand.
    * baseq_ext           - Extended base quality statistics, including qualities
                            of bases matching and mismatching reference.
    * baseq_ext_strand    - As baseq_ext but with statistics by forward/reverse strand.

Binned statistics types (each row has statistics over reads aligned starting within a genome window):

    * coverage_binned     - As coverage but binned.
    * coverage_ext_binned - As coverage_ext but binned.
    * mapq_binned         - Similar to mapq but binned.
    * alignment_binned    - Aggregated counts from cigar strings.
    * tlen_binned         - As tlen but binned.

Examples:

    pysamstats --type coverage example.bam > example.coverage.txt
    pysamstats --type coverage --chromosome Pf3D7_v3_01 --start 100000 --end 200000 example.bam > example.coverage.txt

Version: 1.1.2 (pysam 0.16.0.1)


Resource usage statistics from testing pysamstats:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 20B
   Time elapsed: 0:00:02.1


TEST END: pysamstats-1.1.2-py39hd1f1204_8.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


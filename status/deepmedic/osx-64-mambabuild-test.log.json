Updating build index: /Users/runner/conda/conda-bld

TEST START: deepmedic-0.6.1-py_1.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmptuoiefsy/info/recipe/conda_build_config.yaml
  Package                    Version  Build                   Channel                                    Size
───────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + bz2file                     0.98  py_0                    conda-forge/noarch                         9 KB
  + c-ares                    1.17.2  h0d85af4_0              conda-forge/osx-64                       Cached
  + ca-certificates        2021.5.30  h033912b_0              conda-forge/osx-64                       Cached
  + cctools                  949.0.1  h22b1bf0_0              conda-forge/osx-64                        16 KB
  + cctools_osx-64           949.0.1  h5ba7a2e_0              conda-forge/osx-64                         2 MB
  + certifi               2019.11.28  py27h8c360ce_1          conda-forge/osx-64                       149 KB
  + clang                      9.0.1  default_ha9b4ba2_1      conda-forge/osx-64                       190 KB
  + clang-9                    9.0.1  default_heda16ac_1      conda-forge/osx-64                       606 KB
  + clang_osx-64               9.0.1  h05bbb7f_2              conda-forge/osx-64                        15 KB
  + clangxx                    9.0.1  default_he082bbe_1      conda-forge/osx-64                       190 KB
  + clangxx_osx-64             9.0.1  h05bbb7f_2              conda-forge/osx-64                        14 KB
  + compiler-rt                9.0.1  h6a512c6_3              conda-forge/osx-64                        66 KB
  + compiler-rt_osx-64         9.0.1  h99342c6_3              conda-forge/noarch                         3 MB
  + deepmedic                  0.6.1  py_1                    /Users/runner/conda/conda-bld/osx-64     106 KB
  + h5py                      2.10.0  nompi_py27h106b333_102  conda-forge/osx-64                       996 KB
  + hdf5                      1.10.5  nompi_h34ad4e8_1111     conda-forge/osx-64                         3 MB
  + krb5                      1.19.2  hcfbf3a7_0              conda-forge/osx-64                       Cached
  + ld64                         530  0                       conda-forge/osx-64                        14 KB
  + ld64_osx-64                  530  h3c32e8a_0              conda-forge/osx-64                         1 MB
  + libblas                    3.9.0  8_openblas              conda-forge/osx-64                        11 KB
  + libcblas                   3.9.0  8_openblas              conda-forge/osx-64                        11 KB
  + libclang-cpp9              9.0.1  default_heda16ac_1      conda-forge/osx-64                        11 MB
  + libcurl                   7.78.0  hf45b732_0              conda-forge/osx-64                       Cached
  + libcxx                    12.0.1  habf9029_0              conda-forge/osx-64                       Cached
  + libedit             3.1.20191231  h0678c8f_2              conda-forge/osx-64                       Cached
  + libev                       4.33  haf1e3a3_1              conda-forge/osx-64                       Cached
  + libffi                     3.2.1  hb1e8313_1007           conda-forge/osx-64                        42 KB
  + libgfortran                4.0.0  7_5_0_h1a10cd1_23       conda-forge/osx-64                        19 KB
  + libgfortran4               7.5.0  h1a10cd1_23             conda-forge/osx-64                         1 MB
  + libgpuarray                0.7.6  h0d85af4_1003           conda-forge/osx-64                       191 KB
  + liblapack                  3.9.0  8_openblas              conda-forge/osx-64                        11 KB
  + libllvm9                   9.0.1  h223d4b2_3              conda-forge/osx-64                        19 MB
  + libnghttp2                1.43.0  h07e645a_0              conda-forge/osx-64                       Cached
  + libopenblas               0.3.12  openmp_h63d9170_1       conda-forge/osx-64                         9 MB
  + libssh2                   1.10.0  h52ee1ee_0              conda-forge/osx-64                       Cached
  + linecache2                 1.0.0  py27_0                  conda-forge/osx-64                        22 KB
  + llvm-openmp               12.0.1  hda6cdc1_1              conda-forge/osx-64                       Cached
  + llvm-tools                 9.0.1  h223d4b2_3              conda-forge/osx-64                         4 MB
  + mako                       1.1.5  pyhd8ed1ab_0            conda-forge/noarch                        58 KB
  + markupsafe                 1.1.1  py27h89ed719_1          conda-forge/osx-64                        24 KB
  + ncurses                      6.2  h2e338ed_4              conda-forge/osx-64                       Cached
  + nibabel                    2.5.1  py_0                    conda-forge/noarch                         3 MB
  + numpy                     1.16.5  py27hde6bac1_0          conda-forge/osx-64                         4 MB
  + openssl                   1.1.1k  h0d85af4_1              conda-forge/osx-64                       Cached
  + pip                       20.1.1  pyh9f0ad1d_0            conda-forge/noarch                         1 MB
  + pp                         1.6.5  py27_1                  bioconda/osx-64                           30 KB
  + pydicom                    2.2.1  pyh6c4a22f_0            conda-forge/noarch                         1 MB
  + pygpu                      0.7.6  py27h3b54f70_1000       conda-forge/osx-64                       624 KB
  + python                    2.7.15  h8e446fc_1011_cpython   conda-forge/osx-64                        12 MB
  + python_abi                   2.7  1_cp27m                 conda-forge/osx-64                         4 KB
  + readline                     8.1  h05e3726_0              conda-forge/osx-64                       Cached
  + scipy                      1.2.1  py27h7e0e109_2          conda-forge/osx-64                        18 MB
  + setuptools                44.0.0  py27_0                  conda-forge/osx-64                       649 KB
  + six                       1.16.0  pyh6c4a22f_0            conda-forge/noarch                       Cached
  + sqlite                    3.36.0  h23a322b_0              conda-forge/osx-64                       Cached
  + tapi                   1000.10.8  h879752b_4              conda-forge/osx-64                         5 MB
  + theano                     1.0.4  py27h4a8c4bd_1001       conda-forge/osx-64                         4 MB
  + tk                        8.6.11  h5dbffcc_1              conda-forge/osx-64                       Cached
  + traceback2                 1.4.0  py27_0                  conda-forge/osx-64                        28 KB
  + unittest2                  1.1.0  py_0                    conda-forge/noarch                        68 KB
  + wheel                     0.37.0  pyhd8ed1ab_1            conda-forge/noarch                       Cached
  + zlib                      1.2.11  h7795811_1010           conda-forge/osx-64                       Cached

  Summary:

  Install: 62 packages

  Total download: 105 MB

───────────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/deepmedic_1630662437834/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    bz2file:            0.98-py_0                     conda-forge
    c-ares:             1.17.2-h0d85af4_0             conda-forge
    ca-certificates:    2021.5.30-h033912b_0          conda-forge
    cctools:            949.0.1-h22b1bf0_0            conda-forge
    cctools_osx-64:     949.0.1-h5ba7a2e_0            conda-forge
    certifi:            2019.11.28-py27h8c360ce_1     conda-forge
    clang:              9.0.1-default_ha9b4ba2_1      conda-forge
    clang-9:            9.0.1-default_heda16ac_1      conda-forge
    clang_osx-64:       9.0.1-h05bbb7f_2              conda-forge
    clangxx:            9.0.1-default_he082bbe_1      conda-forge
    clangxx_osx-64:     9.0.1-h05bbb7f_2              conda-forge
    compiler-rt:        9.0.1-h6a512c6_3              conda-forge
    compiler-rt_osx-64: 9.0.1-h99342c6_3              conda-forge
    deepmedic:          0.6.1-py_1                    local      
    h5py:               2.10.0-nompi_py27h106b333_102 conda-forge
    hdf5:               1.10.5-nompi_h34ad4e8_1111    conda-forge
    krb5:               1.19.2-hcfbf3a7_0             conda-forge
    ld64:               530-0                         conda-forge
    ld64_osx-64:        530-h3c32e8a_0                conda-forge
    libblas:            3.9.0-8_openblas              conda-forge
    libcblas:           3.9.0-8_openblas              conda-forge
    libclang-cpp9:      9.0.1-default_heda16ac_1      conda-forge
    libcurl:            7.78.0-hf45b732_0             conda-forge
    libcxx:             12.0.1-habf9029_0             conda-forge
    libedit:            3.1.20191231-h0678c8f_2       conda-forge
    libev:              4.33-haf1e3a3_1               conda-forge
    libffi:             3.2.1-hb1e8313_1007           conda-forge
    libgfortran:        4.0.0-7_5_0_h1a10cd1_23       conda-forge
    libgfortran4:       7.5.0-h1a10cd1_23             conda-forge
    libgpuarray:        0.7.6-h0d85af4_1003           conda-forge
    liblapack:          3.9.0-8_openblas              conda-forge
    libllvm9:           9.0.1-h223d4b2_3              conda-forge
    libnghttp2:         1.43.0-h07e645a_0             conda-forge
    libopenblas:        0.3.12-openmp_h63d9170_1      conda-forge
    libssh2:            1.10.0-h52ee1ee_0             conda-forge
    linecache2:         1.0.0-py27_0                  conda-forge
    llvm-openmp:        12.0.1-hda6cdc1_1             conda-forge
    llvm-tools:         9.0.1-h223d4b2_3              conda-forge
    mako:               1.1.5-pyhd8ed1ab_0            conda-forge
    markupsafe:         1.1.1-py27h89ed719_1          conda-forge
    ncurses:            6.2-h2e338ed_4                conda-forge
    nibabel:            2.5.1-py_0                    conda-forge
    numpy:              1.16.5-py27hde6bac1_0         conda-forge
    openssl:            1.1.1k-h0d85af4_1             conda-forge
    pip:                20.1.1-pyh9f0ad1d_0           conda-forge
    pp:                 1.6.5-py27_1                  bioconda   
    pydicom:            2.2.1-pyh6c4a22f_0            conda-forge
    pygpu:              0.7.6-py27h3b54f70_1000       conda-forge
    python:             2.7.15-h8e446fc_1011_cpython  conda-forge
    python_abi:         2.7-1_cp27m                   conda-forge
    readline:           8.1-h05e3726_0                conda-forge
    scipy:              1.2.1-py27h7e0e109_2          conda-forge
    setuptools:         44.0.0-py27_0                 conda-forge
    six:                1.16.0-pyh6c4a22f_0           conda-forge
    sqlite:             3.36.0-h23a322b_0             conda-forge
    tapi:               1000.10.8-h879752b_4          conda-forge
    theano:             1.0.4-py27h4a8c4bd_1001       conda-forge
    tk:                 8.6.11-h5dbffcc_1             conda-forge
    traceback2:         1.4.0-py27_0                  conda-forge
    unittest2:          1.1.0-py_0                    conda-forge
    wheel:              0.37.0-pyhd8ed1ab_1           conda-forge
    zlib:               1.2.11-h7795811_1010          conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/deepmedic_1630662437834/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/Users/runner/conda/conda-bld/deepmedic_1630662437834/test_tmp
INFO: activate_clang_osx-64.sh made the following environmental changes:
+AR=$PREFIX/bin/x86_64-apple-darwin13.4.0-ar
+AS=$PREFIX/bin/x86_64-apple-darwin13.4.0-as
+CC=x86_64-apple-darwin13.4.0-clang
+CFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/deepmedic-0.6.1 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+CHECKSYMS=$PREFIX/bin/x86_64-apple-darwin13.4.0-checksyms
+CLANG=$PREFIX/bin/x86_64-apple-darwin13.4.0-clang
+CMAKE_PREFIX_PATH=:$PREFIX
+CONDA_BUILD_SYSROOT=/Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk
+CPPFLAGS=-D_FORTIFY_SOURCE=2 -mmacosx-version-min=10.9 -isystem $PREFIX/include
+DEBUG_CFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -Og -g -Wall -Wextra -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/deepmedic-0.6.1 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+HOST=x86_64-apple-darwin13.4.0
+INDR=$PREFIX/bin/x86_64-apple-darwin13.4.0-indr
+INSTALL_NAME_TOOL=$PREFIX/bin/x86_64-apple-darwin13.4.0-install_name_tool
+LD=$PREFIX/bin/x86_64-apple-darwin13.4.0-ld
+LDFLAGS=-Wl,-pie -Wl,-headerpad_max_install_names -Wl,-dead_strip_dylibs -Wl,-rpath,$PREFIX/lib -L$PREFIX/lib
+LDFLAGS_LD=-pie -headerpad_max_install_names -dead_strip_dylibs -rpath $PREFIX/lib -L$PREFIX/lib
+LIBTOOL=$PREFIX/bin/x86_64-apple-darwin13.4.0-libtool
+LIPO=$PREFIX/bin/x86_64-apple-darwin13.4.0-lipo
+NM=$PREFIX/bin/x86_64-apple-darwin13.4.0-nm
+NMEDIT=$PREFIX/bin/x86_64-apple-darwin13.4.0-nmedit
+OTOOL=$PREFIX/bin/x86_64-apple-darwin13.4.0-otool
+PAGESTUFF=$PREFIX/bin/x86_64-apple-darwin13.4.0-pagestuff
+RANLIB=$PREFIX/bin/x86_64-apple-darwin13.4.0-ranlib
+REDO_PREBINDING=$PREFIX/bin/x86_64-apple-darwin13.4.0-redo_prebinding
+SEGEDIT=$PREFIX/bin/x86_64-apple-darwin13.4.0-segedit
+SEG_ADDR_TABLE=$PREFIX/bin/x86_64-apple-darwin13.4.0-seg_addr_table
+SEG_HACK=$PREFIX/bin/x86_64-apple-darwin13.4.0-seg_hack
+SIZE=$PREFIX/bin/x86_64-apple-darwin13.4.0-size
+STRINGS=$PREFIX/bin/x86_64-apple-darwin13.4.0-strings
+STRIP=$PREFIX/bin/x86_64-apple-darwin13.4.0-strip
+_CONDA_PYTHON_SYSCONFIGDATA_NAME=_sysconfigdata_x86_64_apple_darwin13_4_0
INFO: activate_clangxx_osx-64.sh made the following environmental changes:
+CLANGXX=$PREFIX/bin/x86_64-apple-darwin13.4.0-clang++
+CXX=x86_64-apple-darwin13.4.0-clang++
+CXXFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/deepmedic-0.6.1 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
+DEBUG_CXXFLAGS=-march=core2 -mtune=haswell -mssse3 -ftree-vectorize -fPIC -fPIE -fstack-protector-strong -O2 -pipe -stdlib=libc++ -fvisibility-inlines-hidden -std=c++14 -fmessage-length=0 -Og -g -Wall -Wextra -isystem $PREFIX/include -fdebug-prefix-map=$SRC_DIR=/usr/local/src/conda/deepmedic-0.6.1 -fdebug-prefix-map=$PREFIX=/usr/local/src/conda-prefix
usage: DeepMedic [-h] [-newModel MODEL_CONF] [-train TRAINING_CONF]
                 [-test TESTING_CONF] [-model SAVED_MODEL] [-dev DEVICE]
                 [-pretrained PRETRAINED_MODEL]
                 [-layers LAYERS_TO_TRANSFER [LAYERS_TO_TRANSFER ...]]
                 [-resetOptimizer]

This software allows creation and supervised training of 3D, multi-scale CNN models for segmentation of structures in biomedical NIFTI volumes.
The project is hosted at: https://github.com/Kamnitsask/deepmedic 
See the documentation for details on its use.
This software accompanies the research presented in:
Kamnitsas et al, "Efficient Multi-Scale 3D CNN with Fully Connected CRF for Accurate Brain Lesion Segmentation", Biomedical Image Analysis, 2016.
We hope our work aids you in your endeavours.
For questions and feedback contact: konstantinos.kamnitsas12@ic.ac.uk

optional arguments:
  -h, --help            show this help message and exit
  -newModel MODEL_CONF  Create a new CNN model with model parameters at given config file [MODEL_CONF].
  -train TRAINING_CONF  Train a CNN model with training parameters at given config file [TRAINING_CONF].
                        This option can follow a [-newModel MODEL_CONF] option, to create a new model and start training it immediately.
                        Otherwise, existing model can be specified in the training-config file or by the additional option [-model].
  -test TESTING_CONF    Test with an existing CNN model. The testing session's parameters should be given in config file [TESTING_CONF].
                        Existing model can be specified in the given training-config file or by the additional option [-model].
                        This option cannot be used in combination with [-newModel] or [-train].
  -model SAVED_MODEL    The path to a saved existing cnn model, to train or test with.
                        This option can follow a [-train] or [-test] option. Not in combination with a [-newModel].
                        If given, this option will override any "model" parameters given in the train or testing configuration file.
  -dev DEVICE           Specify the device to run the process on. Values: [cpu] or [cuda] (default = cpu).
                        In the case of multiple GPUs, specify a particular GPU device with a number, in the format: cpu cuda2.
                        NOTE#1: For GPU processing, CUDA libraries must be first added in your environment's PATH and LD_LIBRARY_PATH. See accompanying documentation.NOTE#2: If you get problems using the GPU with [cpu cuda], try using the old Theano backend with [cpu cuda] or disaable cuDNN. See docs Sec 1.3 and 2.2.
  -pretrained PRETRAINED_MODEL
                        Use to transfer the weights from a previously trained model to a new model.
                        This option must follow a [-newModel] option.
                        Usage: ./deepMedicRun -newModel /path/to/model/config -pretrained /path/to/pretrained/model 
                        NOTE: By default, parameters are transfered to all layers except the classification layer. Use option [-layers] to manually specify layers to pretrain.
  -layers LAYERS_TO_TRANSFER [LAYERS_TO_TRANSFER ...]
                        Use only after a [-pretrained] option.
                        Specify to which layers of the new model parameters should be transferred to.
                        First layer is 1. Classification layer of original DeepMedic is 11. Same layers from each parallel-pathway will be transfered.
                        Usage: ./deepMedicRun -newModel /path/to/model/config -pretrained /path/to/pretrained/model -layers 1 2 3 ...
  -resetOptimizer       Use optionally with a [-train] command. Does not take an argument.
                        Usage: ./deepMedicRun -train /path/to/train/config -resetOptimizer ...etc...
                        Resets the model's optimization state before starting the training session (eg number of epochs already trained, current learning rate etc).
                        IMPORTANT: Trainable parameters are NOT reinitialized! 
                        Useful to begin a secondary training session with new learning-rate schedule, in order to fine-tune a previously trained model (Doc., Sec. 3.2)

Resource usage statistics from testing deepmedic:
   Process count: 2
   CPU time: Sys=0:00:00.0, User=0:00:00.0
   Memory: 10.2M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: deepmedic-0.6.1-py_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


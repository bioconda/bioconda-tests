  Package          Version  Build        Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge  conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu        conda-forge/linux-64                    Cached
  + cortex_con       0.04c  h470a237_1   /home/vsts/conda/conda-bld/linux-64      77 KB
  + libgcc-ng       11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached

  Summary:

  Install: 5 packages

  Total download: 77 KB

─────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: cortex_con-0.04c-h470a237_1.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/cortex_con_1630925291941/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge   conda-forge
    _openmp_mutex: 4.5-1_gnu         conda-forge
    cortex_con:    0.04c-h470a237_1  local      
    libgcc-ng:     11.1.0-hc902ee8_8 conda-forge
    libgomp:       11.1.0-hc902ee8_8 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/cortex_con_1630925291941/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p
export SRC_DIR=/home/vsts/conda/conda-bld/cortex_con_1630925291941/test_tmp

Cortex Con

Command: cortex_con_31 -h 
Unit size: 16

usage: cortex_con [-h] [--input file_of_files] [--mem_height 14] [--dump_binary bin_output] [--input_format fastq|fasta|binary] [--output_contigs contigs.fa] 
by M. Caccamo (mario.caccamo@bbsrc.ac.uk) (primary contact for cortex_con), and Z. Iqbal (zam@well.ox.ac.uk)

   [-h | --help] = This help screen.
   [--input FILENAME] = File of filenames to be processed (start and end read is optional, format <filename>  <start read index>  <end read index> ).
   [--kmer_size INT] = Kmer size (default 21), it has to be an odd number.
   [--mem_width INT] = Size of hash table buckets (default 100).
   [--mem_height INT] = Number of buckets in hash table in bits (default 10, this is a power of 2, ie 2^mem_height).
   [--tip_clip INT] = Clips the tips in the graph, the argument defines the max length for the tips.
   [--quality_score_threshold INT] = Filter for quality scores in the input file, any k-mer wiht a base wiht quality in the threshold or smaller is not considered (default 0).
   [--remove_low_coverage_kmers INT] = Filter for kmers with coverage in the threshold or smaller.
   [--dump_binary FILENAME] = Dump binary for graph in file (after applying all specified actions on graph).
   [--ouput_supernodes FILENAME] = Fasta file with all the supernodes (after applying all specified actions on graph).
   [--ouput_contigs FILENAME] = Fasta file with all the contigs (after applying all specified actions on graph).
   [--input_format FORMAT] = File format for input (binary | fasta | fastq | hash ).
   [--output_coverages] = Print coverages for contigs/supernodes in a different file with _cov suffix.
   [--remove_seq_errors] = remove sequence of kmers induced by errors. Equivalent to --remove_low_coverage_kmers 1
   [--remove_bubbles] = Removes the bubbles in the graph.
   [--max_read_len] = Maximum read length over all input files.
   [--quality_score_offset] = Fastq quality offset. Default 33. Use 63 for illumina.
   [--quality_score_threshold ] = The minimiun phred value for a base to be considered in an assembly.
   [--hash_output_file ] = Dumps the whole graph into a file. Read wiht the input_format hash. The file stores the information required to restore the hash table, hence mem_height and mem_width don't have any effect.

Resource usage statistics from testing cortex_con:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: cortex_con-0.04c-h470a237_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package              Version  Build               Channel                                    Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + boost-cpp           1.70.0  hef959ae_3          conda-forge/osx-64                        19 MB
  + bzip2                1.0.8  h0d85af4_4          conda-forge/osx-64                       Cached
  + ca-certificates  2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + icu                   67.1  hb1e8313_0          conda-forge/osx-64                        13 MB
  + intarna              3.2.0  h547e0c7_0          /Users/runner/conda/conda-bld/osx-64       2 MB
  + libcxx              12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libffi                 3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + llvm-openmp         12.0.1  hda6cdc1_1          conda-forge/osx-64                       Cached
  + lz4-c                1.9.3  he49afe7_1          conda-forge/osx-64                       Cached
  + ncurses                6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + openssl             1.1.1k  h0d85af4_1          conda-forge/osx-64                       Cached
  + pip                 21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + python               3.9.6  hd187cdc_1_cpython  conda-forge/osx-64                       Cached
  + python_abi             3.9  2_cp39              conda-forge/osx-64                       Cached
  + readline               8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + setuptools          57.4.0  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + sqlite              3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + tk                  8.6.11  hd798d34_0          conda-forge/osx-64                       Cached
  + tzdata               2021a  he74cb21_1          conda-forge/noarch                       Cached
  + viennarna           2.4.18  py39hdeec44c_0      bioconda/osx-64                           22 MB
  + wheel               0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                   5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + zlib                1.2.11  h7795811_1010       conda-forge/osx-64                       Cached
  + zstd                 1.4.9  h582d3a0_0          conda-forge/osx-64                       460 KB

  Summary:

  Install: 24 packages

  Total download: 55 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: intarna-3.2.0-h547e0c7_0.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/intarna_1630467537894/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p


The following NEW packages will be INSTALLED:

    boost-cpp:       1.70.0-hef959ae_3        conda-forge
    bzip2:           1.0.8-h0d85af4_4         conda-forge
    ca-certificates: 2021.5.30-h033912b_0     conda-forge
    icu:             67.1-hb1e8313_0          conda-forge
    intarna:         3.2.0-h547e0c7_0         local      
    libcxx:          12.0.1-habf9029_0        conda-forge
    libffi:          3.3-h046ec9c_2           conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1        conda-forge
    lz4-c:           1.9.3-he49afe7_1         conda-forge
    ncurses:         6.2-h2e338ed_4           conda-forge
    openssl:         1.1.1k-h0d85af4_1        conda-forge
    pip:             21.2.4-pyhd8ed1ab_0      conda-forge
    python:          3.9.6-hd187cdc_1_cpython conda-forge
    python_abi:      3.9-2_cp39               conda-forge
    readline:        8.1-h05e3726_0           conda-forge
    setuptools:      57.4.0-py39h6e9494a_0    conda-forge
    sqlite:          3.36.0-h23a322b_0        conda-forge
    tk:              8.6.11-hd798d34_0        conda-forge
    tzdata:          2021a-he74cb21_1         conda-forge
    viennarna:       2.4.18-py39hdeec44c_0    bioconda   
    wheel:           0.37.0-pyhd8ed1ab_1      conda-forge
    xz:              5.2.5-haf1e3a3_1         conda-forge
    zlib:            1.2.11-h7795811_1010     conda-forge
    zstd:            1.4.9-h582d3a0_0         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/intarna_1630467537894/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p
export SRC_DIR=/Users/runner/conda/conda-bld/intarna_1630467537894/test_tmp

IntaRNA predicts RNA-RNA interactions.

The following basic program arguments are supported:

Query:
  -q [ --query ] arg            either an RNA sequence or the stream/file name 
                                from where to read the query sequences (should 
                                be the shorter sequences to increase 
                                efficiency); use 'STDIN' to read from standard 
                                input stream; sequences have to use IUPAC 
                                nucleotide encoding; output alias is [seq2]

Target:
  -t [ --target ] arg           either an RNA sequence or the stream/file name 
                                from where to read the target sequences (should
                                be the longer sequences to increase 
                                efficiency); use 'STDIN' to read from standard 
                                input stream; sequences have to use IUPAC 
                                nucleotide encoding; output alias is [seq1]

Helix (only if --model=B):
  --helixMinBP arg (=2)         minimal number of base pairs inside a helix 
                                (arg in range [2,4])
  --helixMaxBP arg (=10)        maximal number of base pairs inside a helix 
                                (arg in range [2,20])
  --helixMaxIL arg (=0)         maximal size for each internal loop size in a 
                                helix (arg in range [0,2]).
  --helixMinPu arg (=0)         minimal unpaired probability (per sequence) of 
                                considered helices (arg in range [0,1]).
  --helixMaxE arg (=0)          maximal energy (excluding) a helix may have 
                                (arg in range [-999,999]).
  --helixFullE [=arg(=1)] (=0)  if given (or true), the overall energy of a 
                                helix (including E_init, ED, dangling ends, ..)
                                will be used for helixMaxE checks; otherwise 
                                only loop-terms are considered.

Seed:
  --noSeed [=arg(=1)] (=0)      if given (or true), no seed is enforced within 
                                the predicted interactions
  --seedTQ arg                  comma separated list of explicit seed base pair
                                encoding(s) in the format 
                                startTbpsT&startQbpsQ, e.g. '3|||.|&7||.||', 
                                where 'startT/Q' are the indices of the 5' seed
                                ends in target/query sequence and 'bpsT/Q' the 
                                respective dot-bar base pair encodings. This 
                                disables all other seed constraints and seed 
                                identification.
  --seedBP arg (=7)             number of inter-molecular base pairs within the
                                seed region (arg in range [2,20])

Interaction:
  -m [ --mode ] arg (=H)        prediction mode : 
                                 'H' = heuristic (fast and low memory), 
                                 'M' = exact (slow), 
                                 'S' = seed-only
  --model arg (=X)              interaction model : 
                                 'S' = single-site, minimum-free-energy 
                                interaction (interior loops only), 
                                 'X' = single-site, minimum-free-energy 
                                interaction via seed-extension (interior loops 
                                only), 
                                 'B' = single-site, helix-block-based, 
                                minimum-free-energy interaction (blocks of 
                                stable helices and interior loops only), 
                                 'P' = single-site interaction with minimal 
                                free ensemble energy per site (interior loops 
                                only)
  --acc arg (=C)                accessibility computation :
                                 'N' no accessibility contributions
                                 'C' computation of accessibilities (see --accW
                                and --accL)
  --intLenMax arg (=0)          interaction site : maximal window size to be 
                                considered for interaction (arg in range 
                                [0,99999]; 0 refers to the full sequence 
                                length). If --accW is provided, the smaller 
                                window size of both is used.
  --intLoopMax arg (=10)        interaction site : maximal number of unpaired 
                                bases between neighbored interacting bases to 
                                be considered in interactions (arg in range 
                                [0,30]; 0 enforces stackings only)

Output:
  --out arg (=STDOUT)           output (multi-arg) : provide a file name for 
                                output (will be overwritten) or 'STDOUT/STDERR'
                                to write to the according stream (according to 
                                --outMode).
                                Use one of the following PREFIXES 
                                (colon-separated) to generate ADDITIONAL 
                                output:
                                 'qMinE:' (query) for each position the minimal
                                energy of any interaction covering the position
                                (CSV format)
                                 'qSpotProb:' (query) for each position the 
                                probability that is is covered by an 
                                interaction covering (CSV format)
                                 'qAcc:' (query) ED accessibility values 
                                ('qPu'-like format).
                                 'qPu:' (query) unpaired probabilities values 
                                (RNAplfold format).
                                 'tMinE:' (target) for each position the 
                                minimal energy of any interaction covering the 
                                position (CSV format)
                                 'tSpotProb:' (target) for each position the 
                                probability that is is covered by an 
                                interaction covering (CSV format)
                                 'tAcc:' (target) ED accessibility values 
                                ('tPu'-like format).
                                 'tPu:' (target) unpaired probabilities values 
                                (RNAplfold format).
                                 'pMinE:' (target+query) for each index pair 
                                the minimal energy of any interaction covering 
                                the pair (CSV format)
                                 'spotProb:' (target+query) tracks for a given 
                                set of interaction spots their probability to 
                                be covered by an interaction. If no spots are 
                                provided, probabilities for all index 
                                combinations are computed. Spots are encoded by
                                comma-separated 'idxT&idxQ' pairs 
                                (target-query). For each spot a probability is 
                                provided in concert with the probability that 
                                none of the spots (encoded by '0&0') is covered
                                (CSV format). The spot encoding is followed 
                                colon-separated by the output stream/file name,
                                eg. '--out="spotProb:3&76,59&2:STDERR"'. NOTE: 
                                value has to be quoted due to '&' symbol!
                                For each, provide a file name or STDOUT/STDERR 
                                to write to the respective output stream.
  --outSep arg (=;)             column separator to be used in tabular CSV 
                                output
  --outMode arg (=N)            output mode :
                                 'N' normal output (ASCII char + energy),
                                 'D' detailed output (ASCII char + 
                                energy/position details),
                                 'C' CSV output (see --outCsvCols),
                                 'E' ensemble information
  -n [ --outNumber ] arg (=1)   number of (sub)optimal interactions to report 
                                (arg in range [0,1000])
  --outOverlap arg (=B)         suboptimal output : interactions can overlap 
                                 'N' in none of the sequences, 
                                 'T' in the target only, 
                                 'Q' in the query only, 
                                 'B' in both sequences

General:
  --threads arg (=1)            maximal number of threads to be used for 
                                parallel computation of query-target 
                                combinations. A value of 0 requests all 
                                available CPUs. Note, the number of threads 
                                multiplies the required memory used for 
                                computation! (arg in range [0,3])
  --version                     print version
  --personality arg             IntaRNA personality to be used, which defines 
                                default values, available program arguments and
                                tool behavior
  --parameterFile arg           file from where to read additional command line
                                arguments
  -h [ --help ]                 show the help page for basic parameters
  --fullhelp                    show the extended help page for all available 
                                parameters

Run --fullhelp for the extended list of parameters

You can find more detailed documentation of IntaRNA on 

  https://backofenlab.github.io/IntaRNA/


target
             9     15
             |     |
  5'-CCCCCCCC       GGGGGGG-3'
             GGGGGGG
             +++++++
             CCCCCCC
          3'-       -5'
             |     |
             7     1
query

interaction energy = -10.71 kcal/mol

Resource usage statistics from testing intarna:
   Process count: 2
   CPU time: Sys=0:00:00.0, User=0:00:00.0
   Memory: 10.2M
   Disk usage: 12B
   Time elapsed: 0:00:02.1


TEST END: intarna-3.2.0-h547e0c7_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


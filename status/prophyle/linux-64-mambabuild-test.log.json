  Package                  Version  Build                Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex              0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex              4.5  1_gnu                conda-forge/linux-64                    Cached
  + alsa-lib                 1.2.3  h516909a_0           conda-forge/linux-64                    560 KB
  + bitarray                 2.3.2  py39h3811e60_0       conda-forge/linux-64                    138 KB
  + bzip2                    1.0.8  h7f98852_4           conda-forge/linux-64                    Cached
  + c-ares                  1.17.2  h7f98852_0           conda-forge/linux-64                    Cached
  + ca-certificates      2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + dbus                    1.13.6  h48d8840_2           conda-forge/linux-64                    572 KB
  + ete3                     3.1.2  pyh9f0ad1d_0         conda-forge/noarch                        2 MB
  + expat                    2.4.1  h9c3ff4c_0           conda-forge/linux-64                    182 KB
  + fontconfig              2.13.1  hba837de_1005        conda-forge/linux-64                    Cached
  + freetype                2.10.4  h0708190_1           conda-forge/linux-64                    Cached
  + gettext               0.19.8.1  h0b5b191_1005        conda-forge/linux-64                    Cached
  + glib                    2.68.4  h9c3ff4c_0           conda-forge/linux-64                    447 KB
  + glib-tools              2.68.4  h9c3ff4c_0           conda-forge/linux-64                     86 KB
  + gst-plugins-base        1.18.4  hf529b03_2           conda-forge/linux-64                      3 MB
  + gstreamer               1.18.4  h76c114f_2           conda-forge/linux-64                      2 MB
  + htslib                    1.13  h9093b5e_0           bioconda/linux-64                         2 MB
  + icu                       68.1  h58526e2_0           conda-forge/linux-64                    Cached
  + jpeg                        9d  h36c2ea0_0           conda-forge/linux-64                    Cached
  + krb5                    1.19.2  hcc1bbae_0           conda-forge/linux-64                    Cached
  + ld_impl_linux-64        2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas                  3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcblas                 3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libclang                11.1.0  default_ha53f305_1   conda-forge/linux-64                     19 MB
  + libcurl                 7.78.0  h2574ce0_0           conda-forge/linux-64                    Cached
  + libdeflate                 1.7  h7f98852_5           conda-forge/linux-64                    Cached
  + libedit           3.1.20191231  he28a2e2_2           conda-forge/linux-64                    Cached
  + libev                     4.33  h516909a_1           conda-forge/linux-64                    Cached
  + libevent                2.1.10  hcdb4288_3           conda-forge/linux-64                      1 MB
  + libffi                     3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng               11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng          11.1.0  h69a702a_8           conda-forge/linux-64                    Cached
  + libgfortran5            11.1.0  h6c583b3_8           conda-forge/linux-64                    Cached
  + libglib                 2.68.4  h3e27bee_0           conda-forge/linux-64                    Cached
  + libgomp                 11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libiconv                  1.16  h516909a_0           conda-forge/linux-64                    Cached
  + liblapack                3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libllvm11               11.1.0  hf817b99_2           conda-forge/linux-64                     29 MB
  + libnghttp2              1.43.0  h812cca2_0           conda-forge/linux-64                    Cached
  + libogg                   1.3.4  h7f98852_1           conda-forge/linux-64                    206 KB
  + libopenblas             0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                    Cached
  + libopus                  1.3.1  h7f98852_1           conda-forge/linux-64                    255 KB
  + libpng                  1.6.37  h21135ba_2           conda-forge/linux-64                    Cached
  + libpq                     13.3  hd57d9b9_0           conda-forge/linux-64                      3 MB
  + libssh2                 1.10.0  ha56f1ee_0           conda-forge/linux-64                    Cached
  + libstdcxx-ng            11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + libuuid                 2.32.1  h7f98852_1000        conda-forge/linux-64                    Cached
  + libvorbis                1.3.7  h9c3ff4c_0           conda-forge/linux-64                    280 KB
  + libxcb                    1.13  h7f98852_1003        conda-forge/linux-64                    Cached
  + libxkbcommon             1.0.3  he3ba5ed_0           conda-forge/linux-64                    581 KB
  + libxml2                 2.9.12  h72842e0_0           conda-forge/linux-64                    Cached
  + libxslt                 1.1.33  h15afd5d_2           conda-forge/linux-64                    522 KB
  + lxml                     4.6.3  py39h107f48f_0       conda-forge/linux-64                      2 MB
  + lz4-c                    1.9.3  h9c3ff4c_1           conda-forge/linux-64                    Cached
  + mysql-common            8.0.25  ha770c72_2           conda-forge/linux-64                      2 MB
  + mysql-libs              8.0.25  hfa10184_2           conda-forge/linux-64                      2 MB
  + ncurses                    6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + nspr                      4.30  h9c3ff4c_0           conda-forge/linux-64                    233 KB
  + nss                       3.69  hb5efdd6_0           conda-forge/linux-64                      2 MB
  + numpy                   1.21.2  py39hdbf815f_0       conda-forge/linux-64                      6 MB
  + openssl                 1.1.1k  h7f98852_1           conda-forge/linux-64                    Cached
  + pcre                      8.45  h9c3ff4c_0           conda-forge/linux-64                    Cached
  + pip                     21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + prophyle               0.3.2.0  py39h98c8e45_0       /home/vsts/conda/conda-bld/linux-64       4 MB
  + psutil                   5.8.0  py39h3811e60_1       conda-forge/linux-64                    Cached
  + pthread-stubs              0.4  h36c2ea0_1001        conda-forge/linux-64                    Cached
  + pyqt                    5.12.3  py39hf3d152e_7       conda-forge/linux-64                     21 KB
  + pyqt-impl               5.12.3  py39h0fcd23e_7       conda-forge/linux-64                      6 MB
  + pyqt5-sip              4.19.18  py39he80948d_7       conda-forge/linux-64                    310 KB
  + pyqtchart                 5.12  py39h0fcd23e_7       conda-forge/linux-64                    253 KB
  + pyqtwebengine           5.12.1  py39h0fcd23e_7       conda-forge/linux-64                    174 KB
  + pysam                 0.16.0.1  py39h051187c_3       bioconda/linux-64                         3 MB
  + python                   3.9.7  h49503c6_0_cpython   conda-forge/linux-64                    Cached
  + python_abi                 3.9  2_cp39               conda-forge/linux-64                    Cached
  + qt                      5.12.9  hda022c4_4           conda-forge/linux-64                    100 MB
  + readline                   8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + samtools                  1.13  h8c37831_0           bioconda/linux-64                       397 KB
  + scipy                    1.7.1  py39hee8e79c_0       conda-forge/linux-64                     22 MB
  + setuptools              57.4.0  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + six                     1.16.0  pyh6c4a22f_0         conda-forge/noarch                      Cached
  + sqlite                  3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tk                      8.6.11  h27826a3_1           conda-forge/linux-64                    Cached
  + tzdata                   2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                   0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xorg-kbproto             1.0.7  h7f98852_1002        conda-forge/linux-64                    Cached
  + xorg-libice             1.0.10  h7f98852_0           conda-forge/linux-64                    Cached
  + xorg-libsm               1.2.3  hd9c2040_1000        conda-forge/linux-64                    Cached
  + xorg-libx11              1.7.2  h7f98852_0           conda-forge/linux-64                    Cached
  + xorg-libxau              1.0.9  h7f98852_0           conda-forge/linux-64                    Cached
  + xorg-libxdmcp            1.1.3  h7f98852_0           conda-forge/linux-64                    Cached
  + xorg-libxext             1.3.4  h7f98852_1           conda-forge/linux-64                    Cached
  + xorg-libxrender         0.9.10  h7f98852_1003        conda-forge/linux-64                    Cached
  + xorg-renderproto        0.11.1  h7f98852_1002        conda-forge/linux-64                    Cached
  + xorg-xextproto           7.3.0  h7f98852_1002        conda-forge/linux-64                    Cached
  + xorg-xproto             7.0.31  h7f98852_1007        conda-forge/linux-64                    Cached
  + xz                       5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                    1.2.11  h516909a_1010        conda-forge/linux-64                    Cached
  + zstd                     1.5.0  ha95c52a_0           conda-forge/linux-64                    Cached

  Summary:

  Install: 99 packages

  Total download: 214 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: prophyle-0.3.2.0-py39h98c8e45_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/prophyle_1630642923827/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    alsa-lib:         1.2.3-h516909a_0           conda-forge
    bitarray:         2.3.2-py39h3811e60_0       conda-forge
    bzip2:            1.0.8-h7f98852_4           conda-forge
    c-ares:           1.17.2-h7f98852_0          conda-forge
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    dbus:             1.13.6-h48d8840_2          conda-forge
    ete3:             3.1.2-pyh9f0ad1d_0         conda-forge
    expat:            2.4.1-h9c3ff4c_0           conda-forge
    fontconfig:       2.13.1-hba837de_1005       conda-forge
    freetype:         2.10.4-h0708190_1          conda-forge
    gettext:          0.19.8.1-h0b5b191_1005     conda-forge
    glib:             2.68.4-h9c3ff4c_0          conda-forge
    glib-tools:       2.68.4-h9c3ff4c_0          conda-forge
    gst-plugins-base: 1.18.4-hf529b03_2          conda-forge
    gstreamer:        1.18.4-h76c114f_2          conda-forge
    htslib:           1.13-h9093b5e_0            bioconda   
    icu:              68.1-h58526e2_0            conda-forge
    jpeg:             9d-h36c2ea0_0              conda-forge
    krb5:             1.19.2-hcc1bbae_0          conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libclang:         11.1.0-default_ha53f305_1  conda-forge
    libcurl:          7.78.0-h2574ce0_0          conda-forge
    libdeflate:       1.7-h7f98852_5             conda-forge
    libedit:          3.1.20191231-he28a2e2_2    conda-forge
    libev:            4.33-h516909a_1            conda-forge
    libevent:         2.1.10-hcdb4288_3          conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libglib:          2.68.4-h3e27bee_0          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    libiconv:         1.16-h516909a_0            conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libllvm11:        11.1.0-hf817b99_2          conda-forge
    libnghttp2:       1.43.0-h812cca2_0          conda-forge
    libogg:           1.3.4-h7f98852_1           conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libopus:          1.3.1-h7f98852_1           conda-forge
    libpng:           1.6.37-h21135ba_2          conda-forge
    libpq:            13.3-hd57d9b9_0            conda-forge
    libssh2:          1.10.0-ha56f1ee_0          conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    libuuid:          2.32.1-h7f98852_1000       conda-forge
    libvorbis:        1.3.7-h9c3ff4c_0           conda-forge
    libxcb:           1.13-h7f98852_1003         conda-forge
    libxkbcommon:     1.0.3-he3ba5ed_0           conda-forge
    libxml2:          2.9.12-h72842e0_0          conda-forge
    libxslt:          1.1.33-h15afd5d_2          conda-forge
    lxml:             4.6.3-py39h107f48f_0       conda-forge
    lz4-c:            1.9.3-h9c3ff4c_1           conda-forge
    mysql-common:     8.0.25-ha770c72_2          conda-forge
    mysql-libs:       8.0.25-hfa10184_2          conda-forge
    ncurses:          6.2-h58526e2_4             conda-forge
    nspr:             4.30-h9c3ff4c_0            conda-forge
    nss:              3.69-hb5efdd6_0            conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    openssl:          1.1.1k-h7f98852_1          conda-forge
    pcre:             8.45-h9c3ff4c_0            conda-forge
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    prophyle:         0.3.2.0-py39h98c8e45_0     local      
    psutil:           5.8.0-py39h3811e60_1       conda-forge
    pthread-stubs:    0.4-h36c2ea0_1001          conda-forge
    pyqt:             5.12.3-py39hf3d152e_7      conda-forge
    pyqt-impl:        5.12.3-py39h0fcd23e_7      conda-forge
    pyqt5-sip:        4.19.18-py39he80948d_7     conda-forge
    pyqtchart:        5.12-py39h0fcd23e_7        conda-forge
    pyqtwebengine:    5.12.1-py39h0fcd23e_7      conda-forge
    pysam:            0.16.0.1-py39h051187c_3    bioconda   
    python:           3.9.7-h49503c6_0_cpython   conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    qt:               5.12.9-hda022c4_4          conda-forge
    readline:         8.1-h46c0cb4_0             conda-forge
    samtools:         1.13-h8c37831_0            bioconda   
    scipy:            1.7.1-py39hee8e79c_0       conda-forge
    setuptools:       57.4.0-py39hf3d152e_0      conda-forge
    six:              1.16.0-pyh6c4a22f_0        conda-forge
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    tk:               8.6.11-h27826a3_1          conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xorg-kbproto:     1.0.7-h7f98852_1002        conda-forge
    xorg-libice:      1.0.10-h7f98852_0          conda-forge
    xorg-libsm:       1.2.3-hd9c2040_1000        conda-forge
    xorg-libx11:      1.7.2-h7f98852_0           conda-forge
    xorg-libxau:      1.0.9-h7f98852_0           conda-forge
    xorg-libxdmcp:    1.1.3-h7f98852_0           conda-forge
    xorg-libxext:     1.3.4-h7f98852_1           conda-forge
    xorg-libxrender:  0.9.10-h7f98852_1003       conda-forge
    xorg-renderproto: 0.11.1-h7f98852_1002       conda-forge
    xorg-xextproto:   7.3.0-h7f98852_1002        conda-forge
    xorg-xproto:      7.0.31-h7f98852_1007       conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge
    zstd:             1.5.0-ha95c52a_0           conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/prophyle_1630642923827/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla
export SRC_DIR=/home/vsts/conda/conda-bld/prophyle_1630642923827/test_tmp
import: 'prophyle'
import: 'prophyle'
usage: prophyle [-h] [-v]  ...

Program: prophyle (phylogeny-based metagenomic classification)
Version: 0.3.2.0
Authors: Karel Brinda, Kamil Salikhov, Simone Pignotti, Gregory Kucherov
Contact: kbrinda@hsph.harvard.edu

Usage:   prophyle <command> [options]

optional arguments:
  -h, --help     show this help message and exit
  -v, --version  show program's version number and exit

subcommands:
  
    download     download a genomic database
    index        build index
    classify     classify reads
    analyze      analyze results (experimental)
    compress     compress a ProPhyle index
    decompress   decompress a compressed ProPhyle index
    compile      compile auxiliary ProPhyle programs
usage: prophyle download [-h] [-d DIR] [-l STR] [-F] [-c [STR ...]]
                         <library> [<library> ...]

positional arguments:
  <library>     genomic library ['bacteria', 'viruses', 'plasmids', 'hmp',
                'all']

optional arguments:
  -h, --help    show this help message and exit
  -d DIR        directory for the tree and the sequences [~/prophyle]
  -l STR        log file
  -F            rewrite library files if they already exist
  -c [STR ...]  advanced configuration (a JSON dictionary)
usage: prophyle index [-h] [-g DIR] [-j INT] [-k INT] [-l STR] [-s FLOAT] [-F]
                      [-M] [-P] [-S] [-K] [-T] [-A] [-R] [-c [STR ...]]
                      <tree.nw> [<tree.nw> ...] <index.dir>

positional arguments:
  <tree.nw>     phylogenetic tree (in Newick/NHX)
  <index.dir>   index directory (will be created)

optional arguments:
  -h, --help    show this help message and exit
  -g DIR        directory with the library sequences [dir. of the first tree]
  -j INT        number of threads [auto (2)]
  -k INT        k-mer length [31]
  -l STR        log file [<index.dir>/log.txt]
  -s FLOAT      rate of sampling of the tree [no sampling]
  -F            rewrite index files if they already exist
  -M            mask repeats/low complexity regions (using DustMasker)
  -P            do not add prefixes to node names when multiple trees are used
  -S            stop after k-mer propagation (no BWT index construction)
  -K            skip k-LCP construction (then restarted search only)
  -T            keep temporary files from k-mer propagation
  -A            autocomplete tree (names of internal nodes and FASTA paths)
  -R            switch propagation off (only re-assemble leaves)
  -c [STR ...]  advanced configuration (a JSON dictionary)
usage: prophyle classify [-h] [-k INT] [-m {h1,c1,h2,c2}] [-f {kraken,sam}]
                         [-l STR] [-P] [-A] [-L] [-X] [-M] [-C] [-K]
                         [-c [STR ...]]
                         <index.dir> <reads1.fq> [<reads2.fq>]

positional arguments:
  <index.dir>       index directory
  <reads1.fq>       first file with reads in FASTA/FASTQ (- for standard
                    input)
  <reads2.fq>       second file with reads in FASTA/FASTQ

optional arguments:
  -h, --help        show this help message and exit
  -k INT            k-mer length [detect automatically from the index]
  -m {h1,c1,h2,c2}  measure: h1=hit count, c1=coverage, h2=norm.hit count,
                    c2=norm.coverage [h1]
  -f {kraken,sam}   output format [sam]
  -l STR            log file
  -P                incorporate sequences and qualities into SAM records
  -A                annotate assignments (using tax. information from NHX)
  -L                replace read assignments by their LCA
  -X                replace k-mer matches by their LCA
  -M                mimic Kraken (equivalent to "-m h1 -f kraken -L -X")
  -C                use C++ impl. of the assignment algorithm (experimental)
  -K                force restarted search mode
  -c [STR ...]      advanced configuration (a JSON dictionary)
usage: prophyle analyze [-h] [-s ['w', 'u', 'wl', 'ul']]
                        [-f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']]
                        [-c [STR ...]]
                        {index_dir, tree.nw} <out.pref> <classified.bam>
                        [<classified.bam> ...]

positional arguments:
  {index_dir, tree.nw}     index directory or phylogenetic tree
  <out.pref>               output prefix
  <classified.bam>         classified reads (use '-' for stdin)

optional arguments:
  -h, --help               show this help message and exit
  -s ['w', 'u', 'wl', 'ul']
                           statistics to use for the computation of
                           histograms: w (default) => weighted assignments; u
                           => unique assignments, non-weighted; wl => weighted
                           assignments, propagated to leaves; ul => unique
                           assignments, propagated to leaves.
  -f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']
                           Input format of assignments [auto]
  -c [STR ...]             advanced configuration (a JSON dictionary)
usage: prophyle compress [-h] [-c [STR ...]] <index.dir> [<archive.tar.gz>]

positional arguments:
  <index.dir>       index directory
  <archive.tar.gz>  output archive [<index.dir>.tar.gz]

optional arguments:
  -h, --help        show this help message and exit
  -c [STR ...]      advanced configuration (a JSON dictionary)
usage: prophyle decompress [-h] [-K] [-c [STR ...]]
                           <archive.tar.gz> [<output.dir>]

positional arguments:
  <archive.tar.gz>  output archive
  <output.dir>      output directory [./]

optional arguments:
  -h, --help        show this help message and exit
  -K                skip k-LCP construction
  -c [STR ...]      advanced configuration (a JSON dictionary)
usage: prophyle compile [-h] [-C] [-F] [-P] [-c [STR ...]]

optional arguments:
  -h, --help    show this help message and exit
  -C            clean files instead of compiling
  -F            force recompilation
  -P            run compilation in parallel
  -c [STR ...]  advanced configuration (a JSON dictionary)
usage: prophyle_analyze.py [-h] [-s ['w', 'u', 'wl', 'ul']]
                           [-f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']]
                           {index_dir, tree.nw} <out_prefix> <input_fn>
                           [<input_fn> ...]

Program: prophyle_analyze.py

Analyze results of ProPhyle's classification.
Stats:
w: weighted assignments
u: unique assignments (ignore multiple assignments)
wl: weighted assignments, propagated to leaves
ul: unique assignments, propagated to leaves

positional arguments:
  {index_dir, tree.nw}  Index directory or phylogenetic tree
  <out_prefix>          Prefix for output files (the complete file names will
                        be <out_prefix>_rawhits.tsv for the raw hit counts
                        table and <out_prefix>_otu.tsv for the otu table)
  <input_fn>            ProPhyle output files whose format is chosen with the
                        -f option. Use '-' for stdin or multiple files with
                        the same format (one per sample)

optional arguments:
  -h, --help            show this help message and exit
  -s ['w', 'u', 'wl', 'ul']
                        Statistics to use for the computation of histograms: w
                        (default) => weighted assignments; u => unique
                        assignments, non-weighted; wl => weighted assignments,
                        propagated to leaves; ul => unique assignments,
                        propagated to leaves.
  -f ['sam', 'bam', 'cram', 'uncompressed_bam', 'kraken', 'histo']
                        Input format of assignments [auto]. If 'histo' is
                        selected the program expects hit count histograms
                        (*_rawhits.tsv) previously computed using prophyle
                        analyze, it merges them and compute OTU table from the
                        result (assignment files are not required)
usage: prophyle_assignment.py [-h] [-f {kraken,sam}] [-m {h1,c1,c2,h2}] [-A]
                              [-L] [-X] [-c [STR ...]]
                              <tree.nhx> <k> <assignments.txt>

Implementation of assignment algorithm

positional arguments:
  <tree.nhx>         phylogenetic tree (Newick/NHX)
  <k>                k-mer length
  <assignments.txt>  assignments in generalized Kraken format

optional arguments:
  -h, --help         show this help message and exit
  -f {kraken,sam}    format of output [sam]
  -m {h1,c1,c2,h2}   measure: h1=hit count, c1=coverage, h2=norm.hit count,
                     c2=norm.coverage [h1]
  -A                 annotate assignments
  -L                 use LCA when tie (multiple assignments with the same
                     score)
  -X                 use LCA for k-mers (multiple hits of a k-mer)
  -c [STR ...]       configuration (a JSON dictionary)
usage: prophyle_ncbi_tree.py [-h] [-l log_file] [-r red_factor] [-u root]
                             <library> <library_dir> <output_file> <taxid_map>

Program: prophyle_ncbi_tree Build a taxonomic tree in the New Hampshire newick
format #1 for NCBI sequences

positional arguments:
  <library>      directory with the library sequences (e.g. bacteria, viruses
                 etc.)
  <library_dir>  library path (parent of library, e.g. main ProPhyle
                 directory)
  <output_file>  output file
  <taxid_map>    tab separated accession number to taxid map

optional arguments:
  -h, --help     show this help message and exit
  -l log_file    log file [stderr]
  -r red_factor  build reduced tree (one sequence every n)
  -u root        root of the tree (e.g. Bacteria); will exclude sequences
                 which are not its descendants
usage: prophyle_otu_table.py [-h] [-r TARGET_RANKS] [-t TAXID_FIELD]
                             [-i READ_FIELD] [-l log_file]
                             <tree> <output_prefix> <in_fn> [<in_fn> ...]

Program: prophyle_otu_table

Create an OTU table for ProPhyle's classification output, ignoring reads
assigned to multiple reference genomes. Needs the index to be NCBI-based (with
informations about ranks and taxid). Change the positions of the read id
and of the taxid with -i and -t to switch format (default: SAM)

positional arguments:
  <tree>           taxonomic tree used for classification (Newick/NHX format)
  <output_prefix>  prefix for output files (one per rank, each with suffix
                   "_rank.tsv")
  <in_fn>          input files (outputs of prophyle classify in sam or kraken
                   format)

optional arguments:
  -h, --help       show this help message and exit
  -r TARGET_RANKS  comma separated list of ranks to build the OTU table for
                   [species,genus,family,phylum,class,order,kingdom]
  -t TAXID_FIELD   position of the taxid in the input lines [3 (for sam and
                   kraken format)]
  -i READ_FIELD    position of the read id in the input lines [1 (for sam, use
                   2 for kraken)]
  -l log_file      log file [stderr]
usage: prophyle_paired_end.py [-h] [-o out_file] reads_1 reads_2

Program: prophyle_paired_end.py Merge paired-end FASTA or FASTQ files
(possibly in gzip format).

positional arguments:
  reads_1               1st FASTA or FASTQ file
  reads_2               2nd FASTA or FASTQ file

optional arguments:
  -h, --help            show this help message and exit
  -o out_file, --output-file out_file
                        output file [stdout]
usage: prophyle_plot_tree.py [-h] [-a str]
                             <tree.nhx> <figure.{pdf,png,svg,..}>

Plot a Newick/NHX tree

positional arguments:
  <tree.nhx>            phylogenetic tree (in Newick/NHX)
  <figure.{pdf,png,svg,..}>
                        output figure

optional arguments:
  -h, --help            show this help message and exit
  -a str                attribute to print with each node (e.g., sci_name)
usage: prophyle_propagation_makefile.py [-h] -k int
                                        <tree.nw> <library.dir> <output.dir>
                                        <Makefile>

Create Makefile for parallelized ProPhyle k-mer propagation.

positional arguments:
  <tree.nw>      phylogenetic tree (in Newick/NHX).
  <library.dir>  directory with the library
  <output.dir>   output directory for the index
  <Makefile>     output Makefile

optional arguments:
  -h, --help     show this help message and exit
  -k int         k-mer length
usage: prophyle_propagation_postprocessing.py [-h]
                                              <propagation.dir> <index.fa>
                                              <in.tree.nw> <counts.tsv>
                                              <out.tree.nw>

K-mer propagation postprocessing: merging FASTA files and k-mer annotation.

positional arguments:
  <propagation.dir>  directory with FASTA files
  <index.fa>         output fast file
  <in.tree.nw>       input phylogenetic tree
  <counts.tsv>       input phylogenetic tree
  <out.tree.nw>      output phylogenetic tree

optional arguments:
  -h, --help         show this help message and exit
usage: prophyle_propagation_preprocessing.py [-h] [-s FLOAT] [-A] [-V] [-P]
                                             <in_tree.nw{@node_name}>
                                             [<in_tree.nw{@node_name}> ...]
                                             <out_tree.nw>

Merge multiple ProPhyle trees. Specific subtrees might be extracted before merging. Examples:
	$ prophyle_merge_trees.py ~/prophyle/bacteria.nw ~/prophyle/viruses.nw bv.nw
	$ prophyle_merge_trees.py ~/prophyle/bacteria.nw@562 ecoli.nw

positional arguments:
  <in_tree.nw{@node_name}>
                        input tree
  <out_tree.nw>         output tree

optional arguments:
  -h, --help            show this help message and exit
  -s FLOAT              rate of sampling the tree [no sampling]
  -A                    autocomplete tree (names of internal nodes and FASTA paths)
  -V                    verbose
  -P                    do not add prefixes to node names
usage: prophyle_split_allseq.py [-h] [-i STR] output_dir

Split a fasta file containing multiple sequences in multiple files containing
one sequence

positional arguments:
  output_dir  Path to the output directory

optional arguments:
  -h, --help  show this help message and exit
  -i STR      Fasta file [stdin]

Resource usage statistics from testing prophyle:
   Process count: 3
   CPU time: Sys=0:00:00.1, User=0:00:00.4
   Memory: 58.6M
   Disk usage: 20B
   Time elapsed: 0:00:10.3


TEST END: prophyle-0.3.2.0-py39h98c8e45_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                  Version  Build                Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex              0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex              4.5  1_gnu                conda-forge/linux-64                    Cached
  + biopython                 1.79  py39h3811e60_0       conda-forge/linux-64                    Cached
  + bzip2                    1.0.8  h7f98852_4           conda-forge/linux-64                    Cached
  + c-ares                  1.17.2  h7f98852_0           conda-forge/linux-64                    Cached
  + ca-certificates      2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + htslib                    1.12  h9093b5e_1           bioconda/linux-64                         2 MB
  + krb5                    1.19.2  hcc1bbae_0           conda-forge/linux-64                    Cached
  + ld_impl_linux-64        2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas                  3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcblas                 3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcurl                 7.78.0  h2574ce0_0           conda-forge/linux-64                    Cached
  + libdeflate                 1.7  h7f98852_5           conda-forge/linux-64                    Cached
  + libedit           3.1.20191231  he28a2e2_2           conda-forge/linux-64                    Cached
  + libev                     4.33  h516909a_1           conda-forge/linux-64                    Cached
  + libffi                     3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng               11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng          11.1.0  h69a702a_8           conda-forge/linux-64                    Cached
  + libgfortran5            11.1.0  h6c583b3_8           conda-forge/linux-64                    Cached
  + libgomp                 11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack                3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libnghttp2              1.43.0  h812cca2_0           conda-forge/linux-64                    Cached
  + libopenblas             0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                    Cached
  + libssh2                 1.10.0  ha56f1ee_0           conda-forge/linux-64                    Cached
  + libstdcxx-ng            11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + ncurses                    6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + numpy                   1.21.2  py39hdbf815f_0       conda-forge/linux-64                    Cached
  + openssl                 1.1.1k  h7f98852_1           conda-forge/linux-64                    Cached
  + pip                     21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + python                   3.9.6  h49503c6_1_cpython   conda-forge/linux-64                    Cached
  + python_abi                 3.9  2_cp39               conda-forge/linux-64                    Cached
  + readline                   8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + setuptools              57.4.0  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + shorah                  1.99.2  py39he1f734c_2       /home/vsts/conda/conda-bld/linux-64     595 KB
  + sqlite                  3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tk                      8.6.11  h21135ba_0           conda-forge/linux-64                    Cached
  + tzdata                   2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                   0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                       5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                    1.2.11  h516909a_1010        conda-forge/linux-64                    Cached

  Summary:

  Install: 40 packages

  Total download: 3 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: shorah-1.99.2-py39he1f734c_2.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/shorah_1630500909457/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    biopython:        1.79-py39h3811e60_0        conda-forge
    bzip2:            1.0.8-h7f98852_4           conda-forge
    c-ares:           1.17.2-h7f98852_0          conda-forge
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    htslib:           1.12-h9093b5e_1            bioconda   
    krb5:             1.19.2-hcc1bbae_0          conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libcurl:          7.78.0-h2574ce0_0          conda-forge
    libdeflate:       1.7-h7f98852_5             conda-forge
    libedit:          3.1.20191231-he28a2e2_2    conda-forge
    libev:            4.33-h516909a_1            conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libnghttp2:       1.43.0-h812cca2_0          conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libssh2:          1.10.0-ha56f1ee_0          conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    ncurses:          6.2-h58526e2_4             conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    openssl:          1.1.1k-h7f98852_1          conda-forge
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    python:           3.9.6-h49503c6_1_cpython   conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    readline:         8.1-h46c0cb4_0             conda-forge
    setuptools:       57.4.0-py39hf3d152e_0      conda-forge
    shorah:           1.99.2-py39he1f734c_2      local      
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    tk:               8.6.11-h21135ba_0          conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/shorah_1630500909457/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/home/vsts/conda/conda-bld/shorah_1630500909457/test_tmp
import: 'shorah'
import: 'shorah'
usage: shorah <subcommand> [options]

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit

sub-commands:
  {shotgun,amplicon,snv}
                        available sub-commands
    shotgun             run local analysis in shotgun mode
    amplicon            run local analysis in amplicon mode
    snv                 run single-nucleotide-variant calling

Run `shorah subcommand -h` for more help
usage: shorah <subcommand> [options] shotgun [-h] [-v] -b BAM -f REF
                                             [-a FLOAT] [-r chrm:start-stop]
                                             [-R INT] [-x INT] [-S FLOAT] [-I]
                                             [-p FLOAT]
                                             [-of {csv,vcf} [{csv,vcf} ...]]
                                             [-c INT] [-w INT] [-s INT] [-k]
                                             [-t INT]

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit
  -a FLOAT, --alpha FLOAT
                        alpha in dpm sampling (controls the probability of
                        creating new classes)
  -r chrm:start-stop, --region chrm:start-stop
                        region in format 'chr:start-stop', e.g.
                        'chrm:1000-3000'
  -R INT, --seed INT    set seed for reproducible results
  -x INT, --maxcov INT  approximate max coverage allowed
  -S FLOAT, --sigma FLOAT
                        sigma value to use when calling SNVs
  -I, --ignore_indels   ignore SNVs adjacent to insertions/deletions (legacy
                        behaviour of 'fil', ignore this option if you don't
                        understand)
  -p FLOAT, --threshold FLOAT
                        pos threshold when calling variants from support files
  -of {csv,vcf} [{csv,vcf} ...], --out_format {csv,vcf} [{csv,vcf} ...]
                        output format of called SNVs
  -c INT, --win_coverage INT
                        coverage threshold. Omit windows with low coverage
  -w INT, --windowsize INT
                        window size
  -s INT, --winshifts INT
                        number of window shifts
  -k, --keep_files      keep all intermediate files
  -t INT, --threads INT
                        limit maximum number of parallel sampler threads (0:
                        CPUs count-1, n: limit to n)

required arguments:
  -b BAM, --bam BAM     sorted bam format alignment file
  -f REF, --fasta REF   reference genome in fasta format
usage: shorah <subcommand> [options] amplicon [-h] [-v] -b BAM -f REF
                                              [-a FLOAT] [-r chrm:start-stop]
                                              [-R INT] [-x INT] [-S FLOAT]
                                              [-I] [-p FLOAT]
                                              [-of {csv,vcf} [{csv,vcf} ...]]
                                              [-c INT] [-d] [-m FLOAT]

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit
  -a FLOAT, --alpha FLOAT
                        alpha in dpm sampling (controls the probability of
                        creating new classes)
  -r chrm:start-stop, --region chrm:start-stop
                        region in format 'chr:start-stop', e.g.
                        'chrm:1000-3000'
  -R INT, --seed INT    set seed for reproducible results
  -x INT, --maxcov INT  approximate max coverage allowed
  -S FLOAT, --sigma FLOAT
                        sigma value to use when calling SNVs
  -I, --ignore_indels   ignore SNVs adjacent to insertions/deletions (legacy
                        behaviour of 'fil', ignore this option if you don't
                        understand)
  -p FLOAT, --threshold FLOAT
                        pos threshold when calling variants from support files
  -of {csv,vcf} [{csv,vcf} ...], --out_format {csv,vcf} [{csv,vcf} ...]
                        output format of called SNVs
  -c INT, --win_coverage INT
                        coverage threshold. Omit windows with low coverage
  -d, --diversity       detect the highest entropy region and run there
  -m FLOAT, --min_overlap FLOAT
                        fraction of read overlap to be included

required arguments:
  -b BAM, --bam BAM     sorted bam format alignment file
  -f REF, --fasta REF   reference genome in fasta format
usage: shorah <subcommand> [options] snv [-h] [-v] -b BAM -f REF [-a FLOAT]
                                         [-r chrm:start-stop] [-R INT]
                                         [-x INT] [-S FLOAT] [-I] [-p FLOAT]
                                         [-of {csv,vcf} [{csv,vcf} ...]]
                                         [-i INT]

optional arguments:
  -h, --help            show this help message and exit
  -v, --version         show program's version number and exit
  -a FLOAT, --alpha FLOAT
                        alpha in dpm sampling (controls the probability of
                        creating new classes)
  -r chrm:start-stop, --region chrm:start-stop
                        region in format 'chr:start-stop', e.g.
                        'chrm:1000-3000'
  -R INT, --seed INT    set seed for reproducible results
  -x INT, --maxcov INT  approximate max coverage allowed
  -S FLOAT, --sigma FLOAT
                        sigma value to use when calling SNVs
  -I, --ignore_indels   ignore SNVs adjacent to insertions/deletions (legacy
                        behaviour of 'fil', ignore this option if you don't
                        understand)
  -p FLOAT, --threshold FLOAT
                        pos threshold when calling variants from support files
  -of {csv,vcf} [{csv,vcf} ...], --out_format {csv,vcf} [{csv,vcf} ...]
                        output format of called SNVs
  -i INT, --increment INT
                        value of increment to use when calling SNVs (1 used in
                        amplicon mode)

required arguments:
  -b BAM, --bam BAM     sorted bam format alignment file
  -f REF, --fasta REF   reference genome in fasta format

Usage: b2w [options] <in.bam> <in.fasta> [region]

Options:
	-w: window length (INT)
	-i: increment (INT)
	-m: minimum overlap (INT)
	-x: max reads starting at a position (INT)
	-c: coverage threshold. Omit windows with low coverage (INT)
	-d: drop SNVs that are adjacent to insertions/deletions (alternate behaviour)
	-h: show this help

diri_sampler [options]

  files
	-i <input data file>
  parameters
	-j <sampling iterations>
	-a <alpha>
	-K <startvalue for number of clusters> not compat. with -k
	-k <avg. number of reads in each startcluster> not compat. with -K
	-t <history time>
	-R <randomseed>
-----------------------------------------------------
	-h		 this help!

Usage: fil [options] -b <in.bam>

Options:
	-v: sigma (FLOAT) [default: 0.01]
	-x: maxdepth (INT) [default: 10000]
	-a: amplicon mode [default: shotgun]
	-d: drop SNVs that are adjacent to insertions/deletions (alternate behaviour)
	-h: show this help


Resource usage statistics from testing shorah:
   Process count: 7
   CPU time: Sys=0:00:01.2, User=0:00:40.4
   Memory: 219.1M
   Disk usage: 4.9K
   Time elapsed: 0:01:03.3


TEST END: shorah-1.99.2-py39he1f734c_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


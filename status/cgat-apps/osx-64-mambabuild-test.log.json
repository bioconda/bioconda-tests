  Package                          Version  Build               Channel                                    Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + aiohttp                    3.7.4.post0  py38h96a0964_0      conda-forge/osx-64                       609 KB
  + alignlib-lite                      0.3  py38h8b03077_4      bioconda/osx-64                          313 KB
  + apsw                         3.36.0.r1  py38hd789c40_0      conda-forge/osx-64                        93 KB
  + async-timeout                    3.0.1  py_1000             conda-forge/noarch                        11 KB
  + attrs                           21.2.0  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + bcrypt                           3.2.0  py38h96a0964_1      conda-forge/osx-64                        44 KB
  + bedtools                        2.30.0  haa7f73a_2          bioconda/osx-64                          807 KB
  + biopython                         1.79  py38h96a0964_0      conda-forge/osx-64                         3 MB
  + boto3                          1.18.34  pyhd8ed1ab_0        conda-forge/noarch                        70 KB
  + botocore                       1.21.34  pyhd8ed1ab_0        conda-forge/noarch                         5 MB
  + brotlipy                         0.7.0  py38h96a0964_1001   conda-forge/osx-64                       357 KB
  + bzip2                            1.0.8  h0d85af4_4          conda-forge/osx-64                       Cached
  + c-ares                          1.17.2  h0d85af4_0          conda-forge/osx-64                       Cached
  + ca-certificates              2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + cachetools                       4.2.2  pyhd8ed1ab_0        conda-forge/noarch                        12 KB
  + certifi                      2021.5.30  py38h50d1736_0      conda-forge/osx-64                       141 KB
  + cffi                            1.14.6  py38h9688ba1_0      conda-forge/osx-64                       219 KB
  + cgat-apps                        0.6.4  py38h01f53dd_1      /Users/runner/conda/conda-bld/osx-64       2 MB
  + cgatcore                         0.6.7  py_0                bioconda/noarch                           93 KB
  + chardet                          4.0.0  py38h50d1736_1      conda-forge/osx-64                       204 KB
  + charset-normalizer               2.0.0  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + coreutils                         8.31  h0b31af3_0          conda-forge/osx-64                       Cached
  + cryptography                     3.4.7  py38h1fa4640_0      conda-forge/osx-64                       763 KB
  + cycler                          0.10.0  py_2                conda-forge/noarch                         9 KB
  + drmaa                            0.7.9  py_1000             conda-forge/noarch                        18 KB
  + freetype                        2.10.4  h4cff582_1          conda-forge/osx-64                       890 KB
  + ftputil                          5.0.1  pyhd8ed1ab_0        conda-forge/noarch                        76 KB
  + future                          0.18.2  py38h50d1736_3      conda-forge/osx-64                       715 KB
  + gevent                          21.8.0  py38h96a0964_0      conda-forge/osx-64                         2 MB
  + google-api-core                  2.0.1  pyhd8ed1ab_0        conda-forge/noarch                        58 KB
  + google-auth                      2.0.2  pyh6c4a22f_0        conda-forge/noarch                        81 KB
  + google-cloud-core                2.0.0  pyh6c4a22f_0        conda-forge/noarch                        26 KB
  + google-cloud-sdk               355.0.0  py38h50d1736_0      conda-forge/osx-64                        92 MB
  + google-cloud-storage            1.42.0  pyh6c4a22f_0        conda-forge/noarch                        73 KB
  + google-crc32c                    1.1.2  py38hc5fad5e_0      conda-forge/osx-64                        23 KB
  + google-resumable-media           2.0.1  pyh6c4a22f_0        conda-forge/noarch                        41 KB
  + googleapis-common-protos        1.53.0  py38h50d1736_0      conda-forge/osx-64                       126 KB
  + greenlet                         1.1.1  py38ha048514_0      conda-forge/osx-64                        79 KB
  + grep                               3.4  he984a05_1          bioconda/osx-64                          167 KB
  + grpcio                          1.38.1  py38ha263829_0      conda-forge/osx-64                         2 MB
  + htslib                            1.12  hc38c3fb_1          bioconda/osx-64                            2 MB
  + idna                               3.1  pyhd3deb0d_0        conda-forge/noarch                       Cached
  + jbig                               2.1  h0d85af4_2003       conda-forge/osx-64                        42 KB
  + jinja2                           3.0.1  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + jmespath                        0.10.0  pyh9f0ad1d_0        conda-forge/noarch                        21 KB
  + joblib                           1.0.1  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + jpeg                                9d  hbcb3906_0          conda-forge/osx-64                       250 KB
  + kiwisolver                       1.3.2  py38h12bbefe_0      conda-forge/osx-64                        57 KB
  + krb5                            1.19.2  hcfbf3a7_0          conda-forge/osx-64                       Cached
  + lcms2                             2.12  h577c468_0          conda-forge/osx-64                       404 KB
  + lerc                             2.2.1  h046ec9c_0          conda-forge/osx-64                       164 KB
  + libblas                          3.9.0  11_osx64_openblas   conda-forge/osx-64                        12 KB
  + libcblas                         3.9.0  11_osx64_openblas   conda-forge/osx-64                        11 KB
  + libcrc32c                        1.1.1  h1c7c35f_2          conda-forge/osx-64                        20 KB
  + libcurl                         7.78.0  hf45b732_0          conda-forge/osx-64                       Cached
  + libcxx                          12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libdeflate                         1.7  h35c211d_5          conda-forge/osx-64                        67 KB
  + libedit                   3.1.20191231  h0678c8f_2          conda-forge/osx-64                       Cached
  + libev                             4.33  haf1e3a3_1          conda-forge/osx-64                       Cached
  + libffi                             3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + libgfortran                      5.0.0  9_3_0_h6c81a4c_23   conda-forge/osx-64                        19 KB
  + libgfortran5                     9.3.0  h6c81a4c_23         conda-forge/osx-64                         2 MB
  + liblapack                        3.9.0  11_osx64_openblas   conda-forge/osx-64                        11 KB
  + libnghttp2                      1.43.0  h07e645a_0          conda-forge/osx-64                       Cached
  + libopenblas                     0.3.17  openmp_h3351f45_1   conda-forge/osx-64                         9 MB
  + libpng                          1.6.37  h7cec526_2          conda-forge/osx-64                       313 KB
  + libprotobuf                     3.17.2  hcf210ce_1          conda-forge/osx-64                         2 MB
  + libsodium                       1.0.18  hbcb3906_1          conda-forge/osx-64                       516 KB
  + libssh2                         1.10.0  h52ee1ee_0          conda-forge/osx-64                       Cached
  + libtiff                          4.3.0  h1167814_1          conda-forge/osx-64                       621 KB
  + libuuid                         2.32.1  h35c211d_1000       conda-forge/osx-64                        23 KB
  + libuv                           1.42.0  h0d85af4_0          conda-forge/osx-64                       427 KB
  + libwebp-base                     1.2.1  h0d85af4_0          conda-forge/osx-64                       692 KB
  + llvm-openmp                     12.0.1  hda6cdc1_1          conda-forge/osx-64                       287 KB
  + lz4-c                            1.9.3  he49afe7_1          conda-forge/osx-64                       Cached
  + markupsafe                       2.0.1  py38h96a0964_0      conda-forge/osx-64                        21 KB
  + matplotlib-base                  3.4.3  py38hc7d2367_0      conda-forge/osx-64                         7 MB
  + multidict                        5.1.0  py38h96a0964_1      conda-forge/osx-64                        61 KB
  + mysql-connector-c               6.1.11  h0f02589_1007       conda-forge/osx-64                         4 MB
  + ncurses                            6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + nomkl                              1.0  h5ca1d4c_0          conda-forge/noarch                         4 KB
  + numpy                           1.21.2  py38h49b9922_0      conda-forge/osx-64                         6 MB
  + olefile                           0.46  pyh9f0ad1d_1        conda-forge/noarch                        32 KB
  + openjpeg                         2.4.0  h6e7aa92_1          conda-forge/osx-64                       374 KB
  + openssl                         1.1.1k  h0d85af4_1          conda-forge/osx-64                       Cached
  + pandas                           1.3.2  py38ha53d530_0      conda-forge/osx-64                        12 MB
  + paramiko                         2.7.2  pyh9f0ad1d_0        conda-forge/noarch                       135 KB
  + pcre                              8.45  he49afe7_0          conda-forge/osx-64                       220 KB
  + pillow                           8.3.1  py38hee640a0_0      conda-forge/osx-64                       665 KB
  + pip                             21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + protobuf                        3.17.2  py38ha048514_0      conda-forge/osx-64                       322 KB
  + pyasn1                           0.4.8  py_0                conda-forge/noarch                        53 KB
  + pyasn1-modules                   0.2.7  py_0                conda-forge/noarch                        60 KB
  + pybedtools                       0.8.2  py38hbbcb448_1      bioconda/osx-64                           12 MB
  + pybigwig                        0.3.18  py38hea4018b_1      bioconda/osx-64                           71 KB
  + pycparser                         2.20  pyh9f0ad1d_2        conda-forge/noarch                       Cached
  + pynacl                           1.4.0  py38h96a0964_2      conda-forge/osx-64                         1 MB
  + pyopenssl                       20.0.1  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + pyparsing                        2.4.7  pyh9f0ad1d_0        conda-forge/noarch                        60 KB
  + pysam                         0.16.0.1  py38h4ebacbe_3      bioconda/osx-64                            2 MB
  + pysftp                           0.2.9  py_1                conda-forge/noarch                        15 KB
  + pysocks                          1.7.1  py38h50d1736_3      conda-forge/osx-64                        27 KB
  + python                          3.8.10  h0e5c897_0_cpython  conda-forge/osx-64                        13 MB
  + python-dateutil                  2.8.2  pyhd8ed1ab_0        conda-forge/noarch                       240 KB
  + python_abi                         3.8  2_cp38              conda-forge/osx-64                         4 KB
  + pytz                            2021.1  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + pyu2f                            0.1.5  pyhd8ed1ab_0        conda-forge/noarch                        31 KB
  + pyyaml                           5.4.1  py38h96a0964_1      conda-forge/osx-64                       171 KB
  + quicksect                        0.2.2  py38h68004ad_4      bioconda/osx-64                           51 KB
  + readline                           8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + requests                        2.26.0  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + rsa                              4.7.2  pyh44b312d_0        conda-forge/noarch                        28 KB
  + ruffus                           2.8.4  pyh864c0ab_1        bioconda/noarch                          150 KB
  + s3transfer                       0.5.0  pyhd8ed1ab_0        conda-forge/noarch                        55 KB
  + scikit-learn                    0.24.2  py38h37f3bb3_1      conda-forge/osx-64                         7 MB
  + scipy                            1.7.1  py38hd329d04_0      conda-forge/osx-64                        20 MB
  + setuptools                      57.4.0  py38h50d1736_0      conda-forge/osx-64                       929 KB
  + six                             1.16.0  pyh6c4a22f_0        conda-forge/noarch                       Cached
  + sortedcontainers                 2.4.0  pyhd8ed1ab_0        conda-forge/noarch                        26 KB
  + sqlalchemy                      1.4.23  py38h96a0964_0      conda-forge/osx-64                         2 MB
  + sqlite                          3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + threadpoolctl                    2.2.0  pyh8a188c0_0        conda-forge/noarch                        16 KB
  + time                               1.8  h01d97ff_0          conda-forge/osx-64                        36 KB
  + tk                              8.6.11  h5dbffcc_1          conda-forge/osx-64                       Cached
  + tornado                            6.1  py38h96a0964_1      conda-forge/osx-64                       645 KB
  + typing-extensions             3.10.0.0  hd8ed1ab_0          conda-forge/noarch                         8 KB
  + typing_extensions             3.10.0.0  pyha770c72_0        conda-forge/noarch                       Cached
  + ucsc-bedgraphtobigwig              377  h516baf0_1          bioconda/osx-64                          311 KB
  + ucsc-bedtobigbed                   377  h516baf0_1          bioconda/osx-64                          441 KB
  + ucsc-wigtobigwig                   377  h516baf0_1          bioconda/osx-64                          314 KB
  + urllib3                         1.26.6  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + wheel                           0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                               5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + yaml                             0.2.5  haf1e3a3_0          conda-forge/osx-64                       Cached
  + yarl                             1.5.1  py38h4d0b108_0      conda-forge/osx-64                       131 KB
  + zlib                            1.2.11  h7795811_1010       conda-forge/osx-64                       Cached
  + zope.event                       4.5.0  pyh9f0ad1d_0        conda-forge/noarch                         9 KB
  + zope.interface                   5.4.0  py38h96a0964_0      conda-forge/osx-64                       315 KB
  + zstd                             1.5.0  h582d3a0_0          conda-forge/osx-64                       Cached

  Summary:

  Install: 139 packages

  Total download: 221 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: cgat-apps-0.6.4-py38h01f53dd_1.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/cgat-apps_1630587094416/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    aiohttp:                  3.7.4.post0-py38h96a0964_0 conda-forge
    alignlib-lite:            0.3-py38h8b03077_4         bioconda   
    apsw:                     3.36.0.r1-py38hd789c40_0   conda-forge
    async-timeout:            3.0.1-py_1000              conda-forge
    attrs:                    21.2.0-pyhd8ed1ab_0        conda-forge
    bcrypt:                   3.2.0-py38h96a0964_1       conda-forge
    bedtools:                 2.30.0-haa7f73a_2          bioconda   
    biopython:                1.79-py38h96a0964_0        conda-forge
    boto3:                    1.18.34-pyhd8ed1ab_0       conda-forge
    botocore:                 1.21.34-pyhd8ed1ab_0       conda-forge
    brotlipy:                 0.7.0-py38h96a0964_1001    conda-forge
    bzip2:                    1.0.8-h0d85af4_4           conda-forge
    c-ares:                   1.17.2-h0d85af4_0          conda-forge
    ca-certificates:          2021.5.30-h033912b_0       conda-forge
    cachetools:               4.2.2-pyhd8ed1ab_0         conda-forge
    certifi:                  2021.5.30-py38h50d1736_0   conda-forge
    cffi:                     1.14.6-py38h9688ba1_0      conda-forge
    cgat-apps:                0.6.4-py38h01f53dd_1       local      
    cgatcore:                 0.6.7-py_0                 bioconda   
    chardet:                  4.0.0-py38h50d1736_1       conda-forge
    charset-normalizer:       2.0.0-pyhd8ed1ab_0         conda-forge
    coreutils:                8.31-h0b31af3_0            conda-forge
    cryptography:             3.4.7-py38h1fa4640_0       conda-forge
    cycler:                   0.10.0-py_2                conda-forge
    drmaa:                    0.7.9-py_1000              conda-forge
    freetype:                 2.10.4-h4cff582_1          conda-forge
    ftputil:                  5.0.1-pyhd8ed1ab_0         conda-forge
    future:                   0.18.2-py38h50d1736_3      conda-forge
    gevent:                   21.8.0-py38h96a0964_0      conda-forge
    google-api-core:          2.0.1-pyhd8ed1ab_0         conda-forge
    google-auth:              2.0.2-pyh6c4a22f_0         conda-forge
    google-cloud-core:        2.0.0-pyh6c4a22f_0         conda-forge
    google-cloud-sdk:         355.0.0-py38h50d1736_0     conda-forge
    google-cloud-storage:     1.42.0-pyh6c4a22f_0        conda-forge
    google-crc32c:            1.1.2-py38hc5fad5e_0       conda-forge
    google-resumable-media:   2.0.1-pyh6c4a22f_0         conda-forge
    googleapis-common-protos: 1.53.0-py38h50d1736_0      conda-forge
    greenlet:                 1.1.1-py38ha048514_0       conda-forge
    grep:                     3.4-he984a05_1             bioconda   
    grpcio:                   1.38.1-py38ha263829_0      conda-forge
    htslib:                   1.12-hc38c3fb_1            bioconda   
    idna:                     3.1-pyhd3deb0d_0           conda-forge
    jbig:                     2.1-h0d85af4_2003          conda-forge
    jinja2:                   3.0.1-pyhd8ed1ab_0         conda-forge
    jmespath:                 0.10.0-pyh9f0ad1d_0        conda-forge
    joblib:                   1.0.1-pyhd8ed1ab_0         conda-forge
    jpeg:                     9d-hbcb3906_0              conda-forge
    kiwisolver:               1.3.2-py38h12bbefe_0       conda-forge
    krb5:                     1.19.2-hcfbf3a7_0          conda-forge
    lcms2:                    2.12-h577c468_0            conda-forge
    lerc:                     2.2.1-h046ec9c_0           conda-forge
    libblas:                  3.9.0-11_osx64_openblas    conda-forge
    libcblas:                 3.9.0-11_osx64_openblas    conda-forge
    libcrc32c:                1.1.1-h1c7c35f_2           conda-forge
    libcurl:                  7.78.0-hf45b732_0          conda-forge
    libcxx:                   12.0.1-habf9029_0          conda-forge
    libdeflate:               1.7-h35c211d_5             conda-forge
    libedit:                  3.1.20191231-h0678c8f_2    conda-forge
    libev:                    4.33-haf1e3a3_1            conda-forge
    libffi:                   3.3-h046ec9c_2             conda-forge
    libgfortran:              5.0.0-9_3_0_h6c81a4c_23    conda-forge
    libgfortran5:             9.3.0-h6c81a4c_23          conda-forge
    liblapack:                3.9.0-11_osx64_openblas    conda-forge
    libnghttp2:               1.43.0-h07e645a_0          conda-forge
    libopenblas:              0.3.17-openmp_h3351f45_1   conda-forge
    libpng:                   1.6.37-h7cec526_2          conda-forge
    libprotobuf:              3.17.2-hcf210ce_1          conda-forge
    libsodium:                1.0.18-hbcb3906_1          conda-forge
    libssh2:                  1.10.0-h52ee1ee_0          conda-forge
    libtiff:                  4.3.0-h1167814_1           conda-forge
    libuuid:                  2.32.1-h35c211d_1000       conda-forge
    libuv:                    1.42.0-h0d85af4_0          conda-forge
    libwebp-base:             1.2.1-h0d85af4_0           conda-forge
    llvm-openmp:              12.0.1-hda6cdc1_1          conda-forge
    lz4-c:                    1.9.3-he49afe7_1           conda-forge
    markupsafe:               2.0.1-py38h96a0964_0       conda-forge
    matplotlib-base:          3.4.3-py38hc7d2367_0       conda-forge
    multidict:                5.1.0-py38h96a0964_1       conda-forge
    mysql-connector-c:        6.1.11-h0f02589_1007       conda-forge
    ncurses:                  6.2-h2e338ed_4             conda-forge
    nomkl:                    1.0-h5ca1d4c_0             conda-forge
    numpy:                    1.21.2-py38h49b9922_0      conda-forge
    olefile:                  0.46-pyh9f0ad1d_1          conda-forge
    openjpeg:                 2.4.0-h6e7aa92_1           conda-forge
    openssl:                  1.1.1k-h0d85af4_1          conda-forge
    pandas:                   1.3.2-py38ha53d530_0       conda-forge
    paramiko:                 2.7.2-pyh9f0ad1d_0         conda-forge
    pcre:                     8.45-he49afe7_0            conda-forge
    pillow:                   8.3.1-py38hee640a0_0       conda-forge
    pip:                      21.2.4-pyhd8ed1ab_0        conda-forge
    protobuf:                 3.17.2-py38ha048514_0      conda-forge
    pyasn1:                   0.4.8-py_0                 conda-forge
    pyasn1-modules:           0.2.7-py_0                 conda-forge
    pybedtools:               0.8.2-py38hbbcb448_1       bioconda   
    pybigwig:                 0.3.18-py38hea4018b_1      bioconda   
    pycparser:                2.20-pyh9f0ad1d_2          conda-forge
    pynacl:                   1.4.0-py38h96a0964_2       conda-forge
    pyopenssl:                20.0.1-pyhd8ed1ab_0        conda-forge
    pyparsing:                2.4.7-pyh9f0ad1d_0         conda-forge
    pysam:                    0.16.0.1-py38h4ebacbe_3    bioconda   
    pysftp:                   0.2.9-py_1                 conda-forge
    pysocks:                  1.7.1-py38h50d1736_3       conda-forge
    python:                   3.8.10-h0e5c897_0_cpython  conda-forge
    python-dateutil:          2.8.2-pyhd8ed1ab_0         conda-forge
    python_abi:               3.8-2_cp38                 conda-forge
    pytz:                     2021.1-pyhd8ed1ab_0        conda-forge
    pyu2f:                    0.1.5-pyhd8ed1ab_0         conda-forge
    pyyaml:                   5.4.1-py38h96a0964_1       conda-forge
    quicksect:                0.2.2-py38h68004ad_4       bioconda   
    readline:                 8.1-h05e3726_0             conda-forge
    requests:                 2.26.0-pyhd8ed1ab_0        conda-forge
    rsa:                      4.7.2-pyh44b312d_0         conda-forge
    ruffus:                   2.8.4-pyh864c0ab_1         bioconda   
    s3transfer:               0.5.0-pyhd8ed1ab_0         conda-forge
    scikit-learn:             0.24.2-py38h37f3bb3_1      conda-forge
    scipy:                    1.7.1-py38hd329d04_0       conda-forge
    setuptools:               57.4.0-py38h50d1736_0      conda-forge
    six:                      1.16.0-pyh6c4a22f_0        conda-forge
    sortedcontainers:         2.4.0-pyhd8ed1ab_0         conda-forge
    sqlalchemy:               1.4.23-py38h96a0964_0      conda-forge
    sqlite:                   3.36.0-h23a322b_0          conda-forge
    threadpoolctl:            2.2.0-pyh8a188c0_0         conda-forge
    time:                     1.8-h01d97ff_0             conda-forge
    tk:                       8.6.11-h5dbffcc_1          conda-forge
    tornado:                  6.1-py38h96a0964_1         conda-forge
    typing-extensions:        3.10.0.0-hd8ed1ab_0        conda-forge
    typing_extensions:        3.10.0.0-pyha770c72_0      conda-forge
    ucsc-bedgraphtobigwig:    377-h516baf0_1             bioconda   
    ucsc-bedtobigbed:         377-h516baf0_1             bioconda   
    ucsc-wigtobigwig:         377-h516baf0_1             bioconda   
    urllib3:                  1.26.6-pyhd8ed1ab_0        conda-forge
    wheel:                    0.37.0-pyhd8ed1ab_1        conda-forge
    xz:                       5.2.5-haf1e3a3_1           conda-forge
    yaml:                     0.2.5-haf1e3a3_0           conda-forge
    yarl:                     1.5.1-py38h4d0b108_0       conda-forge
    zlib:                     1.2.11-h7795811_1010       conda-forge
    zope.event:               4.5.0-pyh9f0ad1d_0         conda-forge
    zope.interface:           5.4.0-py38h96a0964_0       conda-forge
    zstd:                     1.5.0-h582d3a0_0           conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/cgat-apps_1630587094416/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/Users/runner/conda/conda-bld/cgat-apps_1630587094416/test_tmp
import: 'cgat'
import: 'cgat'

cgat.py - Computational Genomics Analysis Tools
===============================================

:Tags: Genomics

To use a specific tool, type::

    cgat <tool> [tool options] [tool arguments]

Tools are grouped by keywords. For this message and a list of
available keywords type::

    cgat --help

For a list of tools matching a certain keyword, type::

   cgat --help <keyword>

or::

   cgat --help all

for a list of all available tools.

To get help for a specific tool, type::

    cgat <tool> --help

cgat tools are grouped by keywords. The following keywords
are defined:

Genomics              Conversion            Summary              
NGS                   WIGGLE                FASTQ                
Intervals             BIGWIG                Fasta                
BAM                   BEDGRAPH              Transformation       
BED                   Geneset               Annotation           
Counting              Manipulation          Variants             
Genesets              GenomeAlignment       Protein              
GTF                   PSL                   MultipleAlignments   
Comparison            CHAIN                 BCL                  
Python                Sequences                                  


cgat.py - Computational Genomics Analysis Tools
===============================================

:Tags: Genomics

To use a specific tool, type::

    cgat <tool> [tool options] [tool arguments]

Tools are grouped by keywords. For this message and a list of
available keywords type::

    cgat --help

For a list of tools matching a certain keyword, type::

   cgat --help <keyword>

or::

   cgat --help all

for a list of all available tools.

To get help for a specific tool, type::

    cgat <tool> --help

Tools matching the keyword 'Conversion':

bam2bed         bcl2fastq       fasta2bed      
bam2fasta       bed2fasta       fastqs2fasta   
bam2fastq       bed2gff         gff2bed        
bam2wiggle      chain2psl       gff2psl        
                                               

usage: gtf2table [-h] [--version] [-g GENOME_FILE] [-q QUALITY_FILE] [-b bam]
                 [-i bigwig] [-f bed] [--filename-format {bed,gff,gtf}]
                 [--restrict-source GFF_SOURCES]
                 [--restrict-feature GFF_FEATURES] [-r {genes,transcripts}]
                 [-s {exons,introns}]
                 [-c {bigwig-counts,binding-pattern,classifier,classifier-rnaseq,classifier-rnaseq-splicing,classifier-polii,composition-na,composition-cpg,coverage,distance,distance-genes,distance-tss,length,neighbours,overlap,overlap-stranded,overlap-transcripts,overrun,position,proximity,proximity-exclusive,proximity-lengthmatched,quality,read-coverage,read-extension,read-overlap,read-counts,read-fullcounts,readpair-counts,readpair-fullcounts,splice,splice-comparison,territories}]
                 [--add-gtf-source] [--proximal-distance PROXIMAL_DISTANCE]
                 [--multi-mapping-method {all,ignore,weight}] [--use-barcodes]
                 [--sample-probability SAMPLE_PROBABILITY]
                 [--column-prefix PREFIXES]
                 [--library-type {unstranded,firststrand,secondstrand,fr-unstranded,fr-firststrand,fr-secondstrand}]
                 [--min-mapping-quality MINIMUM_MAPPING_QUALITY]
                 [--timeit TIMEIT_FILE] [--timeit-name TIMEIT_NAME]
                 [--timeit-header] [--random-seed RANDOM_SEED] [-v LOGLEVEL]
                 [--log-config-filename LOG_CONFIG_FILENAME]
                 [--tracing {function}] [-? ?] [-P OUTPUT_FILENAME_PATTERN]
                 [-F] [-I STDIN] [-L STDLOG] [-E STDERR] [-S STDOUT]

gtf2table.py - annotate genes/transcripts
============================================

:Tags: Genomics Genesets GTF Annotation

Purpose
-------

annotate genes or transcripts given in a :term:`gtf` formatted file
and output them in tabular format.

Annotations can be either computed per gene (all exons across all
transcripts) or per transcript. The input needs to be sorted
accordingly.

The script iterates over each gene or transcript model in turn and
outputs a row in a table for each. Multiple annotations can be
computed at the same time adding additional columns to the table.

For example, to output information about exons in genes::

    zcat in.gtf.gz | cgat gtf2table -v 0 --counter=length

+---------------+----+----+----+---------+------+--------+----+----+----+
|gene_id        |nval|min |max |mean     |median|stddev  |sum |q1  |q3  |
+---------------+----+----+----+---------+------+--------+----+----+----+
|ENSG00000225373|4   |39  |688 |253.0000 |142.5 |261.5922|1012|58  |688 |
+---------------+----+----+----+---------+------+--------+----+----+----+
|ENSG00000267111|1   |744 |744 |744.0000 |744.0 |0.0000  |744 |744 |744 |
+---------------+----+----+----+---------+------+--------+----+----+----+
|ENSG00000267588|3   |135 |489 |370.0000 |486.0 |166.1746|1110|135 |489 |
+---------------+----+----+----+---------+------+--------+----+----+----+
|ENSG00000220978|1   |138 |138 |138.0000 |138.0 |0.0000  |138 |138 |138 |
+---------------+----+----+----+---------+------+--------+----+----+----+

The table contains exon length statistics of each gene, the number (nval),
min, max, and total length(sum) of exons per gene. To count per transcript::

    zcat in.gtf.gz | cgat gtf2table -v 0 --reporter=transcripts --counter=length

+---------------+----+---+---+--------+------+--------+----+---+---+
|transcript_id  |nval|min|max|mean    |median|stddev  |sum |q1 |q3 |
+---------------+----+---+---+--------+------+--------+----+---+---+
|ENST00000592209|3   |58 |227|149.6667|164.0 |69.7344 |449 |58 |227|
+---------------+----+---+---+--------+------+--------+----+---+---+
|ENST00000589741|2   |71 |312|191.5000|191.5 |120.5000|383 |71 |312|
+---------------+----+---+---+--------+------+--------+----+---+---+
|ENST00000391654|2   |39 |583|311.0000|311.0 |272.0000|622 |39 |583|
+---------------+----+---+---+--------+------+--------+----+---+---+
|ENST00000587045|1   |173|173|173.0000|173.0 |0.0000  |173 |173|173|
+---------------+----+---+---+--------+------+--------+----+---+---+

To add also information about cpg-composition, add another counter::

    zcat in.gtf.gz | cgat gtf2table -v 0 --genome=hg19 --reporter=transcripts --counter=length --counter=composition-cpg

+---------------+----+---+---+--------+------+--------+----+---+---+----------+------------+-----------+
|transcript_id  |nval|min|max|mean    |median|stddev  |sum |q1 |q3 |CpG_count |CpG_density |CpG_ObsExp |
+---------------+----+---+---+--------+------+--------+----+---+---+----------+------------+-----------+
|ENST00000592209|3   |58 |227|149.6667|164.0 |69.7344 |449 |58 |227|4         |0.01781     |0.13946    |
+---------------+----+---+---+--------+------+--------+----+---+---+----------+------------+-----------+
|ENST00000589741|2   |71 |312|191.5000|191.5 |120.5000|383 |71 |312|5         |0.02610     |0.17067    |
+---------------+----+---+---+--------+------+--------+----+---+---+----------+------------+-----------+
|ENST00000391654|2   |39 |583|311.0000|311.0 |272.0000|622 |39 |583|4         |0.01286     |0.09402    |
+---------------+----+---+---+--------+------+--------+----+---+---+----------+------------+-----------+
|ENST00000587045|1   |173|173|173.0000|173.0 |0.0000  |173 |173|173|1         |0.01156     |0.11396    |
+---------------+----+---+---+--------+------+--------+----+---+---+----------+------------+-----------+

Note that we had to use the ``--genome-file`` option to supply the
genomic sequence.

Additional switches permit counting introns instead of exons (option
``--section``).

Annotations
-----------

The annotations might be derived from a property of the transcript or
gene model itself (such as length, number of exons, etc), the genomic
sequence (such as composition, etc) or require additional data sets.
For example, to compute the coverage with reads, a :term:`bam` formatted
file is required (see option ``--bam-file``). Or to compute the overlap
with genomic densities, a :term:`bigwig` formatted file is required (see
option ``--bigwig-file``).

This section lists the counters available. They are grouped by data sources
they require.

Generic annotations
+++++++++++++++++++

Generic annotations require no additional data source to annotate a
transcript or gene.

length
   output exon length summary of transcript/gene. This counter outputs the
   number of exons in each transcript/gene together with exon length summary
   statistics (minimal exon length, maximal exon length, total exon length).

position
   output genomic coordinates of transcript/gene (chromosome, start, end).

Sequence derived annotations
++++++++++++++++++++++++++++

Sequence derived annotations require the genomic sequence to compute
properties of the gene/transcript model (see option ``--genome-file``).

composition-na
   output nucleotide composition of transcript/gene

composition-cgp
   output CpG count, CpG density and CpG observed / expected for
   each transcript/gene.

splice
   output splicing summary of transcript/gene. Outputs the number of
   canonical and non-canonical splice sites.

quality
   output base-quality information summary of gene. Needs quality scores.

Interval derived annotations
++++++++++++++++++++++++++++

Annotations in the list below relate a gene or transcript to a set of
intervals given as a second file. The second set of intervals is given
by the option ``filename-gff``. By default, the intervals are expected
to be given as a :term:`gff` formatted file, but alternative formats
(:term:`gtf` and :term:`bed`) are possible (see option
``--filename-format``)

overlap
    compute overlap of genes in input with features in second stream.
    Requires a :term:`gff` formatted file with gene territories.

overlap-stranded
    count overlap with genomic features in second another file. Outputs
    the number of overlapping exons. Records the direction of overlap
    (sense/antisense). Requires a :term:`gff` formatted file with
    features.

territories
    compute overlap of transcripts/genes with territories. Territories
    are genomic, non-overlapping intervals. For each transcript the
    counter outputs the status (U=unique match, A=ambiguous match
    (overlap with multiple territories, 0=no match), the number of
    territories it overlaps and the territories it overlaps.

coverage

   compute the coverage - per nucleotide - of the gene/transcript
   models with intervals given in ``--gff-file``.  Coverage values
   are output in 5' to 3' together with summary statistics (bases
   covered, minimum, maximum coverage, etc.). By using the options
   ``--restrict-feature`` or ``--restrict-source`` the counting can be
   rescricted to particular features or sources in the :term:`gff` file.

distance

   compute distance of genes to features in a second file. Requires a
   second :term:`gff` formatted file. The strand information of the
   features is ignored.

binding-pattern

   given a list of intervals, determine the binding pattern within and
   surrounding the gene. For each gene, intervals overlapping the CDS,
   introns, UTRs and the flank are collected and recorded. The binding
   is summarized with a binding pattern, a binary pattern indicating
   overlap/no overlap with 5' flank, 5' UTR, CDS, Introns, 3' UTR, 3'
   flank. This method is useful to check where transcription factor binding
   sites are located aronud a gene/transcript model.

proximity

   report summary stats (lengths, values) of features in proximity to
   genes input gene set. Requires a :term:`gff` formatted file with
   genomic features. This feature is useful when aiming to normalize a
   value, such as a substitution rate of a transcript model, by
   substitution rates of segments in the neighbourhood such as
   ancestral repeats. The values are given in the ``score`` field of
   the :term:`gff` formatted file. The radius for proximity is controlled
   by the option ``--proximal-distance``.

proximity-exclusive

   as proximity, but exclude any ranges in the :term:`gff` formatted file that
   overlap the transcript/gene model.

proximity-lengthmatched

   as proximity-exclusive, but length-match features with
   genes. Segments are declared equal in length if they are within
   10% of the original segments length.

neighbours
    output features in second stream that are in proximity to genes
    in input. This is similar to the ``proximity`` counters, but also
    outputs the features that are in proximity.

Gene set derived annotations
++++++++++++++++++++++++++++

distance-genes
   compute distance of genes to genes in a second file. Requires a
   second :term:`gtf` formatted file with genes. The counter distinguishes
   a variety of cases (closest upstream/downstream).

distance-tss
   compute distance of genes to transcription start sites. Requires a
   second :term:`gtf` formatted file with genes.

overlap-transcripts
    count overlap of genes with transcripts in another set.
    Requires a :term:`gtf` formatted file.

overrun
   output intron overrun, exons in the input gene set extending
   into the introns of a reference gene set. Requries a :term:`gtf`
   formatted file with a reference gene set.

splice-comparison
   Compare how splice site usage compares between a gene/transcript
   with transcripts in a reference gene set. Outputs found, missed,
   perfect, partial, incomplete splice sites and exon-skipping events.

Short-read derived annotations
++++++++++++++++++++++++++++++

Short-read derived annotations count the overlap of reads given
in a :term:`bam` formatted file (see option ``--bam-file``) with
gene or transcript models.

read-overlap

   output number of reads overlapping a transcript/gene model.
   Outputs the number of reads overlapping the transcript/gene model.
   Reads are counted separately for sense and antisense overlap.

read-coverage

   output read coverage summary statistics of transcript/gene model.
   Outputs the number of reads overlapping the transcript/gene model,
   the number of bases overlapped by reads and summary statistics of
   the minimimum, maximum, etc. coverage per pase. Reads are counted
   separately for sense and antisense overlap. The counter does not
   take into account splice sites. As it does per-base counting,
   it is slower than ``read-overlap`` and there is no need to
   use both at the same time.

read-extension

   Counter of special interest. This counter outputs the read density
   in bins upstream, within and downstream of transcript models. The
   counter can be used to predict the length of the 3' and 5' UTR.

read-fullcounts

   count number of reads overlapping a gene or transcript. Reads
   are classified according to the type of overlap (sense/antisense),
   full or partial match to exon, splice status (spliced/unspliced).
   See below for more information.

   Unique and non-unique matches are counted (by alignment start
   position).

read-counts

   count number of reads overlapping a gene or transcript. Summarizes
   the output of read-fullcounts.

readpair-fullcounts

   count number of read pairs overlapping a gene or transcript. Pairs
   are counted according to a variety of attributes (exonic
   overlap/read pair status/splice status/...). See below for more
   information.

readpair-counts

   count number of read pairs overlapping a gene or
   transcript. Summarizes the output of readpair-fullcounts.

Classifiers
-----------

Classifiers not only annotate the transcripts or gene model, but also
aim to provide some classification based on these annotations. They
require a secondary file (see option ``--gff-file``) for the
classification.

classifier

   classify transcripts according to genomic annotation.  Requires a
   :term:`gff` file with genomic annotations (see :doc:`gtf2gff`)
   delineating genomic regions as intronic, intergenic, exonic,
   etc. This is useful for a rough classification of transcripts as
   intergenic, intronic, etc.

   Best used for ChIP-Seq data sets (each peak is a "transcript"). The
   method is a little out of place in this script, but is here as it
   uses much of the code implemented here.

classifier-rnaseq

   classify transcripts with respect to a reference geneset. The
   classifiers aims to match a transcript up with the "most similar"
   transcript in the reference gene set and dependending on
   attributes, classifies it as a good match, alternative transcript,
   fragment, etc. The classifier takes into account strand and prefers
   sense matches to antisense matches.

classifier-polii

   classify according to PolII transcripts. A gene/transcript is
   transcribed, if it is covered by large PolII intervals over 80% of
   its length. A gene/transript is primed if its promotor/UTR is
   covered by 50% of its length, while the rest of the gene body
   isn't.

Other annotations
++++++++++++++++++

The following methods (see option ``--counter``) are available:

bigwig-counts

   collect density values from a :term:`bigwig` formatted file and output
   summary statistics and percentage of bases covered (``pcovered``)
   by value in bigwig file. Requires option ``--bigwig-file``.

Read counting
-------------

The methods ``read-counts`` and ``readpair-counts`` count the number
of reads inside a :term:`bam` formatted file that map inside a
transcript or gene.

These counters proceed on a per-gene or per-transcript basis depending
on the ``--reporter`` option. All reads overlapping the exons or
introns of a transcript are collected and counted either individually
(``read-counts``) or as pairs (``readpair-counts``).

For paired-read counting, each pair is classified and counted
according to the following for axes:

1. Pair status: proper pair, unmapped read in pair, ...
2. Direction: for stranded protocols, sense, antisense, ...
3. Overlap status: Pair overlaps exons only, introns only, ...
4. Splice status: Reads are unspliced, spliced consistently with
   transcript model, or inconsistently with transcript model

Counts are then collated into a smaller set of summaries for convenience:

+--------------------+----------------------------------------------------+
|Column              |Number of read pairs                                |
+--------------------+----------------------------------------------------+
|counted_all         |considered to be correct: they are sense, overlap   |
|                    |with exons fully.                                   |
+--------------------+----------------------------------------------------+
|counted_spliced     |in sense direction and exonic, spliced and spliced  |
|                    |correctly.                                          |
|                    |                                                    |
+--------------------+----------------------------------------------------+
|counted_unspliced   |in sense direction and exonic, not spliced.         |
+--------------------+----------------------------------------------------+
|sense_intronic      |intronic and sense direction.                       |
+--------------------+----------------------------------------------------+
|sense_inconsistent  |in sense direction, but overlap both introns and    |
|                    |exons or extend beyond the transcript modelse       |
+--------------------+----------------------------------------------------+
|sense_other         |in sense direction, but not counted, intronic or    |
|                    |inconsistent.                                       |
+--------------------+----------------------------------------------------+
|antisense           |in antisense direction.                             |
+--------------------+----------------------------------------------------+
|nonsense            |in unexpected orientation                           |
+--------------------+----------------------------------------------------+
|notproper           |that are not proper pairs                           |
+--------------------+----------------------------------------------------+
|quality_pairs       |affected by a the removal of a low-quality read     |
+--------------------+----------------------------------------------------+
|quality_reads       |Number of low quality reads removed                 |
+--------------------+----------------------------------------------------+
|total               |Total number of pairs considered                    |
+--------------------+----------------------------------------------------+

The Counter ``readpair-fullcounts`` provides the detailed counts
for each transcript model according to the four axes. The output
can be used to implement custom counting schemes.

Reads below a minimum quality score will be ignored
(``--min-read-quality``). By default, all reads will be counted.

Reads mapping to multiple locations will be downweighted if
the ``--weight-multi-mapping`` option is set. This requires
the presence of the ``NH`` flag in the :term:`bam` file.

For paired read counting, the library type can be specified with the
``--library-type`` option to make use of strand information. Library
types are labelled according to the tophat_ and cufflinks_
convention. A summary is `here
<http://www.nature.com/nprot/journal/v7/n3/fig_tab/nprot.2012.016_T1.html>`_.

+--------------------+--------------------+------------------------------+
|Library type        |RNA-seq protocol    |Explanation                   |
+--------------------+--------------------+------------------------------+
|fr-unstranded       |Illumina TruSeq     |Reads from the leftmost end of|
| (default)          |                    |the fragment (in transcript   |
|                    |                    |coordinates) map to the       |
|                    |                    |transcript strand, and the    |
|                    |                    |rightmost end maps to the     |
|                    |                    |opposite strand left          |
|                    |                    |                              |
+--------------------+--------------------+------------------------------+
|fr-firststrand      |dUTP, NSR, NNSR39   |Same as above except we       |
|                    |                    |enforce the rule that the     |
|                    |                    |rightmost end of the fragment |
|                    |                    |(in transcript coordinates) is|
|                    |                    |the first sequenced (or only  |
|                    |                    |sequenced for single-end      |
|                    |                    |reads). Equivalently, it is   |
|                    |                    |assumed that only the strand  |
|                    |                    |generated during first strand |
|                    |                    |synthesis is sequenced        |
+--------------------+--------------------+------------------------------+
|fr-secondstrand     |Directional Illumina|Same as above                 |
|                    |(Ligation)          |except TopHat/Cufflinks       |
|                    |Standard SOLiD      |enforce the rule that the     |
|                    |                    |leftmost end of the fragment  |
|                    |                    |(in transcript coordinates) is|
|                    |                    |the first sequenced (or only  |
|                    |                    |sequenced for single-end      |
|                    |                    |reads). Equivalently, it is   |
|                    |                    |assumed that only the strand  |
|                    |                    |generated during second strand|
|                    |                    |synthesis is sequenced        |
+--------------------+--------------------+------------------------------+

For unstranded protocols, all reads and pairs are considered to matching
in the sense direction.

Usage
-----

Type::

   python gtf2table.py --help

for command line help.

Command line options
--------------------

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -g GENOME_FILE, --genome-file GENOME_FILE
                        filename with genome. (default: None)
  -q QUALITY_FILE, --quality-file QUALITY_FILE
                        filename with genomic base quality information.
                        (default: None)
  -b bam, --bam-file bam
                        filename with read mapping information. Multiple files
                        can be submitted in a comma-separated list. (default:
                        None)
  -i bigwig, --bigwig-file bigwig
                        filename with bigwig information (default: None)
  -f bed, --gff-file bed
                        filename with extra gff files. The order is important.
                        (default: [])
  --filename-format {bed,gff,gtf}
                        format of secondary stream. (default: None)
  --restrict-source GFF_SOURCES
                        restrict input to this 'source' in extra gff file (for
                        counter: overlap). (default: [])
  --restrict-feature GFF_FEATURES
                        restrict input to this 'feature' in extra gff file
                        (for counter: overlap). (default: [])
  -r {genes,transcripts}, --reporter {genes,transcripts}
                        report results for 'genes' or 'transcripts' (default:
                        genes)
  -s {exons,introns}, --section {exons,introns}
                        select range on which counters will operate (default:
                        [])
  -c {bigwig-counts,binding-pattern,classifier,classifier-rnaseq,classifier-rnaseq-splicing,classifier-polii,composition-na,composition-cpg,coverage,distance,distance-genes,distance-tss,length,neighbours,overlap,overlap-stranded,overlap-transcripts,overrun,position,proximity,proximity-exclusive,proximity-lengthmatched,quality,read-coverage,read-extension,read-overlap,read-counts,read-fullcounts,readpair-counts,readpair-fullcounts,splice,splice-comparison,territories}, --counter {bigwig-counts,binding-pattern,classifier,classifier-rnaseq,classifier-rnaseq-splicing,classifier-polii,composition-na,composition-cpg,coverage,distance,distance-genes,distance-tss,length,neighbours,overlap,overlap-stranded,overlap-transcripts,overrun,position,proximity,proximity-exclusive,proximity-lengthmatched,quality,read-coverage,read-extension,read-overlap,read-counts,read-fullcounts,readpair-counts,readpair-fullcounts,splice,splice-comparison,territories}
                        select counters to apply to input (default: [])
  --add-gtf-source      add gtf field of source to output (default: False)
  --proximal-distance PROXIMAL_DISTANCE
                        distance to be considered proximal to an interval.
                        (default: 10000)
  --multi-mapping-method {all,ignore,weight}
                        how to treat multi-mapping reads in bam-files.
                        Requires the NH flag to be set by the mapper (default:
                        all)
  --use-barcodes        Use barcodes to count unique umi's. UMI's are
                        specified in the read identifier as the last field,
                        where fields are separated by underscores, e.g.
                        @READ:ILLUMINA:STUFF_NAMINGSTUFF_UMI. When true,
                        unique counts are returned. Currently only compatible
                        with count-reads (default: False)
  --sample-probability SAMPLE_PROBABILITY
                        Specify the probability of whether anygiven read or
                        read pair in a file bam is countedCurrently only
                        compatible with count-reads (default: 1.0)
  --column-prefix PREFIXES
                        add prefix to column headers - prefixes are used in
                        the same order as the counters (default: [])
  --library-type {unstranded,firststrand,secondstrand,fr-unstranded,fr-firststrand,fr-secondstrand}
                        library type of reads in bam file. (default: fr-
                        unstranded)
  --min-mapping-quality MINIMUM_MAPPING_QUALITY
                        minimum mapping quality. Reads with a quality score of
                        less will be ignored. (default: 0)

Script timing options:
  --timeit TIMEIT_FILE  store timeing information in file. (default: None)
  --timeit-name TIMEIT_NAME
                        name in timing file for this class of jobs (default:
                        all)
  --timeit-header       add header for timing information. (default: None)

Common options:
  --random-seed RANDOM_SEED
                        random seed to initialize number generator with
                        (default: None)
  -v LOGLEVEL, --verbose LOGLEVEL
                        loglevel. The higher, the more output. (default: 1)
  --log-config-filename LOG_CONFIG_FILENAME
                        Configuration file for logger. (default: logging.yml)
  --tracing {function}  enable function tracing. (default: None)
  -? ?                  output short help (command line options only.
                        (default: None)

Input/output options:
  -P OUTPUT_FILENAME_PATTERN, --output-filename-pattern OUTPUT_FILENAME_PATTERN
                        OUTPUT filename pattern for various methods (default:
                        %s)
  -F, --force-output    force over-writing of existing files. (default: False)
  -I STDIN, --stdin STDIN
                        file to read stdin from. (default: <_io.TextIOWrapper
                        name='<stdin>' mode='r' encoding='utf-8'>)
  -L STDLOG, --log STDLOG
                        file with logging information. (default:
                        <_io.TextIOWrapper name='<stdout>' mode='w'
                        encoding='utf-8'>)
  -E STDERR, --error STDERR
                        file with error information. (default:
                        <_io.TextIOWrapper name='<stderr>' mode='w'
                        encoding='utf-8'>)
  -S STDOUT, --stdout STDOUT
                        file where output is to go. (default:
                        <_io.TextIOWrapper name='<stdout>' mode='w'
                        encoding='utf-8'>)
usage: bam2bed [-h] [--version] [-m] [--max-insert-size MAX_INSERT_SIZE]
               [--min-insert-size MIN_INSERT_SIZE] [--bed-format {3,4,5,6}]
               [--timeit TIMEIT_FILE] [--timeit-name TIMEIT_NAME]
               [--timeit-header] [--random-seed RANDOM_SEED] [-v LOGLEVEL]
               [--log-config-filename LOG_CONFIG_FILENAME]
               [--tracing {function}] [-? ?] [-I STDIN] [-L STDLOG]
               [-E STDERR] [-S STDOUT]

bam2bed.py - convert bam formatted file to bed formatted file
================================================================

:Tags: Genomics NGS Intervals BAM BED Conversion

Purpose
-------

This tool converts BAM files into BED files supplying the intervals
for each read in the BAM file.  BAM files must have a corresponding
index file ie. example.bam and example.bam.bai

For example::

   samtools view example.bam

   READ1    163    1      13040   15     76M    =      13183   219     ...
   READ1    83     1      13183   7      76M    =      13040   -219    ...
   READ2    147    1      13207   0      76M    =      13120   -163    ...

   python bam2bed.py example.bam

   1       13039   13115   READ1     15      +
   1       13119   13195   READ2     0       +
   1       13182   13258   READ1     7       -
   1       13206   13282   READ2     0       -

By default, bam2bed outputs each read as a separate interval.  With
the option ``--merge-pairs`` paired-end reads are merged and output as
a single interval. The strand is set according to the first read in a
pair.

Usage
-----

::

   cgat bam2bed BAMFILE [--merge-pairs] [options]

operates on the file BAMFILE::

   cgat bam2bed [--merge-pairs] [options]

operates on the stdin as does::

   cgat bam2bed -I BAMFILE [--merge-pairs] [options]

To merge paired-end reads and output fragment interval ie. leftmost
mapped base to rightmost mapped base::

   cat example.bam | cgat bam2bed --merge-pairs

   1       13119   13282   READ2     0       +
   1       13039   13258   READ1     7       +

To use merge pairs on only a region of the genome use samtools view::

   samtools view -ub example.bam 1:13000:13100 | cgat bam2bed --merge-pairs

Note that this will select fragments were the first read-in-pair is in
the region.

Options
-------

-m, --merge-pairs
    Output one region per fragment rather than one region per read,
    thus a single region is create stretching from the start of the
    frist read in pair to the end of the second.

    Read pairs that meet the following criteria are removed:

    * Reads where one of the pair is unmapped
    * Reads that are not paired
    * Reads where the pairs are mapped to different chromosomes
    * Reads where the the insert size is not between the max and
      min (see below)

.. warning::

    Merged fragements are always returned on the +ve strand.
    Fragement end point is estimated as the alignment start position
    of the second-in-pair read + the length of the first-in-pair
    read. This may lead to inaccuracy if you have an intron-aware
    aligner.

--max-insert-size, --min-insert-size
    The maximum and minimum size of the insert that is allowed when
    using the --merge-pairs option. Read pairs closer to gether or futher
    apart than the min and max repsectively are skipped.

-b, --bed-format
    What format to output the results in. The first n columns of the bed
    file will be output.

Type::

   python bam2bed.py --help

for command line help.

Command line options
--------------------

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  -m, --merge-pairs     merge paired-ended reads and output interval for
                        entire fragment. (default: None)
  --max-insert-size MAX_INSERT_SIZE
                        only merge paired-end reads if they are less than #
                        bases apart. 0 turns off this filter. (default: 0)
  --min-insert-size MIN_INSERT_SIZE
                        only merge paired-end reads if they are at least #
                        bases apart. 0 turns off this filter. (default: 0)
  --bed-format {3,4,5,6}
                        bed format to output. (default: 6)

Script timing options:
  --timeit TIMEIT_FILE  store timeing information in file. (default: None)
  --timeit-name TIMEIT_NAME
                        name in timing file for this class of jobs (default:
                        all)
  --timeit-header       add header for timing information. (default: None)

Common options:
  --random-seed RANDOM_SEED
                        random seed to initialize number generator with
                        (default: None)
  -v LOGLEVEL, --verbose LOGLEVEL
                        loglevel. The higher, the more output. (default: 1)
  --log-config-filename LOG_CONFIG_FILENAME
                        Configuration file for logger. (default: logging.yml)
  --tracing {function}  enable function tracing. (default: None)
  -? ?                  output short help (command line options only.
                        (default: None)

Input/output options:
  -I STDIN, --stdin STDIN
                        file to read stdin from. (default: <_io.TextIOWrapper
                        name='<stdin>' mode='r' encoding='utf-8'>)
  -L STDLOG, --log STDLOG
                        file with logging information. (default:
                        <_io.TextIOWrapper name='<stdout>' mode='w'
                        encoding='utf-8'>)
  -E STDERR, --error STDERR
                        file with error information. (default:
                        <_io.TextIOWrapper name='<stderr>' mode='w'
                        encoding='utf-8'>)
  -S STDOUT, --stdout STDOUT
                        file where output is to go. (default:
                        <_io.TextIOWrapper name='<stdout>' mode='w'
                        encoding='utf-8'>)

Resource usage statistics from testing cgat-apps:
   Process count: 4
   CPU time: Sys=0:00:00.6, User=0:00:01.3
   Memory: 72.5M
   Disk usage: 16B
   Time elapsed: 0:00:16.4


TEST END: cgat-apps-0.6.4-py38h01f53dd_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package          Version  Build        Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge  conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu        conda-forge/linux-64                    Cached
  + infernal         1.1.4  h779adbc_0   /home/vsts/conda/conda-bld/linux-64       3 MB
  + libgcc-ng       11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached

  Summary:

  Install: 5 packages

  Total download: 3 MB

─────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: infernal-1.1.4-h779adbc_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/infernal_1630452963489/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge   conda-forge
    _openmp_mutex: 4.5-1_gnu         conda-forge
    infernal:      1.1.4-h779adbc_0  local      
    libgcc-ng:     11.1.0-hc902ee8_8 conda-forge
    libgomp:       11.1.0-hc902ee8_8 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/infernal_1630452963489/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pla
export SRC_DIR=/home/vsts/conda/conda-bld/infernal_1630452963489/test_tmp
# cmalign :: align sequences to a CM
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmalign [-options] <cmfile> <seqfile>

Basic options:
  -h     : show brief help on version and usage
  -o <f> : output the alignment to file <f>, not stdout
  -g     : configure CM for global alignment [default: local]

Options controlling alignment algorithm:
  --optacc   : use the Holmes/Durbin optimal accuracy algorithm  [default]
  --cyk      : use the CYK algorithm
  --sample   : sample alignment of each seq from posterior distribution
  --seed <n> : w/--sample, set RNG seed to <n> (if 0: one-time arbitrary seed)
  --notrunc  : do not use truncated alignment algorithm
  --sub      : build sub CM for columns b/t HMM predicted start/end points

Options controlling speed and memory requirements:
  --hbanded    : accelerate using CM plan 9 HMM derived bands  [default]
  --tau <x>    : set tail loss prob for HMM bands to <x>  [1e-7]  (1e-18<x<1)
  --mxsize <x> : set maximum allowable DP matrix size to <x> Mb  [1028.0]  (x>0.)
  --fixedtau   : do not adjust tau (tighten bands) until mx size is < limit
  --maxtau <x> : set max tau <x> when tightening HMM bands  [0.05]  (0<x<0.5)
  --nonbanded  : do not use HMM bands for faster alignment
  --small      : use small memory divide and conquer (d&c) algorithm

Optional output files:
  --sfile <f>  : dump alignment score information to file <f>
  --tfile <f>  : dump individual sequence parsetrees to file <f>
  --ifile <f>  : dump information on per-sequence inserts to file <f>
  --elfile <f> : dump information on per-sequence EL inserts to file <f>

Other options:
  --mapali <f>    : include alignment in file <f> (same ali that CM came from)
  --mapstr        : include structure (w/pknots) from <f> from --mapali <f>
  --noss          : cmbuild --noss option was used w/aln from --mapali <f>
  --informat <s>  : assert <seqfile> is in format <s>: no autodetection
  --outformat <s> : output alignment in format <s>  [Stockholm]
  --dnaout        : output alignment as DNA (not RNA) sequence data
  --noprob        : do not include posterior probabilities in the alignment
  --matchonly     : include only match columns in output alignment
  --ileaved       : force output in interleaved Stockholm format
  --regress <f>   : save regression test data to file <f>
  --verbose       : report extra information; mainly useful for debugging
  --cpu <n>       : number of parallel CPU workers to use for multithreads  (n>=0)

Sequence input formats:   FASTA, GenBank
Alignment output formats: Stockholm, Pfam, AFA (aligned FASTA), A2M, Clustal, PHYLIP

# cmbuild :: covariance model construction from multiple sequence alignments
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmbuild [-options] <cmfile_out> <msafile>

Basic options:
  -h        : show brief help on version and usage
  -n <s>    : name the CM(s) <s>, (only if single aln in file)
  -F        : force; allow overwriting of <cmfile_out>
  -o <f>    : direct summary output to file <f>, not stdout
  -O <f>    : resave consensus/insert column annotated MSA to file <f>
  --devhelp : show list of otherwise hidden developer/expert options

Alternative model construction strategies:
  --fast        : assign cols w/ >= symfrac residues as consensus
  --hand        : use reference coordinate annotation to specify consensus
  --symfrac <x> : fraction of non-gaps to require in a consensus column [0..1]
  --noss        : ignore secondary structure annotation in input alignment
  --rsearch <f> : use RSEARCH parameterization with RIBOSUM matrix file <f>

Other model construction options*:
  --null <f>  : read null (random sequence) model from file <f>
  --prior <f> : read priors from file <f>

Alternative relative sequence weighting strategies:
  --wpb     : Henikoff position-based weights  [default]
  --wgsc    : Gerstein/Sonnhammer/Chothia tree weights
  --wnone   : don't do any relative weighting; set all to 1
  --wgiven  : use weights as given in MSA file
  --wblosum : Henikoff simple filter weights
  --wid <x> : for --wblosum: set identity cutoff  [0.62]  (0<=x<=1)

Alternative effective sequence weighting strategies:
  --eent        : adjust eff seq # to achieve relative entropy target  [default]
  --enone       : no effective seq # weighting: just use nseq
  --ere <x>     : for --eent: set CM target relative entropy to <x>
  --eset <x>    : set eff seq # for all models to <x>
  --eminseq <x> : for --eent: set minimum effective sequence number to <x>  [0.1]
  --emaxseq <x> : for --eent: set maximum effective sequence number to <x>
  --ehmmre <x>  : for --eent: set minimum HMM relative entropy to <x>
  --esigma <x>  : for --eent: set sigma param to <x>  [45.0]

Options for HMM filter construction*:
  --p7ere <x> : for the filter p7 HMM, set minimum rel entropy/posn to <x>
  --p7ml      : define the filter p7 HMM as the ML p7 HMM

Options for HMM filter calibration*:
  --EmN <n>  : number of sampled seqs to use for p7 local MSV calibration  [200]
  --EvN <n>  : number of sampled seqs to use for p7 local Vit calibration  [200]
  --ElfN <n> : number of sampled seqs to use for p7 local Fwd calibration  [200]
  --EgfN <n> : number of sampled seqs to use for p7 glocal Fwd calibration  [200]

Options for refining the input alignment*:
  --refine <f> : refine input aln w/Expectation-Maximization, save to <f>
  -l           : w/--refine, configure model for local alignment [default: global]
  --gibbs      : w/--refine, use Gibbs sampling instead of EM
  --seed <n>   : w/--gibbs, set RNG seed to <n> (if 0: one-time arbitrary seed)
  --cyk        : w/--refine, use CYK instead of optimal accuracy
  --notrunc    : w/--refine, do not use truncated alignment algorithm

*Use --devhelp to show additional expert options.
# cmcalibrate :: fit exponential tails for CM E-values
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmcalibrate [-options] <cmfile>

Basic options:
  -h     : show brief help on version and usage
  -L <x> : set random seq length to search in Mb to <x>  [1.6]  (0.01<=x<=160.)

Options for predicting running time and memory requirements:
  --forecast      : don't do calibration, predict running time and exit
  --nforecast <n> : w/--forecast, predict time with <n> processors (maybe for MPI)
  --memreq        : don't do calibration, print required memory and exit
  --noforecast    : do calibration, but skip running time prediction

Options controlling exponential tail fits:
  --gtailn <n> : fit the top <n> hits/Mb in histogram for glocal modes [df: 250]
  --ltailn <n> : fit the top <n> hits/Mb in histogram for  local modes [df: 750]
  --tailp <x>  : set fraction of histogram tail to fit to exp tail to <x>

Optional output files:
  --hfile <f>  : save fitted score histogram(s) to file <f>
  --sfile <f>  : save survival plot to file <f>
  --qqfile <f> : save Q-Q plot for score histograms to file <f>
  --ffile <f>  : save lambdas for different tail fit probs to file <f>
  --xfile <f>  : save scores in fit tail to file <f>

Other options:
  --seed <n>  : set RNG seed to <n> (if 0: one-time arbitrary seed)
  --beta <x>  : set tail loss prob for query dependent banding (QDB) to <x>
  --nonbanded : do not use QDB
  --nonull3   : turn OFF the NULL3 post hoc additional null model
  --random    : use GC content of random null background model of CM
  --gc <f>    : use GC content distribution from file <f>
  --cpu <n>   : number of parallel CPU workers to use for multithreads
# cmconvert :: convert CM file to a different Infernal format
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmconvert [-options] <cmfile>

Options:
  -h      : show brief help on version and usage
  -a      : ascii:  output models in INFERNAL 1.1 ASCII format  [default]
  -b      : binary: output models in INFERNAL 1.1 binary format
  -1      : output backward compatible Infernal v0.7-->v1.0.2 ASCII format
  -o <f>  : save CM file to file <f>, not stdout
  --mlhmm : output maximum likelihood HMM for CM in HMMER3 format
  --fhmm  : output filter HMM for CM in HMMER3 format
# cmemit :: sample sequences from a covariance model
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmemit [-options] <cmfile>

Basic options:
  -h     : show brief help on version and usage
  -o <f> : send sequence output to file <f>, not stdout
  -N <n> : generate <n> sequences  [10]
  -u     : write generated sequences as unaligned FASTA [default]  [default]
  -a     : write generated sequences as an alignment
  -c     : generate a single "consensus" sequence only
  -e <n> : embed emitted sequences within larger random sequences of length <n>
  -l     : local; emit from a locally configured model [default: global]

Options for truncating sequences:
  --u5p     : truncate unaligned sequences 5', choosing a random start posn
  --u3p     : truncate unaligned sequences 3', choosing a random end   posn
  --a5p <n> : truncate aln 5', start at match column <n> (use 0 for random posn)
  --a3p <n> : truncate aln 3', end   at match column <n> (use 0 for random posn)

Other options:
  --seed <n>      : set RNG seed to <n> [default: one-time arbitrary seed]  [0]
  --iid           : with -e, generate larger sequences as 25% ACGU (iid) 
  --rna           : output as RNA sequence data  [default]
  --dna           : output as DNA sequence data
  --idx <n>       : start sequence numbering at <n>  [1]
  --outformat <s> : w/-a output alignment in format <s>  [Stockholm]
  --tfile <f>     : dump parsetrees to file <f>
  --exp <x>       : exponentiate CM probabilities by <x> before emitting
  --hmmonly       : emit from filter HMM, not from CM
  --nohmmonly     : always emit from CM, even for models with 0 basepairs

Alignment output formats (-a) include: Stockholm, Pfam, AFA (aligned FASTA), A2M, Clustal, PHYLIP

# cmfetch :: retrieve CMs from a file
# Easel 0.48 (Nov 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmfetch [options] <cmfile> <key>         (retrieves CM named <key>)
Usage: cmfetch [options] -f <cmfile> <keyfile>  (retrieves all CMs in <keyfile>)
Usage: cmfetch [options] --index <cmfile>       (indexes <cmfile>)

 where options are:
  -h      : help; show brief info on version and usage
  -f      : second cmdline arg is a file of names to retrieve
  -o <f>  : output CM to file <f> instead of stdout
  -O      : output CM to file named <key>
  --index : index the <cmfile>, creating <cmfile>.ssi
# cmpress :: prepare an CM database for faster cmscan searches
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmpress [-options] <cmfile>

Options:
  -h : show brief help on version and usage
  -F : force: overwrite any previous pressed files
# cmscan :: search sequence(s) against a CM database
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmscan [-options] <cmdb> <seqfile>

Basic options:
  -h        : show brief help on version and usage
  -g        : configure CM for glocal alignment [default: local]
  -Z <x>    : set search space size in *Mb* to <x> for E-value calculations  (x>0)
  --devhelp : show list of otherwise hidden developer/expert options

Options directing output:
  -o <f>       : direct output to file <f>, not stdout
  --tblout <f> : save parseable table of hits to file <s>
  --fmt <n>    : set hit table format to <n>  (1<=n<=2)
  --acc        : prefer accessions over names in output
  --noali      : don't output alignments, so output is smaller
  --notextw    : unlimit ASCII text output line width
  --textw <n>  : set max width of ASCII text output lines  [120]  (n>=120)
  --verbose    : report extra information; mainly useful for debugging

Options controlling reporting thresholds:
  -E <x> : report sequences <= this E-value threshold in output  [10.0]  (x>0)
  -T <x> : report sequences >= this score threshold in output

Options controlling inclusion (significance) thresholds:
  --incE <x> : consider sequences <= this E-value threshold as significant  [0.01]
  --incT <x> : consider sequences >= this score threshold as significant

Options controlling model-specific reporting thresholds:
  --cut_ga : use CM's GA gathering cutoffs as reporting thresholds
  --cut_nc : use CM's NC noise cutoffs as reporting thresholds
  --cut_tc : use CM's TC trusted cutoffs as reporting thresholds

Options controlling acceleration heuristics*:
  --max      : turn all heuristic filters off (slow)
  --nohmm    : skip all HMM filter stages, use only CM (slow)
  --mid      : skip first two HMM filter stages (SSV & Vit)
  --default  : default: run search space size-dependent pipeline  [default]
  --rfam     : set heuristic filters at Rfam-level (fast)
  --hmmonly  : use HMM only, don't use a CM at all
  --FZ <x>   : set filters to defaults used for a search space of size <x> Mb
  --Fmid <x> : with --mid, set P-value threshold for HMM stages to <x>  [0.02]

Other options*:
  --notrunc     : do not allow truncated hits at sequence termini
  --anytrunc    : allow full and truncated hits anywhere within sequences
  --nohmmonly   : never run HMM-only mode, not even for models with 0 basepairs
  --nonull3     : turn off the NULL3 post hoc additional null model
  --mxsize <x>  : set max allowed alnment mx size to <x> Mb [df: autodetermined]
  --smxsize <x> : set max allowed size of search DP matrices to <x> Mb  [128.]
  --cyk         : use scanning CM CYK algorithm, not Inside in final stage
  --acyk        : align hits with CYK, not optimal accuracy
  --wcx <x>     : set W (expected max hit len) as <x> * cm->clen (model len)
  --toponly     : only search the top strand
  --bottomonly  : only search the bottom strand
  --qformat <s> : assert query <seqfile> is in format <s>: no autodetection
  --glist <f>   : configure CMs listed in file <f> in glocal mode, others in local
  --clanin <f>  : read clan information from file <f>
  --oclan       : w/'--fmt 2' and '--tblout', only mark overlaps within clans
  --oskip       : w/'--fmt 2' and '--tblout', do not output lower scoring overlaps
  --cpu <n>     : number of parallel CPU workers to use for multithreads

*Use --devhelp to show additional expert options.
# cmsearch :: search CM(s) against a sequence database
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmsearch [options] <cmfile> <seqdb>

Basic options:
  -h        : show brief help on version and usage
  -g        : configure CM for glocal alignment [default: local]
  -Z <x>    : set search space size in *Mb* to <x> for E-value calculations  (x>0)
  --devhelp : show list of otherwise hidden developer/expert options

Options directing output:
  -o <f>       : direct output to file <f>, not stdout
  -A <f>       : save multiple alignment of all significant hits to file <s>
  --tblout <f> : save parseable table of hits to file <s>
  --acc        : prefer accessions over names in output
  --noali      : don't output alignments, so output is smaller
  --notextw    : unlimit ASCII text output line width
  --textw <n>  : set max width of ASCII text output lines  [120]  (n>=120)
  --verbose    : report extra information; mainly useful for debugging

Options controlling reporting thresholds:
  -E <x> : report sequences <= this E-value threshold in output  [10.0]  (x>0)
  -T <x> : report sequences >= this score threshold in output

Options controlling inclusion (significance) thresholds:
  --incE <x> : consider sequences <= this E-value threshold as significant  [0.01]
  --incT <x> : consider sequences >= this score threshold as significant

Options controlling model-specific reporting thresholds:
  --cut_ga : use CM's GA gathering cutoffs as reporting thresholds
  --cut_nc : use CM's NC noise cutoffs as reporting thresholds
  --cut_tc : use CM's TC trusted cutoffs as reporting thresholds

Options controlling acceleration heuristics*:
  --max      : turn all heuristic filters off (slow)
  --nohmm    : skip all HMM filter stages, use only CM (slow)
  --mid      : skip first two HMM filter stages (SSV & Vit)
  --default  : default: run search space size-dependent pipeline  [default]
  --rfam     : set heuristic filters at Rfam-level (fast)
  --hmmonly  : use HMM only, don't use a CM at all
  --FZ <x>   : set filters to defaults used for a search space of size <x> Mb
  --Fmid <x> : with --mid, set P-value threshold for HMM stages to <x>  [0.02]

Other options*:
  --notrunc     : do not allow truncated hits at sequence termini
  --anytrunc    : allow full and truncated hits anywhere within sequences
  --nonull3     : turn off the NULL3 post hoc additional null model
  --mxsize <x>  : set max allowed alnment mx size to <x> Mb [df: autodetermined]
  --smxsize <x> : set max allowed size of search DP matrices to <x> Mb  [128.]
  --cyk         : use scanning CM CYK algorithm, not Inside in final stage
  --acyk        : align hits with CYK, not optimal accuracy
  --wcx <x>     : set W (expected max hit len) as <x> * cm->clen (model len)
  --toponly     : only search the top strand
  --bottomonly  : only search the bottom strand
  --tformat <s> : assert target <seqdb> is in format <s>: no autodetection
  --cpu <n>     : number of parallel CPU workers to use for multithreads

*Use --devhelp to show additional expert options.
# cmstat :: display summary statistics for CMs
# INFERNAL 1.1.4 (Dec 2020)
# Copyright (C) 2020 Howard Hughes Medical Institute.
# Freely distributed under the BSD open source license.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Usage: cmstat [-options] <cmfile>

Options:
  -h          : show brief help on version and usage
  -E <x>      : print bit scores that correspond to E-value threshold of <x>
  -P <x>      : print bit scores that correspond to E-value threshold of <x>
  -T <x>      : print E-values that correspond to bit score threshold of <x>
  -Z <x>      : set database size in *Mb* to <x> for E-value calculations  [10]
  --cut_ga    : print E-values that correspond to GA bit score thresholds
  --cut_nc    : print E-values that correspond to NC bit score thresholds
  --cut_tc    : print E-values that correspond to TC bit score thresholds
  --key <s>   : only print statistics for CM with name or accession <s>
  --hmmonly   : print filter HMM bit scores/E-values, not CM ones
  --nohmmonly : print CM bit scores/E-values, even for models with 0 basepairs

Resource usage statistics from testing infernal:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: infernal-1.1.4-h779adbc_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


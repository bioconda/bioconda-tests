Updating build index: /home/vsts/conda/conda-bld

TEST START: aquila_stlfr-1.2.11-py_0.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /tmp/tmp3a4rw_2e/info/recipe/conda_build_config.yaml
  Package                  Version  Build                Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex              0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex              4.5  1_gnu                conda-forge/linux-64                    Cached
  + aquila_stlfr            1.2.11  py_0                 /home/vsts/conda/conda-bld/linux-64      17 MB
  + bzip2                    1.0.8  h7f98852_4           conda-forge/linux-64                    Cached
  + c-ares                  1.17.2  h7f98852_0           conda-forge/linux-64                    Cached
  + ca-certificates      2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + htslib                    1.13  h9093b5e_0           bioconda/linux-64                         2 MB
  + k8                       0.2.5  h9a82719_1           bioconda/linux-64                         2 MB
  + krb5                    1.19.2  hcc1bbae_0           conda-forge/linux-64                    Cached
  + ld_impl_linux-64        2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas                  3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcblas                 3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcurl                 7.78.0  h2574ce0_0           conda-forge/linux-64                    Cached
  + libdeflate                 1.7  h7f98852_5           conda-forge/linux-64                    Cached
  + libedit           3.1.20191231  he28a2e2_2           conda-forge/linux-64                    Cached
  + libev                     4.33  h516909a_1           conda-forge/linux-64                    Cached
  + libffi                     3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng               11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng          11.1.0  h69a702a_8           conda-forge/linux-64                    Cached
  + libgfortran5            11.1.0  h6c583b3_8           conda-forge/linux-64                    Cached
  + libgomp                 11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack                3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libnghttp2              1.43.0  h812cca2_0           conda-forge/linux-64                    Cached
  + libopenblas             0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                    Cached
  + libssh2                 1.10.0  ha56f1ee_0           conda-forge/linux-64                    Cached
  + libstdcxx-ng            11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + minimap2                  2.22  h5bf99c6_0           bioconda/linux-64                       483 KB
  + ncurses                    6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + numpy                   1.21.2  py39hdbf815f_0       conda-forge/linux-64                    Cached
  + openssl                 1.1.1l  h7f98852_0           conda-forge/linux-64                    Cached
  + pip                     21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + pysam                 0.16.0.1  py39h051187c_3       bioconda/linux-64                         3 MB
  + python                   3.9.7  h49503c6_0_cpython   conda-forge/linux-64                    Cached
  + python_abi                 3.9  2_cp39               conda-forge/linux-64                    Cached
  + readline                   8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + samtools                  1.13  h8c37831_0           bioconda/linux-64                       397 KB
  + scipy                    1.7.1  py39hee8e79c_0       conda-forge/linux-64                     22 MB
  + setuptools              57.4.0  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + sqlite                  3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tk                      8.6.11  h27826a3_1           conda-forge/linux-64                    Cached
  + tzdata                   2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                   0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                       5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                    1.2.11  h516909a_1010        conda-forge/linux-64                    Cached

  Summary:

  Install: 44 packages

  Total download: 46 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/aquila_stlfr_1630958243373/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    aquila_stlfr:     1.2.11-py_0                local      
    bzip2:            1.0.8-h7f98852_4           conda-forge
    c-ares:           1.17.2-h7f98852_0          conda-forge
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    htslib:           1.13-h9093b5e_0            bioconda   
    k8:               0.2.5-h9a82719_1           bioconda   
    krb5:             1.19.2-hcc1bbae_0          conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libcurl:          7.78.0-h2574ce0_0          conda-forge
    libdeflate:       1.7-h7f98852_5             conda-forge
    libedit:          3.1.20191231-he28a2e2_2    conda-forge
    libev:            4.33-h516909a_1            conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libnghttp2:       1.43.0-h812cca2_0          conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libssh2:          1.10.0-ha56f1ee_0          conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    minimap2:         2.22-h5bf99c6_0            bioconda   
    ncurses:          6.2-h58526e2_4             conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    openssl:          1.1.1l-h7f98852_0          conda-forge
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    pysam:            0.16.0.1-py39h051187c_3    bioconda   
    python:           3.9.7-h49503c6_0_cpython   conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    readline:         8.1-h46c0cb4_0             conda-forge
    samtools:         1.13-h8c37831_0            bioconda   
    scipy:            1.7.1-py39hee8e79c_0       conda-forge
    setuptools:       57.4.0-py39hf3d152e_0      conda-forge
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    tk:               8.6.11-h27826a3_1          conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/aquila_stlfr_1630958243373/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/home/vsts/conda/conda-bld/aquila_stlfr_1630958243373/test_tmp
usage: use "python3 Aquila_stLFR_step1 --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --fastq_file FASTQ_FILE, -f FASTQ_FILE
                        Required parameter; stLFR FASTQ file with paired reads
  --bam_file BAM_FILE, -bam BAM_FILE
                        Required parameter; BAM file, called by bwa mem
  --vcf_file VCF_FILE, -v VCF_FILE
                        Required parameter; VCF file, called by FreeBayes
  --chr_start CHR_START, -start CHR_START
                        chromosome start from, default = 1
  --chr_end CHR_END, -end CHR_END
                        chromosome end by,default = 23
  --sample_name SAMPLE_NAME, -name SAMPLE_NAME
                        Required parameter; sample name you can define, for
                        example, S12878
  --out_dir OUT_DIR, -o OUT_DIR
                        Directory to store assembly results, default =
                        ./Assembly_results
  --uniq_map_dir UNIQ_MAP_DIR, -uniq_dir UNIQ_MAP_DIR
                        Required Parameter; Directory for 100-mer uniqness,
                        run ./install to download it
  --num_threads NUM_THREADS, -t_chr NUM_THREADS
                        number of threads, default = 8 (recommended)
  --block_threshold BLOCK_THRESHOLD, -bt BLOCK_THRESHOLD
                        phase block threshold, default = 200000
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold, default = 100000
usage: use "python3 Aquila_stLFR_step2 --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --chr_start CHR_START, -start CHR_START
                        chromosome start from, default = 1
  --chr_end CHR_END, -end CHR_END
                        chromosome end by, default = 23
  --out_dir OUT_DIR, -o OUT_DIR
                        Required parameter; Directory to store assembly
                        results
  --reference REFERENCE, -ref REFERENCE
                        Required parameter; reference fasta file, run
                        ./install to download it
  --num_threads NUM_THREADS, -t NUM_THREADS
                        number of threads, default = 30, this correponds to
                        number of small files get assembled simulateoulsy
  --num_threads_spades NUM_THREADS_SPADES, -t_spades NUM_THREADS_SPADES
                        number of threads for spades, default = 5
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold, default = 100000
usage: Aquila_stLFR_clean [-h] --assembly_dir ASSEMBLY_DIR
                          [--chr_start CHR_START] [--chr_end CHR_END]
                          [--num_of_threads NUM_OF_THREADS]

Clean Assembly Data by Aquila:

optional arguments:
  -h, --help            show this help message and exit
  --assembly_dir ASSEMBLY_DIR, -i ASSEMBLY_DIR
                        assembly folder
  --chr_start CHR_START, -start CHR_START
                        chromosome start from
  --chr_end CHR_END, -end CHR_END
                        chromosome end by
  --num_of_threads NUM_OF_THREADS, -nt NUM_OF_THREADS
                        number of threads
usage: use "python3 Aquila_step1_hybrid --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --bam_file_list BAM_FILE_LIST, -bam BAM_FILE_LIST
                        Required parameter, BAM file list, each BAM file is
                        seperately by comma ",". For example: 1.bam,2.bam
  --vcf_file_list VCF_FILE_LIST, -v VCF_FILE_LIST
                        Required parameter, VCF file list, each VCF file is
                        seperately by comma "," . For example: 1.vcf,2.vcf
  --chr_start CHR_START, -start CHR_START
                        chromosome start from
  --chr_end CHR_END, -end CHR_END
                        chromosome end by
  --sample_name_list SAMPLE_NAME_LIST, -name SAMPLE_NAME_LIST
                        Required parameter, sample name list, each sample name
                        is seperately by comma ",". For example:
                        S24385_lysis_2,S24385_lysis_2H
  --out_dir OUT_DIR, -o OUT_DIR
                        Directory to store output
  --uniq_map_dir UNIQ_MAP_DIR, -uniq_dir UNIQ_MAP_DIR
                        Required parameter,Directory to 100-mer uniqness
  --num_threads NUM_THREADS, -t_chr NUM_THREADS
                        number of threads
  --num_threads_for_samtools_sort NUM_THREADS_FOR_SAMTOOLS_SORT, -t NUM_THREADS_FOR_SAMTOOLS_SORT
                        number of threads for samtools sort
  --block_threshold BLOCK_THRESHOLD, -bt BLOCK_THRESHOLD
                        phase block threshold, default = 200000(200kb)
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold, default = 100000(100kb)
usage: Aquila_stLFR_assembly_based_variants_call [-h] [--chr_start CHR_START]
                                                 [--chr_end CHR_END]
                                                 [--var_size VAR_SIZE]
                                                 [--all_regions_flag ALL_REGIONS_FLAG]
                                                 [--clean_flag CLEAN_FLAG]
                                                 [--num_of_threads NUM_OF_THREADS]
                                                 --assembly_dir ASSEMBLY_DIR
                                                 [--out_dir OUT_DIR]
                                                 --ref_file REF_FILE

Run depth all:

optional arguments:
  -h, --help            show this help message and exit
  --chr_start CHR_START, -start CHR_START
                        chromosome start from, default = 1
  --chr_end CHR_END, -end CHR_END
                        chromosome end by, default = 23
  --var_size VAR_SIZE, -v VAR_SIZE
                        variant size, cut off size for indel and SV, default =
                        1
  --all_regions_flag ALL_REGIONS_FLAG, -all ALL_REGIONS_FLAG
                        1 is for variants calling in all regions (including
                        some regions with haploid assemblies), default = 0 for
                        diploid regions
  --clean_flag CLEAN_FLAG, -clean CLEAN_FLAG
                        1 for cleaning all intermediate files, default = 0:
                        keep all intermediate files
  --num_of_threads NUM_OF_THREADS, -t NUM_OF_THREADS
                        number of threads, default = 1
  --assembly_dir ASSEMBLY_DIR, -i_dir ASSEMBLY_DIR
                        Required parameter, folder to store Aquila assembly
                        results at Aquila assembly steps
  --out_dir OUT_DIR, -o_dir OUT_DIR
                        Directory to store outputs, default =
                        ./Aquila_Variant_Results
  --ref_file REF_FILE, -r REF_FILE
                        Required parameter, reference fasta file, run
                        ./install.sh to dowload GRCh38 human reference fasta
usage: use "python3 Aquila_stLFR_phasing_all_variants --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --assembly_vcf ASSEMBLY_VCF, -v_assembled ASSEMBLY_VCF
                        vcf file
  --vcf_file VCF_FILE, -v VCF_FILE
                        vcf file
  --chr_start CHR_START, -start CHR_START
                        chromosome start from
  --chr_end CHR_END, -end CHR_END
                        chromosome end by
  --out_dir OUT_DIR, -o OUT_DIR
                        Directory to store output
  --assembly_dir ASSEMBLY_DIR, -a_dir ASSEMBLY_DIR
                        folder to store assembled results
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold
usage: Aquila_step0_sortbam_hybrid [-h] --bam_file_list BAM_FILE_LIST
                                   [--out_dir OUT_DIR] --sample_name_list
                                   SAMPLE_NAME_LIST
                                   [--num_threads_for_samtools_sort NUM_THREADS_FOR_SAMTOOLS_SORT]

sort bam by qname:

optional arguments:
  -h, --help            show this help message and exit
  --bam_file_list BAM_FILE_LIST, -bam BAM_FILE_LIST
                        Required Parameter, BAM file list, each BAM file is
                        seperately by comma ",". For example: 1.bam,2.bam
  --out_dir OUT_DIR, -o OUT_DIR
                        output folder
  --sample_name_list SAMPLE_NAME_LIST, -sl SAMPLE_NAME_LIST
                        Required Parameter, The sample names list, each sample
                        name is seperately by comma ",". For example:
                        S24385_lysis_2,S24385_lysis_2H
  --num_threads_for_samtools_sort NUM_THREADS_FOR_SAMTOOLS_SORT, -t NUM_THREADS_FOR_SAMTOOLS_SORT
                        The number of threads you can define for samtoos sort,
                        default = 20
usage: use "python3 Aquila_stLFR_fastq_preprocess --help" for more information

Preprocessing paired fastq files for Aquila_stLFR

optional arguments:
  -h, --help            show this help message and exit
  --fastq_1 FASTQ_1, -1 FASTQ_1
                        origin stLFR fastq 1 (gz file)
  --fastq_2 FASTQ_2, -2 FASTQ_2
                        origin stLFR fastq 2 (gz file)
  --out_file OUT_FILE, -o OUT_FILE
                        output stLFR fastq file for Aquila_stLFR

Resource usage statistics from testing aquila_stlfr:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 20B
   Time elapsed: 0:00:02.1


TEST END: aquila_stlfr-1.2.11-py_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


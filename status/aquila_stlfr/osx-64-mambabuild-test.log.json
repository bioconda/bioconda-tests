Updating build index: /Users/runner/conda/conda-bld

TEST START: aquila_stlfr-1.2.11-py_0.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmpq_ypsb80/info/recipe/conda_build_config.yaml
  Package                 Version  Build               Channel                                    Size
────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────

  + aquila_stlfr           1.2.11  py_0                /Users/runner/conda/conda-bld/osx-64      17 MB
  + bzip2                   1.0.8  h0d85af4_4          conda-forge/osx-64                       Cached
  + c-ares                 1.17.2  h0d85af4_0          conda-forge/osx-64                       Cached
  + ca-certificates     2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + htslib                   1.13  hc38c3fb_0          bioconda/osx-64                            2 MB
  + k8                      0.2.5  h87af4ef_1          bioconda/osx-64                            1 MB
  + krb5                   1.19.2  hcfbf3a7_0          conda-forge/osx-64                       Cached
  + libblas                 3.9.0  11_osx64_openblas   conda-forge/osx-64                       Cached
  + libcblas                3.9.0  11_osx64_openblas   conda-forge/osx-64                       Cached
  + libcurl                7.78.0  hf45b732_0          conda-forge/osx-64                       Cached
  + libcxx                 12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libdeflate                1.7  h35c211d_5          conda-forge/osx-64                       Cached
  + libedit          3.1.20191231  h0678c8f_2          conda-forge/osx-64                       Cached
  + libev                    4.33  haf1e3a3_1          conda-forge/osx-64                       Cached
  + libffi                    3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + libgfortran             5.0.0  9_3_0_h6c81a4c_23   conda-forge/osx-64                       Cached
  + libgfortran5            9.3.0  h6c81a4c_23         conda-forge/osx-64                       Cached
  + liblapack               3.9.0  11_osx64_openblas   conda-forge/osx-64                       Cached
  + libnghttp2             1.43.0  h07e645a_0          conda-forge/osx-64                       Cached
  + libopenblas            0.3.17  openmp_h3351f45_1   conda-forge/osx-64                       Cached
  + libssh2                1.10.0  h52ee1ee_0          conda-forge/osx-64                       Cached
  + llvm-openmp            12.0.1  hda6cdc1_1          conda-forge/osx-64                       Cached
  + minimap2                 2.22  h188c3c3_0          bioconda/osx-64                          147 KB
  + ncurses                   6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + numpy                  1.21.2  py39h7eed0ac_0      conda-forge/osx-64                       Cached
  + openssl                1.1.1l  h0d85af4_0          conda-forge/osx-64                       Cached
  + pip                    21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + pysam                0.16.0.1  py39h56703ae_3      bioconda/osx-64                            2 MB
  + python                  3.9.7  hd187cdc_0_cpython  conda-forge/osx-64                       Cached
  + python_abi                3.9  2_cp39              conda-forge/osx-64                       Cached
  + readline                  8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + samtools                 1.13  h7596a89_0          bioconda/osx-64                          404 KB
  + scipy                   1.7.1  py39h056f1c0_0      conda-forge/osx-64                        20 MB
  + setuptools             57.4.0  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + sqlite                 3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + tk                     8.6.11  h5dbffcc_1          conda-forge/osx-64                       Cached
  + tzdata                  2021a  he74cb21_1          conda-forge/noarch                       Cached
  + wheel                  0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                      5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + zlib                   1.2.11  h7795811_1010       conda-forge/osx-64                       Cached

  Summary:

  Install: 40 packages

  Total download: 43 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/aquila_stlfr_1630958571259/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh


The following NEW packages will be INSTALLED:

    aquila_stlfr:    1.2.11-py_0              local      
    bzip2:           1.0.8-h0d85af4_4         conda-forge
    c-ares:          1.17.2-h0d85af4_0        conda-forge
    ca-certificates: 2021.5.30-h033912b_0     conda-forge
    htslib:          1.13-hc38c3fb_0          bioconda   
    k8:              0.2.5-h87af4ef_1         bioconda   
    krb5:            1.19.2-hcfbf3a7_0        conda-forge
    libblas:         3.9.0-11_osx64_openblas  conda-forge
    libcblas:        3.9.0-11_osx64_openblas  conda-forge
    libcurl:         7.78.0-hf45b732_0        conda-forge
    libcxx:          12.0.1-habf9029_0        conda-forge
    libdeflate:      1.7-h35c211d_5           conda-forge
    libedit:         3.1.20191231-h0678c8f_2  conda-forge
    libev:           4.33-haf1e3a3_1          conda-forge
    libffi:          3.3-h046ec9c_2           conda-forge
    libgfortran:     5.0.0-9_3_0_h6c81a4c_23  conda-forge
    libgfortran5:    9.3.0-h6c81a4c_23        conda-forge
    liblapack:       3.9.0-11_osx64_openblas  conda-forge
    libnghttp2:      1.43.0-h07e645a_0        conda-forge
    libopenblas:     0.3.17-openmp_h3351f45_1 conda-forge
    libssh2:         1.10.0-h52ee1ee_0        conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1        conda-forge
    minimap2:        2.22-h188c3c3_0          bioconda   
    ncurses:         6.2-h2e338ed_4           conda-forge
    numpy:           1.21.2-py39h7eed0ac_0    conda-forge
    openssl:         1.1.1l-h0d85af4_0        conda-forge
    pip:             21.2.4-pyhd8ed1ab_0      conda-forge
    pysam:           0.16.0.1-py39h56703ae_3  bioconda   
    python:          3.9.7-hd187cdc_0_cpython conda-forge
    python_abi:      3.9-2_cp39               conda-forge
    readline:        8.1-h05e3726_0           conda-forge
    samtools:        1.13-h7596a89_0          bioconda   
    scipy:           1.7.1-py39h056f1c0_0     conda-forge
    setuptools:      57.4.0-py39h6e9494a_0    conda-forge
    sqlite:          3.36.0-h23a322b_0        conda-forge
    tk:              8.6.11-h5dbffcc_1        conda-forge
    tzdata:          2021a-he74cb21_1         conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1      conda-forge
    xz:              5.2.5-haf1e3a3_1         conda-forge
    zlib:            1.2.11-h7795811_1010     conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/aquila_stlfr_1630958571259/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh
export SRC_DIR=/Users/runner/conda/conda-bld/aquila_stlfr_1630958571259/test_tmp
usage: use "python3 Aquila_stLFR_step1 --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --fastq_file FASTQ_FILE, -f FASTQ_FILE
                        Required parameter; stLFR FASTQ file with paired reads
  --bam_file BAM_FILE, -bam BAM_FILE
                        Required parameter; BAM file, called by bwa mem
  --vcf_file VCF_FILE, -v VCF_FILE
                        Required parameter; VCF file, called by FreeBayes
  --chr_start CHR_START, -start CHR_START
                        chromosome start from, default = 1
  --chr_end CHR_END, -end CHR_END
                        chromosome end by,default = 23
  --sample_name SAMPLE_NAME, -name SAMPLE_NAME
                        Required parameter; sample name you can define, for
                        example, S12878
  --out_dir OUT_DIR, -o OUT_DIR
                        Directory to store assembly results, default =
                        ./Assembly_results
  --uniq_map_dir UNIQ_MAP_DIR, -uniq_dir UNIQ_MAP_DIR
                        Required Parameter; Directory for 100-mer uniqness,
                        run ./install to download it
  --num_threads NUM_THREADS, -t_chr NUM_THREADS
                        number of threads, default = 8 (recommended)
  --block_threshold BLOCK_THRESHOLD, -bt BLOCK_THRESHOLD
                        phase block threshold, default = 200000
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold, default = 100000
usage: use "python3 Aquila_stLFR_step2 --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --chr_start CHR_START, -start CHR_START
                        chromosome start from, default = 1
  --chr_end CHR_END, -end CHR_END
                        chromosome end by, default = 23
  --out_dir OUT_DIR, -o OUT_DIR
                        Required parameter; Directory to store assembly
                        results
  --reference REFERENCE, -ref REFERENCE
                        Required parameter; reference fasta file, run
                        ./install to download it
  --num_threads NUM_THREADS, -t NUM_THREADS
                        number of threads, default = 30, this correponds to
                        number of small files get assembled simulateoulsy
  --num_threads_spades NUM_THREADS_SPADES, -t_spades NUM_THREADS_SPADES
                        number of threads for spades, default = 5
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold, default = 100000
usage: Aquila_stLFR_clean [-h] --assembly_dir ASSEMBLY_DIR
                          [--chr_start CHR_START] [--chr_end CHR_END]
                          [--num_of_threads NUM_OF_THREADS]

Clean Assembly Data by Aquila:

optional arguments:
  -h, --help            show this help message and exit
  --assembly_dir ASSEMBLY_DIR, -i ASSEMBLY_DIR
                        assembly folder
  --chr_start CHR_START, -start CHR_START
                        chromosome start from
  --chr_end CHR_END, -end CHR_END
                        chromosome end by
  --num_of_threads NUM_OF_THREADS, -nt NUM_OF_THREADS
                        number of threads
usage: use "python3 Aquila_step1_hybrid --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --bam_file_list BAM_FILE_LIST, -bam BAM_FILE_LIST
                        Required parameter, BAM file list, each BAM file is
                        seperately by comma ",". For example: 1.bam,2.bam
  --vcf_file_list VCF_FILE_LIST, -v VCF_FILE_LIST
                        Required parameter, VCF file list, each VCF file is
                        seperately by comma "," . For example: 1.vcf,2.vcf
  --chr_start CHR_START, -start CHR_START
                        chromosome start from
  --chr_end CHR_END, -end CHR_END
                        chromosome end by
  --sample_name_list SAMPLE_NAME_LIST, -name SAMPLE_NAME_LIST
                        Required parameter, sample name list, each sample name
                        is seperately by comma ",". For example:
                        S24385_lysis_2,S24385_lysis_2H
  --out_dir OUT_DIR, -o OUT_DIR
                        Directory to store output
  --uniq_map_dir UNIQ_MAP_DIR, -uniq_dir UNIQ_MAP_DIR
                        Required parameter,Directory to 100-mer uniqness
  --num_threads NUM_THREADS, -t_chr NUM_THREADS
                        number of threads
  --num_threads_for_samtools_sort NUM_THREADS_FOR_SAMTOOLS_SORT, -t NUM_THREADS_FOR_SAMTOOLS_SORT
                        number of threads for samtools sort
  --block_threshold BLOCK_THRESHOLD, -bt BLOCK_THRESHOLD
                        phase block threshold, default = 200000(200kb)
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold, default = 100000(100kb)
usage: Aquila_stLFR_assembly_based_variants_call [-h] [--chr_start CHR_START]
                                                 [--chr_end CHR_END]
                                                 [--var_size VAR_SIZE]
                                                 [--all_regions_flag ALL_REGIONS_FLAG]
                                                 [--clean_flag CLEAN_FLAG]
                                                 [--num_of_threads NUM_OF_THREADS]
                                                 --assembly_dir ASSEMBLY_DIR
                                                 [--out_dir OUT_DIR]
                                                 --ref_file REF_FILE

Run depth all:

optional arguments:
  -h, --help            show this help message and exit
  --chr_start CHR_START, -start CHR_START
                        chromosome start from, default = 1
  --chr_end CHR_END, -end CHR_END
                        chromosome end by, default = 23
  --var_size VAR_SIZE, -v VAR_SIZE
                        variant size, cut off size for indel and SV, default =
                        1
  --all_regions_flag ALL_REGIONS_FLAG, -all ALL_REGIONS_FLAG
                        1 is for variants calling in all regions (including
                        some regions with haploid assemblies), default = 0 for
                        diploid regions
  --clean_flag CLEAN_FLAG, -clean CLEAN_FLAG
                        1 for cleaning all intermediate files, default = 0:
                        keep all intermediate files
  --num_of_threads NUM_OF_THREADS, -t NUM_OF_THREADS
                        number of threads, default = 1
  --assembly_dir ASSEMBLY_DIR, -i_dir ASSEMBLY_DIR
                        Required parameter, folder to store Aquila assembly
                        results at Aquila assembly steps
  --out_dir OUT_DIR, -o_dir OUT_DIR
                        Directory to store outputs, default =
                        ./Aquila_Variant_Results
  --ref_file REF_FILE, -r REF_FILE
                        Required parameter, reference fasta file, run
                        ./install.sh to dowload GRCh38 human reference fasta
usage: use "python3 Aquila_stLFR_phasing_all_variants --help" for more information

Author: xzhou15@cs.stanford.edu

optional arguments:
  -h, --help            show this help message and exit
  --assembly_vcf ASSEMBLY_VCF, -v_assembled ASSEMBLY_VCF
                        vcf file
  --vcf_file VCF_FILE, -v VCF_FILE
                        vcf file
  --chr_start CHR_START, -start CHR_START
                        chromosome start from
  --chr_end CHR_END, -end CHR_END
                        chromosome end by
  --out_dir OUT_DIR, -o OUT_DIR
                        Directory to store output
  --assembly_dir ASSEMBLY_DIR, -a_dir ASSEMBLY_DIR
                        folder to store assembled results
  --block_len_use BLOCK_LEN_USE, -bl BLOCK_LEN_USE
                        phase block len threshold
usage: Aquila_step0_sortbam_hybrid [-h] --bam_file_list BAM_FILE_LIST
                                   [--out_dir OUT_DIR] --sample_name_list
                                   SAMPLE_NAME_LIST
                                   [--num_threads_for_samtools_sort NUM_THREADS_FOR_SAMTOOLS_SORT]

sort bam by qname:

optional arguments:
  -h, --help            show this help message and exit
  --bam_file_list BAM_FILE_LIST, -bam BAM_FILE_LIST
                        Required Parameter, BAM file list, each BAM file is
                        seperately by comma ",". For example: 1.bam,2.bam
  --out_dir OUT_DIR, -o OUT_DIR
                        output folder
  --sample_name_list SAMPLE_NAME_LIST, -sl SAMPLE_NAME_LIST
                        Required Parameter, The sample names list, each sample
                        name is seperately by comma ",". For example:
                        S24385_lysis_2,S24385_lysis_2H
  --num_threads_for_samtools_sort NUM_THREADS_FOR_SAMTOOLS_SORT, -t NUM_THREADS_FOR_SAMTOOLS_SORT
                        The number of threads you can define for samtoos sort,
                        default = 20
usage: use "python3 Aquila_stLFR_fastq_preprocess --help" for more information

Preprocessing paired fastq files for Aquila_stLFR

optional arguments:
  -h, --help            show this help message and exit
  --fastq_1 FASTQ_1, -1 FASTQ_1
                        origin stLFR fastq 1 (gz file)
  --fastq_2 FASTQ_2, -2 FASTQ_2
                        origin stLFR fastq 2 (gz file)
  --out_file OUT_FILE, -o OUT_FILE
                        output stLFR fastq file for Aquila_stLFR

Resource usage statistics from testing aquila_stlfr:
   Process count: 4
   CPU time: Sys=0:00:00.1, User=0:00:00.3
   Memory: 30.6M
   Disk usage: 16B
   Time elapsed: 0:00:08.3


TEST END: aquila_stlfr-1.2.11-py_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


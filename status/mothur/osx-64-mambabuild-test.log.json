  Package                           Version  Build                Channel                                    Size
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + blast-legacy                     2.2.26  h527b516_3           bioconda/osx-64                           35 MB
  + boost                            1.70.0  py38hbf1eeb5_1       conda-forge/osx-64                       347 KB
  + boost-cpp                        1.70.0  hef959ae_3           conda-forge/osx-64                        19 MB
  + bzip2                             1.0.8  h0d85af4_4           conda-forge/osx-64                       Cached
  + ca-certificates               2021.5.30  h033912b_0           conda-forge/osx-64                       Cached
  + gsl                                 2.5  ha2d443c_1           conda-forge/osx-64                         3 MB
  + hdf5                             1.10.5  nompi_h500d6d3_1114  conda-forge/osx-64                         3 MB
  + icu                                67.1  hb1e8313_0           conda-forge/osx-64                        13 MB
  + libblas                           3.9.0  11_osx64_openblas    conda-forge/osx-64                       Cached
  + libcblas                          3.9.0  11_osx64_openblas    conda-forge/osx-64                       Cached
  + libcxx                           12.0.1  habf9029_0           conda-forge/osx-64                       Cached
  + libffi                              3.3  h046ec9c_2           conda-forge/osx-64                       Cached
  + libgfortran                       5.0.0  9_3_0_h6c81a4c_23    conda-forge/osx-64                       Cached
  + libgfortran5                      9.3.0  h6c81a4c_23          conda-forge/osx-64                       Cached
  + libiconv                           1.16  haf1e3a3_0           conda-forge/osx-64                       Cached
  + liblapack                         3.9.0  11_osx64_openblas    conda-forge/osx-64                       Cached
  + libopenblas                      0.3.17  openmp_h3351f45_1    conda-forge/osx-64                       Cached
  + libxml2                          2.9.10  h2c6e4a5_2           conda-forge/osx-64                         1 MB
  + llvm-openmp                      12.0.1  hda6cdc1_1           conda-forge/osx-64                       Cached
  + lz4-c                             1.9.3  he49afe7_1           conda-forge/osx-64                       Cached
  + mothur                          1.44.11  h35bcdce_0           /Users/runner/conda/conda-bld/osx-64       6 MB
  + ncbi-ngs-sdk                     2.11.0  h247ad82_0           bioconda/osx-64                          129 KB
  + ncurses                             6.2  h2e338ed_4           conda-forge/osx-64                       Cached
  + numpy                            1.21.2  py38h49b9922_0       conda-forge/osx-64                         6 MB
  + openssl                          1.1.1k  h0d85af4_1           conda-forge/osx-64                       Cached
  + perl                             5.26.2  hbcb3906_1008        conda-forge/osx-64                        14 MB
  + perl-app-cpanminus               1.7044  pl526_1              bioconda/osx-64                          235 KB
  + perl-business-isbn                3.004  pl526_0              bioconda/osx-64                           15 KB
  + perl-business-isbn-data    20140910.003  pl526_0              bioconda/osx-64                           15 KB
  + perl-carp                          1.38  pl526_3              bioconda/osx-64                           15 KB
  + perl-constant                      1.33  pl526_1              bioconda/osx-64                           10 KB
  + perl-data-dumper                  2.173  pl526_0              bioconda/osx-64                           34 KB
  + perl-encode                        2.88  pl526_1              bioconda/osx-64                            1 MB
  + perl-exporter                      5.72  pl526_1              bioconda/osx-64                           13 KB
  + perl-extutils-makemaker            7.36  pl526_1              bioconda/osx-64                          153 KB
  + perl-file-path                     2.16  pl526_0              bioconda/osx-64                           17 KB
  + perl-file-temp                   0.2304  pl526_2              bioconda/osx-64                           26 KB
  + perl-mime-base64                   3.15  pl526_1              bioconda/osx-64                           14 KB
  + perl-parent                       0.236  pl526_1              bioconda/osx-64                            6 KB
  + perl-uri                           1.76  pl526_0              bioconda/osx-64                           55 KB
  + perl-xml-libxml                  2.0132  pl526h08abf6f_1      bioconda/osx-64                          237 KB
  + perl-xml-namespacesupport          1.12  pl526_0              bioconda/osx-64                           12 KB
  + perl-xml-sax                       1.02  pl526_0              bioconda/noarch                           36 KB
  + perl-xml-sax-base                  1.09  pl526_0              bioconda/osx-64                           19 KB
  + perl-xsloader                      0.24  pl526_0              bioconda/osx-64                            8 KB
  + pip                              21.2.4  pyhd8ed1ab_0         conda-forge/noarch                       Cached
  + python                           3.8.10  h0e5c897_0_cpython   conda-forge/osx-64                        13 MB
  + python_abi                          3.8  2_cp38               conda-forge/osx-64                         4 KB
  + readline                            8.1  h05e3726_0           conda-forge/osx-64                       Cached
  + setuptools                       57.4.0  py38h50d1736_0       conda-forge/osx-64                       929 KB
  + sqlite                           3.36.0  h23a322b_0           conda-forge/osx-64                       Cached
  + sra-tools                        2.10.1  pl526h9f37e31_0      bioconda/osx-64                           48 MB
  + tk                               8.6.11  hd798d34_0           conda-forge/osx-64                       Cached
  + vsearch                          2.13.3  hacce2fa_0           bioconda/osx-64                          217 KB
  + wheel                            0.37.0  pyhd8ed1ab_1         conda-forge/noarch                       Cached
  + xz                                5.2.5  haf1e3a3_1           conda-forge/osx-64                       Cached
  + zlib                             1.2.11  h7795811_1010        conda-forge/osx-64                       Cached
  + zstd                              1.4.9  h582d3a0_0           conda-forge/osx-64                       460 KB

  Summary:

  Install: 58 packages

  Total download: 164 MB

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: mothur-1.44.11-h35bcdce_0.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/mothur_1630471151331/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    blast-legacy:              2.2.26-h527b516_3          bioconda   
    boost:                     1.70.0-py38hbf1eeb5_1      conda-forge
    boost-cpp:                 1.70.0-hef959ae_3          conda-forge
    bzip2:                     1.0.8-h0d85af4_4           conda-forge
    ca-certificates:           2021.5.30-h033912b_0       conda-forge
    gsl:                       2.5-ha2d443c_1             conda-forge
    hdf5:                      1.10.5-nompi_h500d6d3_1114 conda-forge
    icu:                       67.1-hb1e8313_0            conda-forge
    libblas:                   3.9.0-11_osx64_openblas    conda-forge
    libcblas:                  3.9.0-11_osx64_openblas    conda-forge
    libcxx:                    12.0.1-habf9029_0          conda-forge
    libffi:                    3.3-h046ec9c_2             conda-forge
    libgfortran:               5.0.0-9_3_0_h6c81a4c_23    conda-forge
    libgfortran5:              9.3.0-h6c81a4c_23          conda-forge
    libiconv:                  1.16-haf1e3a3_0            conda-forge
    liblapack:                 3.9.0-11_osx64_openblas    conda-forge
    libopenblas:               0.3.17-openmp_h3351f45_1   conda-forge
    libxml2:                   2.9.10-h2c6e4a5_2          conda-forge
    llvm-openmp:               12.0.1-hda6cdc1_1          conda-forge
    lz4-c:                     1.9.3-he49afe7_1           conda-forge
    mothur:                    1.44.11-h35bcdce_0         local      
    ncbi-ngs-sdk:              2.11.0-h247ad82_0          bioconda   
    ncurses:                   6.2-h2e338ed_4             conda-forge
    numpy:                     1.21.2-py38h49b9922_0      conda-forge
    openssl:                   1.1.1k-h0d85af4_1          conda-forge
    perl:                      5.26.2-hbcb3906_1008       conda-forge
    perl-app-cpanminus:        1.7044-pl526_1             bioconda   
    perl-business-isbn:        3.004-pl526_0              bioconda   
    perl-business-isbn-data:   20140910.003-pl526_0       bioconda   
    perl-carp:                 1.38-pl526_3               bioconda   
    perl-constant:             1.33-pl526_1               bioconda   
    perl-data-dumper:          2.173-pl526_0              bioconda   
    perl-encode:               2.88-pl526_1               bioconda   
    perl-exporter:             5.72-pl526_1               bioconda   
    perl-extutils-makemaker:   7.36-pl526_1               bioconda   
    perl-file-path:            2.16-pl526_0               bioconda   
    perl-file-temp:            0.2304-pl526_2             bioconda   
    perl-mime-base64:          3.15-pl526_1               bioconda   
    perl-parent:               0.236-pl526_1              bioconda   
    perl-uri:                  1.76-pl526_0               bioconda   
    perl-xml-libxml:           2.0132-pl526h08abf6f_1     bioconda   
    perl-xml-namespacesupport: 1.12-pl526_0               bioconda   
    perl-xml-sax:              1.02-pl526_0               bioconda   
    perl-xml-sax-base:         1.09-pl526_0               bioconda   
    perl-xsloader:             0.24-pl526_0               bioconda   
    pip:                       21.2.4-pyhd8ed1ab_0        conda-forge
    python:                    3.8.10-h0e5c897_0_cpython  conda-forge
    python_abi:                3.8-2_cp38                 conda-forge
    readline:                  8.1-h05e3726_0             conda-forge
    setuptools:                57.4.0-py38h50d1736_0      conda-forge
    sqlite:                    3.36.0-h23a322b_0          conda-forge
    sra-tools:                 2.10.1-pl526h9f37e31_0     bioconda   
    tk:                        8.6.11-hd798d34_0          conda-forge
    vsearch:                   2.13.3-hacce2fa_0          bioconda   
    wheel:                     0.37.0-pyhd8ed1ab_1        conda-forge
    xz:                        5.2.5-haf1e3a3_1           conda-forge
    zlib:                      1.2.11-h7795811_1010       conda-forge
    zstd:                      1.4.9-h582d3a0_0           conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/mothur_1630471151331/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/Users/runner/conda/conda-bld/mothur_1630471151331/test_tmp
Mac version

Using ReadLine,Boost,HDF5,GSL
mothur v.1.44.1
Last updated: 09/01/2021
by
Patrick D. Schloss

Department of Microbiology & Immunology

University of Michigan
http://www.mothur.org

When using, please cite:
Schloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.

Distributed under the GNU General Public License

Type 'help()' for information on the commands that are available

For questions and analysis support, please visit our forum at https://forum.mothur.org

Type 'quit()' to exit program

[NOTE]: Setting random seed to 19760620.

Script Mode


mothur > help()

NOTE: sens.spec assumes that only unique sequences were used to generate the distance matrix.

[1m[35m
Clustering commmands include: [0mcluster, cluster.classic, cluster.fit, cluster.split, mgcluster, phylotype
[1m[35m
General commmands include: [0mget.current, get.dists, make.biom, make.file, make.group, make.lefse, merge.count, merge.files, merge.groups, remove.dists, rename.file, set.current, set.dir, set.logfile, set.seed, system
[1m[35m
Hypothesis Testing commmands include: [0mamova, anosim, clearcut, cooccurrence, corr.axes, deunique.tree, homova, indicator, kruskal.wallis, libshuff, mantel, nmds, otu.association, parsimony, pca, pcoa, phylo.diversity, unifrac.unweighted, unifrac.weighted
[1m[35m
OTU-Based Approaches commmands include: [0mbiom.info, classify.svm, collect.shared, collect.single, create.database, dist.shared, estimator.single, filter.shared, get.communitytype, get.coremicrobiome, get.group, get.groups, get.label, get.otus, get.otulist, get.oturep, get.otus, get.rabund, get.relabund, get.sabund, get.sharedseqs, heatmap.bin, heatmap.sim, lefse, list.otus, list.otus, make.clr, make.shared, merge.otus, metastats, normalize.shared, otu.hierarchy, primer.design, rarefaction.shared, rarefaction.single, remove.groups, remove.otus, remove.otus, remove.rare, sens.spec, sparcc, split.abund, summary.shared, summary.single, tree.shared, venn
[1m[35m
Phylotype Analysis commmands include: [0mclassify.otu, classify.seqs, classify.tree, get.lineage, merge.taxsummary, remove.lineage, summary.tax
[1m[35m
Sequence Processing commmands include: [0malign.check, align.seqs, bin.seqs, chimera.bellerophon, chimera.ccode, chimera.check, chimera.perseus, chimera.pintail, chimera.slayer, chimera.uchime, chimera.vsearch, chop.seqs, cluster.fragments, consensus.seqs, count.groups, count.seqs, degap.seqs, deunique.seqs, dist.seqs, fastq.info, filter.seqs, get.mimarkspackage, get.seqs, list.seqs, make.contigs, make.fastq, make.lookup, make.sra, count.seqs, merge.sfffiles, pairwise.seqs, pcr.seqs, pre.cluster, remove.seqs, rename.seqs, reverse.seqs, screen.seqs, seq.error, sff.multiple, sffinfo, shhh.flows, shhh.seqs, sort.seqs, split.groups, sra.info, sub.sample, summary.qual, summary.seqs, trim.flows, trim.seqs, unique.seqs
[1m[35m
For more information about a specific command type 'commandName(help)' i.e. 'cluster(help)'
[0m
[1m[32m
Common Questions: 
[0m
[1m[34m1. How do I site mothur?[0m
	Schloss, P.D., et al., Introducing mothur: Open-source, platform-independent, community-supported software for describing and comparing microbial communities. Appl Environ Microbiol, 2009. 75(23):7537-41.

[1m[34m2. Do you have an example analysis?[0m
	Yes, https://mothur.org/wiki/454_SOP and https://mothur.org/wiki/MiSeq_SOP highlight some of the things you can do with mothur.

[1m[34m3. Do you offer workshops?[0m
	Yes! Please see our https://mothur.org/wiki/Workshops page for more information.

[1m[34m4. What are mothur's file types?[0m
	Mothur uses and creates many file types. Including fasta, name, group, design, count, list, rabund, sabund, shared, relabund, oligos, taxonomy, constaxonomy, phylip, column, flow, qfile, file, biom and tree. You can find out more about these formats here: https://www.mothur.org/wiki/File_Types.

[1m[34m5. Is there a list of all of mothur's commands?[0m
	Yes! You can find it here, http://www.mothur.org/wiki/Category:Commands.

[1m[34m6. Why does the cutoff change when I cluster with average neighbor?[0m
	This is a product of using the average neighbor algorithm with a sparse distance matrix. When you run cluster, the algorithm looks for pairs of sequences to merge in the rows and columns that are getting merged together. Let's say you set the cutoff to 0.05. If one cell has a distance of 0.03 and the cell it is getting merged with has a distance above 0.05 then the cutoff is reset to 0.03, because it's not possible to merge at a higher level and keep all the data. All of the sequences are still there from multiple phyla. Incidentally, although we always see this, it is a bigger problem for people that include sequences that do not fully overlap.

[1m[32m
Common Issues: 
[0m
[1m[34m1. Mothur can't find my input files. What wrong?[0m
	By default, mothur will then look for the input files in the directory where mothur's executable is located. Mothur will also search the input, output and temporary default locations. You can set these locations using the set.dir command: set.dir(input=/users/myuser/desktop/mothurdata). Alternatively you can provide complete file names, or move the input files to mothur's executable location.

[1m[34m2. I installed the latest version, but I am still running an older version. Why?[0m
	We often see this issue when you have an older version of mothur installed in your path. You can find out where by opening a terminal window and running: 

	yourusername$ which mothur
	path_to_old_version
	for example: yourusername$ which mothur
	/usr/local/bin

	When you find the location of the older version, you can delete it or move it out of your path with the following:

	yourusername$ mv path_to_old_version/mothur new_location
	for example: yourusername$ mv /usr/local/bin/mothur /Users/yourusername/desktop/old_version_mothur

[1m[34m3. File Mismatches - 'yourSequence is in fileA but not in fileB, please correct.'[0m
	The most common reason this occurs is because you forgot to include a name or count file on a command, or accidentally included the wrong one due to a typo. Mothur has a 'current' option, which allows you to set file parameters to 'current'. For example, if fasta=current mothur will use the last fasta file given or created. The current option was designed to help avoid typo mistakes due to mothur's long filenames. Another reason this might occur is a process failing when you are using multiple processors. If a process dies, a file can be incomplete which would cause a mismatch error downstream.

[1m[34m4. I don't have enough RAM or processing power. What are my options?[0m
	If you are using multiple processors, try running the command with processors=1, the more processors you use the more memory is required.
	Alternatively, you can use AWS to run your analysis. Here are instructions: https://mothur.org/wiki/Mothur_AMI.

[1m[34m5. Mothur crashes when I read my distance file. What's wrong?[0m
	There are two common causes for this, file size and format.

	FileSize:	The cluster command loads your distance matrix into RAM, and your distance file is most likely too large to fit in RAM. There are two options to help with this. The first is to use a cutoff. By using a cutoff mothur will only load distances that are below the cutoff. If that is still not enough, there is a command called cluster.split, http://www.mothur.org/wiki/cluster.split. Cluster.split divides the dataset by taxonomic assignment and generates matrices for each grouping, and then clusters the smaller pieces separately. You may also be able to reduce the size of the original distance matrix by using the commands outline in the Schloss SOP, http://www.mothur.org/wiki/Schloss_SOP

	Wrong Format:	This error can be caused by trying to read a column formatted distance matrix using the phylip parameter. By default, the dist.seqs command generates a column formatted distance matrix. To make a phylip formatted matrix set the dist.seqs command parameter output to lt.

[1m[34m6. Why do I have such a large distance matrix?[0m
	This is most often caused by poor overlap of your reads. When reads have poor overlap, it greatly increases your error rate. Also, sequences that should cluster together don't because the errors appear to be genetic differences when in fact they are not. The quality of the data you are processing can not be overstressed. Error filled reads produce error filled results!

	Check out Pat's blog: http://blog.mothur.org/2014/09/11/Why-such-a-large-distance-matrix/

	NOTE: To take a step back, if you look through our MiSeq SOP, you’ll see that we go to great pains to only work with the unique sequences to limit the number of sequences we have to align, screen for chimeras, classify, etc. We all know that 20 million reads will never make it through the pipeline without setting your computer on fire. Returning to the question at hand, you can imagine that if the reads do not fully overlap then any error in the 5’ end of the first read will be uncorrected by the 3’ end of the second read. If we assume for now that the errors are random, then every error will generate a new unique sequence. Granted, this happens less than 1% of the time, but multiply that by 20 million reads at whatever length you choose and you’ve got a big number. Viola, a bunch of unique reads and a ginormous distance matrix.

[1m[34m7. Mothur reports a 'bad_alloc' error in the shhh.flows command. What's wrong?[0m
	This error indicates your computer is running out of memory. The shhh.flows command is very memory intensive. This error is most commonly caused by trying to process a dataset too large, using multiple processors, or failing to run trim.flows before shhh.flows. If you are using multiple processors, try running the command with processors=1, the more processors you use the more memory is required. Running trim.flows with an oligos file, and then shhh.flows with the file option may also resolve the issue. If for some reason you are unable to run shhh.flows with your data, a good alternative is to use the trim.seqs command using a 50-bp sliding window and to trim the sequence when the average quality score over that window drops below 35. Our results suggest that the sequencing error rates by this method are very good, but not quite as good as by shhh.flows and that the resulting sequences tend to be a bit shorter.

[1m[32m
How To: 
[0m
[1m[34m1. How do I make a tree?[0m
	Mothur has two commands that create trees: clearcut and tree.shared.

	The clearcut commands creates a phylogenetic tree that represents how sequences relate. The clearcut program written by Initiative for Bioinformatics and Evolutionary Studies (IBEST) at the University of Idaho. For more information about clearcut please refer to http://bioinformatics.hungry.com/clearcut/

	The tree.shared command will generate a newick-formatted tree file that describes the dissimilarity (1-similarity) among multiple groups. Groups are clustered using the UPGMA algorithm using the distance between communities as calculated using any of the calculators describing the similarity in community membership or structure.

[1m[34m2. How do I know 'who' is in an OTU in a shared file?[0m
	You can run the get.otulist command on the list file you used to generate the shared file. You want to be sure you are comparing the same distances. ie final.opti_mcc.0.03.otulist would relate to the 0.03 distance in your shared file. Also, if you subsample your data set and want to compare things, be sure to subsample the list and group file and then create the shared file to make sure you are working with the same sequences.

	sub.sample(list=yourListFile, count=yourCountFile, persample=t)
	make.shared(list=yourSubsampledListFile, group=yourSubsampledCountFile, label=0.03)
	get.otulist(list=yourSubsampledListFile, label=0.03)

[1m[34m3. How do I know 'who' is in the OTUs represented in the venn picture?[0m
	You can use the get.sharedseqs command. Be sure to pay close attention to the 'unique' and 'shared' parameters.

[1m[34m4. How do I select certain sequences or groups of sequences?[0m
	Mothur has several 'get' and 'remove' commands: get.seqs, get.lineage, get.groups, get.dists, get.otus, remove.seqs, remove.lineage, remove.dists, remove.otus and remove.groups.

[1m[34m5. How do I visualize my results from mothur?[0m
	To visual your data with R follow this tutorial http://www.riffomonas.org/minimalR/06_line_plots.html.

[1m[35m
For further assistance please refer to the Mothur manual on our wiki at http://www.mothur.org/wiki.
[0m
[1m[35m
For further assistance please refer to the Mothur manual on our wiki at http://www.mothur.org/wiki, or contact Pat Schloss at mothur.bugs@gmail.com.
[0m

mothur > quit()


It took 0 seconds to run 2 commands from your script.

uchime v4.2.40

Resource usage statistics from testing mothur:
   Process count: 4
   CPU time: Sys=0:00:00.0, User=0:00:00.0
   Memory: 11.8M
   Disk usage: 24B
   Time elapsed: 0:00:04.1


TEST END: mothur-1.44.11-h35bcdce_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package          Version  Build        Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge  conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu        conda-forge/linux-64                    Cached
  + libgcc-ng       11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + nasm           2.14.02  h7f98852_0   /home/vsts/conda/conda-bld/linux-64     568 KB

  Summary:

  Install: 5 packages

  Total download: 568 KB

─────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: nasm-2.14.02-h7f98852_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/nasm_1630910013529/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge    conda-forge
    _openmp_mutex: 4.5-1_gnu          conda-forge
    libgcc-ng:     11.1.0-hc902ee8_8  conda-forge
    libgomp:       11.1.0-hc902ee8_8  conda-forge
    nasm:          2.14.02-h7f98852_0 local      

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/nasm_1630910013529/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeho
export SRC_DIR=/home/vsts/conda/conda-bld/nasm_1630910013529/test_tmp
usage: nasm [-@ response file] [-o outfile] [-f format] [-l listfile]
            [options...] [--] filename
    or nasm -v (or --v) for version info


Response files should contain command line parameters,
one per line.

    -t            assemble in SciTech TASM compatible mode
    -E (or -e)    preprocess only (writes output to stdout by default)
    -a            don't preprocess (assemble only)
    -M            generate Makefile dependencies on stdout
    -MG           d:o, missing files assumed generated
    -MF file      set Makefile dependency file
    -MD file      assemble and generate dependencies
    -MT file      dependency target name
    -MQ file      dependency target name (quoted)
    -MP           emit phony target

    -Zfile        redirect error messages to file
    -s            redirect error messages to stdout

    -g            generate debugging information

    -F format     select a debugging format

    -gformat      same as -g -F format

    -o outfile    write output to an outfile

    -f format     select an output format

    -l listfile   write listing to a listfile

    -Ipath        add a pathname to the include file path
    -Oflags...    optimize opcodes, immediates and branch offsets
       -O0        no optimization
       -O1        minimal optimization
       -Ox        multipass optimization (default)
       -Ov        display the number of passes executed at the end
    -Pfile        pre-include a file (also --include)
    -Dmacro[=str] pre-define a macro
    -Umacro       undefine a macro
    -Xformat      specifiy error reporting format (gnu or vc)
    -w+foo        enable warning foo (equiv. -Wfoo)
    -w-foo        disable warning foo (equiv. -Wno-foo)
    -w[+-]error[=foo]
                  promote [specific] warnings to errors
    -h            show invocation summary and exit (also --help)

   --pragma str   pre-executes a specific %pragma
   --before str   add line (usually a preprocessor statement) before the input
   --prefix str   prepend the given string to all the given string
                  to all extern, common and global symbols (also --gprefix)
   --postfix str  append the given string to all the given string
                  to all extern, common and global symbols (also --gpostfix)
   --lprefix str  prepend the given string to all other symbols
   --lpostfix str append the given string to all other symbols
   --keep-all     output files will not be removed even if an error happens
   --no-line      ignore %line directives in input
   --limit-X val  set execution limit X
                     passes          total number of passes (default unlimited)
                     stalled-passes  number of passes without forward progress (default 1000)
                     macro-levels    levels of macro expansion (default 1000000)
                     rep             %rep count (default 1000000)
                     eval            expression evaluation descent (default 1000000)
                     lines           total source lines processed (default 2000000000)

Warnings for the -W/-w options: (default in brackets)
    macro-params            macro calls with wrong parameter count [on]
    macro-selfref           cyclic macro references [off]
    macro-defaults          macros with more default than optional parameters [on]
    orphan-labels           labels alone on lines without trailing `:' [on]
    number-overflow         numeric constant does not fit [on]
    gnu-elf-extensions      using 8- or 16-bit relocation in ELF32, a GNU extension [off]
    float-overflow          floating point overflow [on]
    float-denorm            floating point denormal [off]
    float-underflow         floating point underflow [off]
    float-toolong           too many digits in floating-point number [on]
    user                    %warning directives [on]
    lock                    lock prefix on unlockable instructions [on]
    hle                     invalid hle prefixes [on]
    bnd                     invalid bnd prefixes [on]
    zext-reloc              relocation zero-extended to match output format [on]
    ptr                     non-NASM keyword used in other assemblers [on]
    bad-pragma              empty or malformed %pragma [off]
    unknown-pragma          unknown %pragma facility or directive [off]
    not-my-pragma           %pragma not applicable to this compilation [off]
    unknown-warning         unknown warning in -W/-w or warning directive [off]
    negative-rep            regative %rep count [on]
    phase                   phase error during stabilization [off]
    label-redef             label redefined to an identical value [off]
    label-redef-late        label (re)defined during code generation [error]
    other                   any warning not specifially mentioned above [on]
    all                     all possible warnings

For a list of valid output formats, use -hf.
For a list of debug formats, use -f <format> -y.
NASM version 2.14.02 compiled on Jan 22 2021

Resource usage statistics from testing nasm:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.3M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: nasm-2.14.02-h7f98852_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


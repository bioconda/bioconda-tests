  Package               Version  Build               Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex           0.1  conda_forge         conda-forge/linux-64                    Cached
  + _openmp_mutex           4.5  1_gnu               conda-forge/linux-64                    Cached
  + ca-certificates   2021.5.30  ha878542_0          conda-forge/linux-64                    Cached
  + ld_impl_linux-64     2.36.1  hea4e1c9_2          conda-forge/linux-64                    Cached
  + libffi                  3.3  h58526e2_2          conda-forge/linux-64                    Cached
  + libgcc-ng            11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libgomp              11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libstdcxx-ng         11.1.0  h56837e0_8          conda-forge/linux-64                    Cached
  + ncurses                 6.2  h58526e2_4          conda-forge/linux-64                    Cached
  + openssl              1.1.1k  h7f98852_1          conda-forge/linux-64                    Cached
  + pip                  21.2.4  pyhd8ed1ab_0        conda-forge/noarch                      Cached
  + pyfaidx               0.6.2  pyh5e36f6f_0        /home/vsts/conda/conda-bld/linux-64      29 KB
  + python                3.9.6  h49503c6_1_cpython  conda-forge/linux-64                    Cached
  + python_abi              3.9  2_cp39              conda-forge/linux-64                    Cached
  + readline                8.1  h46c0cb4_0          conda-forge/linux-64                    Cached
  + setuptools           57.4.0  py39hf3d152e_0      conda-forge/linux-64                    Cached
  + six                  1.16.0  pyh6c4a22f_0        conda-forge/noarch                      Cached
  + sqlite               3.36.0  h9cd32fc_0          conda-forge/linux-64                    Cached
  + tk                   8.6.11  h21135ba_0          conda-forge/linux-64                    Cached
  + tzdata                2021a  he74cb21_1          conda-forge/noarch                      Cached
  + wheel                0.37.0  pyhd8ed1ab_1        conda-forge/noarch                      Cached
  + xz                    5.2.5  h516909a_1          conda-forge/linux-64                    Cached
  + zlib                 1.2.11  h516909a_1010       conda-forge/linux-64                    Cached

  Summary:

  Install: 23 packages

  Total download: 29 KB

─────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: pyfaidx-0.6.2-pyh5e36f6f_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/pyfaidx_1630435293713/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge          conda-forge
    _openmp_mutex:    4.5-1_gnu                conda-forge
    ca-certificates:  2021.5.30-ha878542_0     conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2        conda-forge
    libffi:           3.3-h58526e2_2           conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8        conda-forge
    libgomp:          11.1.0-hc902ee8_8        conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8        conda-forge
    ncurses:          6.2-h58526e2_4           conda-forge
    openssl:          1.1.1k-h7f98852_1        conda-forge
    pip:              21.2.4-pyhd8ed1ab_0      conda-forge
    pyfaidx:          0.6.2-pyh5e36f6f_0       local      
    python:           3.9.6-h49503c6_1_cpython conda-forge
    python_abi:       3.9-2_cp39               conda-forge
    readline:         8.1-h46c0cb4_0           conda-forge
    setuptools:       57.4.0-py39hf3d152e_0    conda-forge
    six:              1.16.0-pyh6c4a22f_0      conda-forge
    sqlite:           3.36.0-h9cd32fc_0        conda-forge
    tk:               8.6.11-h21135ba_0        conda-forge
    tzdata:           2021a-he74cb21_1         conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1      conda-forge
    xz:               5.2.5-h516909a_1         conda-forge
    zlib:             1.2.11-h516909a_1010     conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/pyfaidx_1630435293713/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac
export SRC_DIR=/home/vsts/conda/conda-bld/pyfaidx_1630435293713/test_tmp
import: 'pyfaidx'
import: 'pyfaidx'
usage: faidx [-h] [-b BED] [-o OUT]
             [-i {bed,chromsizes,nucleotide,transposed}] [-c] [-r] [-y]
             [-a SIZE_RANGE] [-n | -f] [-t] [-x] [-l] [-s DEFAULT_SEQ]
             [-d DELIMITER] [-e HEADER_FUNCTION]
             [-u {stop,first,last,longest,shortest}] [-g REGEX] [-v] [-m | -M]
             [--no-output] [--no-rebuild] [--version]
             fasta [regions ...]

Fetch sequences from FASTA. If no regions are specified, all entries in the
input file are returned. Input FASTA file must be consistently line-wrapped,
and line wrapping of output is based on input line lengths.

positional arguments:
  fasta                 FASTA file
  regions               space separated regions of sequence to fetch e.g.
                        chr1:1-1000

optional arguments:
  -h, --help            show this help message and exit
  --no-rebuild          do not rebuild the .fai index even if it is out of
                        date. default: False
  --version             print pyfaidx version number

input options:
  -b BED, --bed BED     bed file of regions (zero-based start coordinate)

output options:
  -o OUT, --out OUT     output file name (default: stdout)
  -i {bed,chromsizes,nucleotide,transposed}, --transform {bed,chromsizes,nucleotide,transposed}
                        transform the requested regions into another format.
                        default: None
  -c, --complement      complement the sequence. default: False
  -r, --reverse         reverse the sequence. default: False
  -y, --auto-strand     reverse complement the sequence when start > end
                        coordinate. default: False
  -a SIZE_RANGE, --size-range SIZE_RANGE
                        selected sequences are in the size range [low, high].
                        example: 1,1000 default: None
  -x, --split-files     write each region to a separate file (names are
                        derived from regions)
  -l, --lazy            fill in --default-seq for missing ranges. default:
                        False
  -s DEFAULT_SEQ, --default-seq DEFAULT_SEQ
                        default base for missing positions and masking.
                        default: None
  -m, --mask-with-default-seq
                        mask the FASTA file using --default-seq default: False
  -M, --mask-by-case    mask the FASTA file by changing to lowercase. default:
                        False
  --no-output           do not output any sequence. default: False

header options:
  -n, --no-names        omit sequence names from output. default: False
  -f, --long-names      output full (long) names from the input fasta headers.
                        default: headers are truncated after the first
                        whitespace
  -t, --no-coords       omit coordinates (e.g. chr:start-end) from output
                        headers. default: False
  -d DELIMITER, --delimiter DELIMITER
                        delimiter for splitting names to multiple values
                        (duplicate names will be discarded). default: None
  -e HEADER_FUNCTION, --header-function HEADER_FUNCTION
                        python function to modify header lines e.g: "lambda x:
                        x.split("|")[0]". default: lambda x: x.split()[0]
  -u {stop,first,last,longest,shortest}, --duplicates-action {stop,first,last,longest,shortest}
                        entry to take when duplicate sequence names are
                        encountered. default: stop

matching arguments:
  -g REGEX, --regex REGEX
                        selected sequences are those matching regular
                        expression. default: .*
  -v, --invert-match    selected sequences are those not matching 'regions'
                        argument. default: False

Please cite: Shirley MD, Ma Z, Pedersen BS, Wheelan SJ. (2015) Efficient
"pythonic" access to FASTA files using pyfaidx. PeerJ PrePrints 3:e1196
https://dx.doi.org/10.7287/peerj.preprints.970v1

Resource usage statistics from testing pyfaidx:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.5M
   Disk usage: 24B
   Time elapsed: 0:00:02.1


TEST END: pyfaidx-0.6.2-pyh5e36f6f_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


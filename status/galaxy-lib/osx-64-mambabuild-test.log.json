  Package              Version  Build               Channel                                    Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + boltons             21.0.0  pyhd8ed1ab_0        conda-forge/noarch                       211 KB
  + ca-certificates  2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + docutils            0.17.1  py39h6e9494a_0      conda-forge/osx-64                       761 KB
  + galaxy-lib          19.5.2  pyh864c0ab_1        /Users/runner/conda/conda-bld/osx-64     257 KB
  + libcxx              12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libffi                 3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + markupsafe           2.0.1  py39h89e85a6_0      conda-forge/osx-64                       Cached
  + ncurses                6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + openssl             1.1.1k  h0d85af4_1          conda-forge/osx-64                       Cached
  + packaging             21.0  pyhd8ed1ab_0        conda-forge/noarch                        35 KB
  + pip                 21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + pyparsing            2.4.7  pyh9f0ad1d_0        conda-forge/noarch                        60 KB
  + python               3.9.6  hd187cdc_1_cpython  conda-forge/osx-64                       Cached
  + python_abi             3.9  2_cp39              conda-forge/osx-64                       Cached
  + pyyaml               5.4.1  py39h89e85a6_1      conda-forge/osx-64                       Cached
  + readline               8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + setuptools          57.4.0  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + six                 1.16.0  pyh6c4a22f_0        conda-forge/noarch                       Cached
  + sqlite              3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + tk                  8.6.11  hd798d34_0          conda-forge/osx-64                       Cached
  + tzdata               2021a  he74cb21_1          conda-forge/noarch                       Cached
  + wheel               0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                   5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + yaml                 0.2.5  haf1e3a3_0          conda-forge/osx-64                       Cached
  + zlib                1.2.11  h7795811_1010       conda-forge/osx-64                       Cached

  Summary:

  Install: 25 packages

  Total download: 1 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: galaxy-lib-19.5.2-pyh864c0ab_1.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/galaxy-lib_1630432790538/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol


The following NEW packages will be INSTALLED:

    boltons:         21.0.0-pyhd8ed1ab_0      conda-forge
    ca-certificates: 2021.5.30-h033912b_0     conda-forge
    docutils:        0.17.1-py39h6e9494a_0    conda-forge
    galaxy-lib:      19.5.2-pyh864c0ab_1      local      
    libcxx:          12.0.1-habf9029_0        conda-forge
    libffi:          3.3-h046ec9c_2           conda-forge
    markupsafe:      2.0.1-py39h89e85a6_0     conda-forge
    ncurses:         6.2-h2e338ed_4           conda-forge
    openssl:         1.1.1k-h0d85af4_1        conda-forge
    packaging:       21.0-pyhd8ed1ab_0        conda-forge
    pip:             21.2.4-pyhd8ed1ab_0      conda-forge
    pyparsing:       2.4.7-pyh9f0ad1d_0       conda-forge
    python:          3.9.6-hd187cdc_1_cpython conda-forge
    python_abi:      3.9-2_cp39               conda-forge
    pyyaml:          5.4.1-py39h89e85a6_1     conda-forge
    readline:        8.1-h05e3726_0           conda-forge
    setuptools:      57.4.0-py39h6e9494a_0    conda-forge
    six:             1.16.0-pyh6c4a22f_0      conda-forge
    sqlite:          3.36.0-h23a322b_0        conda-forge
    tk:              8.6.11-hd798d34_0        conda-forge
    tzdata:          2021a-he74cb21_1         conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1      conda-forge
    xz:              5.2.5-haf1e3a3_1         conda-forge
    yaml:            0.2.5-haf1e3a3_0         conda-forge
    zlib:            1.2.11-h7795811_1010     conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/galaxy-lib_1630432790538/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol
export SRC_DIR=/Users/runner/conda/conda-bld/galaxy-lib_1630432790538/test_tmp
import: 'galaxy'
import: 'galaxy.containers'
import: 'galaxy.exceptions'
import: 'galaxy.jobs'
import: 'galaxy.jobs.metrics'
import: 'galaxy.jobs.metrics.collectl'
import: 'galaxy.jobs.metrics.instrumenters'
import: 'galaxy.objectstore'
import: 'galaxy.tools'
import: 'galaxy.tools.cwl'
import: 'galaxy.tools.deps'
import: 'galaxy.tools.deps.container_resolvers'
import: 'galaxy.tools.deps.mulled'
import: 'galaxy.tools.deps.resolvers'
import: 'galaxy.tools.linters'
import: 'galaxy.tools.locations'
import: 'galaxy.tools.parser'
import: 'galaxy.tools.toolbox'
import: 'galaxy.tools.toolbox.filters'
import: 'galaxy.tools.toolbox.lineages'
import: 'galaxy.tools.verify'
import: 'galaxy.tools.verify.asserts'
import: 'galaxy.util'
import: 'galaxy.util.logging'
import: 'galaxy.util.path'
import: 'galaxy'
import: 'galaxy.containers'
import: 'galaxy.exceptions'
import: 'galaxy.jobs'
import: 'galaxy.jobs.metrics'
import: 'galaxy.jobs.metrics.collectl'
import: 'galaxy.jobs.metrics.instrumenters'
import: 'galaxy.objectstore'
import: 'galaxy.tools'
import: 'galaxy.tools.cwl'
import: 'galaxy.tools.deps'
import: 'galaxy.tools.deps.container_resolvers'
import: 'galaxy.tools.deps.mulled'
import: 'galaxy.tools.deps.resolvers'
import: 'galaxy.tools.linters'
import: 'galaxy.tools.locations'
import: 'galaxy.tools.parser'
import: 'galaxy.tools.toolbox'
import: 'galaxy.tools.toolbox.filters'
import: 'galaxy.tools.toolbox.lineages'
import: 'galaxy.tools.verify'
import: 'galaxy.tools.verify.asserts'
import: 'galaxy.util'
import: 'galaxy.util.logging'
import: 'galaxy.util.path'
usage: galaxy-tool-test [-h] [-u GALAXY_URL] [-k KEY] [-a ADMIN_KEY]
                        [--force_path_paste] [-t TOOL_ID]
                        [--tool-version TOOL_VERSION] [-i TEST_INDEX]
                        [-o OUTPUT] [--append] [-j OUTPUT_JSON] [--verbose]

Script to quickly run a tool test against a running Galaxy instance.

optional arguments:
  -h, --help            show this help message and exit
  -u GALAXY_URL, --galaxy-url GALAXY_URL
                        Galaxy URL
  -k KEY, --key KEY     Galaxy User API Key
  -a ADMIN_KEY, --admin-key ADMIN_KEY
                        Galaxy Admin API Key
  --force_path_paste    This requires Galaxy-side config option
                        "allow_path_paste" enabled. Allows for fetching test
                        data locally. Only for admins.
  -t TOOL_ID, --tool-id TOOL_ID
                        Tool ID
  --tool-version TOOL_VERSION
                        Tool Version
  -i TEST_INDEX, --test-index TEST_INDEX
                        Tool Test Index (starting at 0) - by default all tests
                        will run.
  -o OUTPUT, --output OUTPUT
                        directory to dump outputs to
  --append              Extend a test record json (created with --output-json)
                        with additional tests.
  -j OUTPUT_JSON, --output-json OUTPUT_JSON
                        output metadata json
  --verbose             Verbose logging.
usage: mulled-build [-h] [--involucro-path INVOLUCRO_PATH] [--dry-run]
                    [--verbose] [--singularity]
                    [--singularity-image-dir SINGULARITY_IMAGE_DIR]
                    [-n NAMESPACE] [-r REPOSITORY_TEMPLATE] [-c CHANNELS]
                    [--conda-version CONDA_VERSION]
                    [--oauth-token OAUTH_TOKEN] [--check-published]
                    [--hash {v1,v2}] [--name-override NAME_OVERRIDE]
                    [--image-build IMAGE_BUILD]
                    [--repository-name REPOSITORY_NAME] [--test TEST]
                    [--test-files TEST_FILES]
                    COMMAND TARGETS

Build a mulled image for specified conda targets.

positional arguments:
  COMMAND               Command (build-and-test, build, all)
  TARGETS               Build a single container with specific package(s).

optional arguments:
  -h, --help            show this help message and exit
  --involucro-path INVOLUCRO_PATH
                        Path to involucro (if not set will look in working directory and on PATH).
  --dry-run             Just print commands instead of executing them.
  --verbose             Cause process to be verbose.
  --singularity         Additionally build a singularity image.
  --singularity-image-dir SINGULARITY_IMAGE_DIR
                        Directory to write singularity images too.
  -n NAMESPACE, --namespace NAMESPACE
                        quay.io namespace.
  -r REPOSITORY_TEMPLATE, --repository_template REPOSITORY_TEMPLATE
                        Docker repository target for publication (only quay.io or compat. API is currently supported).
  -c CHANNELS, --channels CHANNELS
                        Comma separated list of target conda channels.
  --conda-version CONDA_VERSION
                        Change to specified version of Conda before installing packages.
  --oauth-token OAUTH_TOKEN
                        If set, use this token when communicating with quay.io API.
  --check-published
  --hash {v1,v2}
  --name-override NAME_OVERRIDE
                        Override mulled image name - this is not recommended since metadata will not be detectable from the name of resulting images
  --image-build IMAGE_BUILD
                        Build a versioned variant of this image.
  --repository-name REPOSITORY_NAME
                        Name of mulled container (leave blank to auto-generate based on packages - recommended).
  --test TEST           Provide a test command for the container.
  --test-files TEST_FILES
                        Provide test-files that may be required to run the test command. Individual mounts are separated by comma.The source:dest docker syntax is respected. If relative file paths are given, files will be mounted in /source/<relative_file_path>

Examples

Build a mulled image with:

    mulled-build build 'samtools=1.3.1--4,bedtools=2.22'
usage: mulled-build-channel [-h] --repo-data REPO_DATA
                            [--diff-hours DIFF_HOURS]
                            [--recipes-dir RECIPES_DIR] [--force-rebuild]
                            [--involucro-path INVOLUCRO_PATH] [--dry-run]
                            [--verbose] [--singularity]
                            [--singularity-image-dir SINGULARITY_IMAGE_DIR]
                            [-n NAMESPACE] [-r REPOSITORY_TEMPLATE]
                            [-c CHANNELS] [--conda-version CONDA_VERSION]
                            [--oauth-token OAUTH_TOKEN] [--check-published]
                            [--hash {v1,v2}] [--targets TARGETS]
                            [--repository-name REPOSITORY_NAME]
                            COMMAND

Build a mulled images for all recent conda recipe updates that don't have existing images.

positional arguments:
  COMMAND               Command (list, build-and-test, build, all)

optional arguments:
  -h, --help            show this help message and exit
  --repo-data REPO_DATA
                        Published repository data. If you want to build all containers for bioconda, this parameter needs to be set to "bioconda"
  --diff-hours DIFF_HOURS
                        If finding all recently changed recipes, use this number of hours.
  --recipes-dir RECIPES_DIR
  --force-rebuild       Rebuild package even if already published.
  --involucro-path INVOLUCRO_PATH
                        Path to involucro (if not set will look in working directory and on PATH).
  --dry-run             Just print commands instead of executing them.
  --verbose             Cause process to be verbose.
  --singularity         Additionally build a singularity image.
  --singularity-image-dir SINGULARITY_IMAGE_DIR
                        Directory to write singularity images too.
  -n NAMESPACE, --namespace NAMESPACE
                        quay.io namespace.
  -r REPOSITORY_TEMPLATE, --repository_template REPOSITORY_TEMPLATE
                        Docker repository target for publication (only quay.io or compat. API is currently supported).
  -c CHANNELS, --channels CHANNELS
                        Comma separated list of target conda channels.
  --conda-version CONDA_VERSION
                        Change to specified version of Conda before installing packages.
  --oauth-token OAUTH_TOKEN
                        If set, use this token when communicating with quay.io API.
  --check-published
  --hash {v1,v2}
  --targets TARGETS     Build a single container with specific package(s).
  --repository-name REPOSITORY_NAME
                        Name of a single container (leave blank to auto-generate based on packages).

Examples:

Build mulled images for recent bioconda changes with:

    mulled-build-channel build

Build, test, and publish images with the follow command:

    mulled-build-channel all

See recent changes that would be built with:

    mulled-build-channel list
usage: mulled-search [-h] [-o ORGANIZATION_STRING] [--non-strict] -s SEARCH

Searches in a given quay organization for a repository

optional arguments:
  -h, --help            show this help message and exit
  -o ORGANIZATION_STRING, --organization ORGANIZATION_STRING
                        Change organization. Default is biocontainers.
  --non-strict          Autocorrection of typos activated. Lists more results
                        but can be confusing. For too many queries quay.io
                        blocks the request and the results can be incomplete.
  -s SEARCH, --search SEARCH
                        The name of the tool you want to search for.
usage: mulled-build-tool [-h] [--involucro-path INVOLUCRO_PATH] [--dry-run]
                         [--verbose] [--singularity]
                         [--singularity-image-dir SINGULARITY_IMAGE_DIR]
                         [-n NAMESPACE] [-r REPOSITORY_TEMPLATE] [-c CHANNELS]
                         [--conda-version CONDA_VERSION]
                         [--oauth-token OAUTH_TOKEN] [--check-published]
                         [--hash {v1,v2}] [--name-override NAME_OVERRIDE]
                         [--image-build IMAGE_BUILD]
                         COMMAND TOOL

Build a mulled images for a tool source (Galaxy or CWL tool).

positional arguments:
  COMMAND               Command (build-and-test, build, all)
  TOOL                  Path to tool to build mulled image for.

optional arguments:
  -h, --help            show this help message and exit
  --involucro-path INVOLUCRO_PATH
                        Path to involucro (if not set will look in working directory and on PATH).
  --dry-run             Just print commands instead of executing them.
  --verbose             Cause process to be verbose.
  --singularity         Additionally build a singularity image.
  --singularity-image-dir SINGULARITY_IMAGE_DIR
                        Directory to write singularity images too.
  -n NAMESPACE, --namespace NAMESPACE
                        quay.io namespace.
  -r REPOSITORY_TEMPLATE, --repository_template REPOSITORY_TEMPLATE
                        Docker repository target for publication (only quay.io or compat. API is currently supported).
  -c CHANNELS, --channels CHANNELS
                        Comma separated list of target conda channels.
  --conda-version CONDA_VERSION
                        Change to specified version of Conda before installing packages.
  --oauth-token OAUTH_TOKEN
                        If set, use this token when communicating with quay.io API.
  --check-published
  --hash {v1,v2}
  --name-override NAME_OVERRIDE
                        Override mulled image name - this is not recommended since metadata will not be detectable from the name of resulting images
  --image-build IMAGE_BUILD
                        Build a versioned variant of this image.

Examples:

Build mulled images for requirements defined in a tool:

    mulled-build-tool build path/to/tool_file.xml
usage: mulled-build-files [-h] [--involucro-path INVOLUCRO_PATH] [--dry-run]
                          [--verbose] [--singularity]
                          [--singularity-image-dir SINGULARITY_IMAGE_DIR]
                          [-n NAMESPACE] [-r REPOSITORY_TEMPLATE]
                          [-c CHANNELS] [--conda-version CONDA_VERSION]
                          [--oauth-token OAUTH_TOKEN] [--check-published]
                          [--hash {v1,v2}]
                          COMMAND FILES

Build all composite mulled recipes discovered in TSV files.

positional arguments:
  COMMAND               Command (build-and-test, build, all)
  FILES                 Path to directory (or single file) of TSV files describing composite recipes.

optional arguments:
  -h, --help            show this help message and exit
  --involucro-path INVOLUCRO_PATH
                        Path to involucro (if not set will look in working directory and on PATH).
  --dry-run             Just print commands instead of executing them.
  --verbose             Cause process to be verbose.
  --singularity         Additionally build a singularity image.
  --singularity-image-dir SINGULARITY_IMAGE_DIR
                        Directory to write singularity images too.
  -n NAMESPACE, --namespace NAMESPACE
                        quay.io namespace.
  -r REPOSITORY_TEMPLATE, --repository_template REPOSITORY_TEMPLATE
                        Docker repository target for publication (only quay.io or compat. API is currently supported).
  -c CHANNELS, --channels CHANNELS
                        Comma separated list of target conda channels.
  --conda-version CONDA_VERSION
                        Change to specified version of Conda before installing packages.
  --oauth-token OAUTH_TOKEN
                        If set, use this token when communicating with quay.io API.
  --check-published
  --hash {v1,v2}

Use mulled-build-channel to build images for single recipes for a whole conda
channel. This script instead builds images for combinations of recipes. This
script can be given a single TSV file or a directory of TSV files to process.

Examples:

Build all recipes discovered in tsv files in a single directory.

    mulled-build-files build

Resource usage statistics from testing galaxy-lib:
   Process count: 3
   CPU time: Sys=0:00:00.1, User=0:00:00.1
   Memory: 23.4M
   Disk usage: 20B
   Time elapsed: 0:00:06.2


TEST END: galaxy-lib-19.5.2-pyh864c0ab_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


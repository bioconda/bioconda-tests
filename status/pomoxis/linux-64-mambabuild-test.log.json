  Package                  Version  Build                Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex              0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex              4.5  1_gnu                conda-forge/linux-64                    Cached
  + bcftools                  1.13  h3a49de5_0           bioconda/linux-64                       873 KB
  + bedtools                2.30.0  h7d7f7ad_2           bioconda/linux-64                        18 MB
  + biopython                 1.79  py39h3811e60_0       conda-forge/linux-64                      3 MB
  + bzip2                    1.0.8  h7f98852_4           conda-forge/linux-64                    Cached
  + c-ares                  1.17.2  h7f98852_0           conda-forge/linux-64                    Cached
  + ca-certificates      2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + certifi              2021.5.30  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + cycler                  0.10.0  py_2                 conda-forge/noarch                        9 KB
  + freetype                2.10.4  h0708190_1           conda-forge/linux-64                    Cached
  + gsl                        2.6  he838d99_2           conda-forge/linux-64                    Cached
  + htslib                    1.13  h9093b5e_0           bioconda/linux-64                         2 MB
  + intervaltree             3.0.2  py_0                 conda-forge/noarch                       23 KB
  + jbig                       2.1  h7f98852_2003        conda-forge/linux-64                    Cached
  + jpeg                        9d  h36c2ea0_0           conda-forge/linux-64                    Cached
  + k8                       0.2.5  h9a82719_1           bioconda/linux-64                         2 MB
  + kiwisolver               1.3.2  py39h1a9c180_0       conda-forge/linux-64                     79 KB
  + krb5                    1.19.2  hcc1bbae_0           conda-forge/linux-64                    Cached
  + lcms2                     2.12  hddcbb42_0           conda-forge/linux-64                    443 KB
  + ld_impl_linux-64        2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + lerc                     2.2.1  h9c3ff4c_0           conda-forge/linux-64                    Cached
  + libblas                  3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcblas                 3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcurl                 7.78.0  h2574ce0_0           conda-forge/linux-64                    Cached
  + libdeflate                 1.7  h7f98852_5           conda-forge/linux-64                    Cached
  + libedit           3.1.20191231  he28a2e2_2           conda-forge/linux-64                    Cached
  + libev                     4.33  h516909a_1           conda-forge/linux-64                    Cached
  + libffi                     3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng               11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng          11.1.0  h69a702a_8           conda-forge/linux-64                    Cached
  + libgfortran5            11.1.0  h6c583b3_8           conda-forge/linux-64                    Cached
  + libgomp                 11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack                3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libnghttp2              1.43.0  h812cca2_0           conda-forge/linux-64                    Cached
  + libopenblas             0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                    Cached
  + libpng                  1.6.37  h21135ba_2           conda-forge/linux-64                    Cached
  + libssh2                 1.10.0  ha56f1ee_0           conda-forge/linux-64                    Cached
  + libstdcxx-ng            11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + libtiff                  4.3.0  hf544144_1           conda-forge/linux-64                    Cached
  + libwebp-base             1.2.1  h7f98852_0           conda-forge/linux-64                    Cached
  + lz4-c                    1.9.3  h9c3ff4c_1           conda-forge/linux-64                    Cached
  + matplotlib-base          3.4.3  py39h2fa2bec_0       conda-forge/linux-64                      7 MB
  + miniasm               0.3_r179  h5bf99c6_2           bioconda/linux-64                       134 KB
  + minimap2                  2.22  h5bf99c6_0           bioconda/linux-64                       483 KB
  + ncurses                    6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + numpy                   1.21.2  py39hdbf815f_0       conda-forge/linux-64                      6 MB
  + olefile                   0.46  pyh9f0ad1d_1         conda-forge/noarch                       32 KB
  + openjpeg                 2.4.0  hb52868f_1           conda-forge/linux-64                    444 KB
  + openssl                 1.1.1l  h7f98852_0           conda-forge/linux-64                    Cached
  + pandas                   1.3.2  py39hde0f152_0       conda-forge/linux-64                     13 MB
  + perl                    5.32.1  0_h7f98852_perl5     conda-forge/linux-64                     14 MB
  + pillow                   8.3.2  py39ha612740_0       conda-forge/linux-64                    701 KB
  + pip                     21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + pomoxis                  0.3.9  pyhdfd78af_0         /home/vsts/conda/conda-bld/linux-64      56 KB
  + porechop                 0.2.4  py39h7cff6ad_2       bioconda/linux-64                       104 KB
  + pyparsing                2.4.7  pyh9f0ad1d_0         conda-forge/noarch                       60 KB
  + pysam                 0.16.0.1  py39h051187c_3       bioconda/linux-64                         3 MB
  + python                   3.9.7  h49503c6_0_cpython   conda-forge/linux-64                    Cached
  + python-dateutil          2.8.2  pyhd8ed1ab_0         conda-forge/noarch                      240 KB
  + python_abi                 3.9  2_cp39               conda-forge/linux-64                    Cached
  + pytz                    2021.1  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + racon                   1.4.20  h9a82719_1           bioconda/linux-64                       163 KB
  + readline                   8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + samtools                  1.13  h8c37831_0           bioconda/linux-64                       397 KB
  + seqkit                   2.0.0  h9ee0642_0           bioconda/linux-64                         6 MB
  + setuptools              57.4.0  py39hf3d152e_0       conda-forge/linux-64                    Cached
  + six                     1.16.0  pyh6c4a22f_0         conda-forge/noarch                      Cached
  + sortedcontainers         2.4.0  pyhd8ed1ab_0         conda-forge/noarch                       26 KB
  + sqlite                  3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tk                      8.6.11  h27826a3_1           conda-forge/linux-64                    Cached
  + tornado                    6.1  py39h3811e60_1       conda-forge/linux-64                    646 KB
  + tzdata                   2021a  he74cb21_1           conda-forge/noarch                      Cached
  + wheel                   0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                       5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                    1.2.11  h516909a_1010        conda-forge/linux-64                    Cached
  + zstd                     1.5.0  ha95c52a_0           conda-forge/linux-64                    Cached

  Summary:

  Install: 77 packages

  Total download: 79 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: pomoxis-0.3.9-pyhdfd78af_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/pomoxis_1630882452994/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge            conda-forge
    _openmp_mutex:    4.5-1_gnu                  conda-forge
    bcftools:         1.13-h3a49de5_0            bioconda   
    bedtools:         2.30.0-h7d7f7ad_2          bioconda   
    biopython:        1.79-py39h3811e60_0        conda-forge
    bzip2:            1.0.8-h7f98852_4           conda-forge
    c-ares:           1.17.2-h7f98852_0          conda-forge
    ca-certificates:  2021.5.30-ha878542_0       conda-forge
    certifi:          2021.5.30-py39hf3d152e_0   conda-forge
    cycler:           0.10.0-py_2                conda-forge
    freetype:         2.10.4-h0708190_1          conda-forge
    gsl:              2.6-he838d99_2             conda-forge
    htslib:           1.13-h9093b5e_0            bioconda   
    intervaltree:     3.0.2-py_0                 conda-forge
    jbig:             2.1-h7f98852_2003          conda-forge
    jpeg:             9d-h36c2ea0_0              conda-forge
    k8:               0.2.5-h9a82719_1           bioconda   
    kiwisolver:       1.3.2-py39h1a9c180_0       conda-forge
    krb5:             1.19.2-hcc1bbae_0          conda-forge
    lcms2:            2.12-hddcbb42_0            conda-forge
    ld_impl_linux-64: 2.36.1-hea4e1c9_2          conda-forge
    lerc:             2.2.1-h9c3ff4c_0           conda-forge
    libblas:          3.9.0-11_linux64_openblas  conda-forge
    libcblas:         3.9.0-11_linux64_openblas  conda-forge
    libcurl:          7.78.0-h2574ce0_0          conda-forge
    libdeflate:       1.7-h7f98852_5             conda-forge
    libedit:          3.1.20191231-he28a2e2_2    conda-forge
    libev:            4.33-h516909a_1            conda-forge
    libffi:           3.3-h58526e2_2             conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8          conda-forge
    libgfortran-ng:   11.1.0-h69a702a_8          conda-forge
    libgfortran5:     11.1.0-h6c583b3_8          conda-forge
    libgomp:          11.1.0-hc902ee8_8          conda-forge
    liblapack:        3.9.0-11_linux64_openblas  conda-forge
    libnghttp2:       1.43.0-h812cca2_0          conda-forge
    libopenblas:      0.3.17-pthreads_h8fe5266_1 conda-forge
    libpng:           1.6.37-h21135ba_2          conda-forge
    libssh2:          1.10.0-ha56f1ee_0          conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8          conda-forge
    libtiff:          4.3.0-hf544144_1           conda-forge
    libwebp-base:     1.2.1-h7f98852_0           conda-forge
    lz4-c:            1.9.3-h9c3ff4c_1           conda-forge
    matplotlib-base:  3.4.3-py39h2fa2bec_0       conda-forge
    miniasm:          0.3_r179-h5bf99c6_2        bioconda   
    minimap2:         2.22-h5bf99c6_0            bioconda   
    ncurses:          6.2-h58526e2_4             conda-forge
    numpy:            1.21.2-py39hdbf815f_0      conda-forge
    olefile:          0.46-pyh9f0ad1d_1          conda-forge
    openjpeg:         2.4.0-hb52868f_1           conda-forge
    openssl:          1.1.1l-h7f98852_0          conda-forge
    pandas:           1.3.2-py39hde0f152_0       conda-forge
    perl:             5.32.1-0_h7f98852_perl5    conda-forge
    pillow:           8.3.2-py39ha612740_0       conda-forge
    pip:              21.2.4-pyhd8ed1ab_0        conda-forge
    pomoxis:          0.3.9-pyhdfd78af_0         local      
    porechop:         0.2.4-py39h7cff6ad_2       bioconda   
    pyparsing:        2.4.7-pyh9f0ad1d_0         conda-forge
    pysam:            0.16.0.1-py39h051187c_3    bioconda   
    python:           3.9.7-h49503c6_0_cpython   conda-forge
    python-dateutil:  2.8.2-pyhd8ed1ab_0         conda-forge
    python_abi:       3.9-2_cp39                 conda-forge
    pytz:             2021.1-pyhd8ed1ab_0        conda-forge
    racon:            1.4.20-h9a82719_1          bioconda   
    readline:         8.1-h46c0cb4_0             conda-forge
    samtools:         1.13-h8c37831_0            bioconda   
    seqkit:           2.0.0-h9ee0642_0           bioconda   
    setuptools:       57.4.0-py39hf3d152e_0      conda-forge
    six:              1.16.0-pyh6c4a22f_0        conda-forge
    sortedcontainers: 2.4.0-pyhd8ed1ab_0         conda-forge
    sqlite:           3.36.0-h9cd32fc_0          conda-forge
    tk:               8.6.11-h27826a3_1          conda-forge
    tornado:          6.1-py39h3811e60_1         conda-forge
    tzdata:           2021a-he74cb21_1           conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1        conda-forge
    xz:               5.2.5-h516909a_1           conda-forge
    zlib:             1.2.11-h516909a_1010       conda-forge
    zstd:             1.5.0-ha95c52a_0           conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/pomoxis_1630882452994/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_plac
export SRC_DIR=/home/vsts/conda/conda-bld/pomoxis_1630882452994/test_tmp
import: 'pomoxis'
import: 'pomoxis.bio'
import: 'pomoxis.util'
import: 'pomoxis'
import: 'pomoxis.bio'
import: 'pomoxis.util'
usage: catalogue_errors [-h] {count,analyse} ...

Create a catalogue of all query errors in a bam.

optional arguments:
  -h, --help       show this help message and exit

subcommands:
  valid commands

  {count,analyse}  additional help
    count          Count query errors in a bam.
    analyse        Analyse existing counts, optionally merging multiple
                   counters.
usage: common_errors_from_bam [-h] [-o OUTPUT_PREFIX] bam ref_fasta

Get errors common to multiple assemblies aligned to ref.

positional arguments:
  bam                   input bam file containing assemblies trimmed to a
                        common alignment window
  ref_fasta             reference fasta file of the reference over that
                        alignment window

optional arguments:
  -h, --help            show this help message and exit
  -o OUTPUT_PREFIX, --output_prefix OUTPUT_PREFIX
                        Prefix for outputs. (default: common_errors)
usage: assess_homopolymers [-h] {count,analyse} ...

Analyse homopolymer query and reference lengths.

optional arguments:
  -h, --help       show this help message and exit

subcommands:
  valid commands

  {count,analyse}  additional help
    count          Count homopolymers starting from a bam.
    analyse        Analyse existing counts, optionally merging multiple
                   counters.
usage: coverage_from_bam [-h] [-r REGIONS [REGIONS ...]]
                         [-p PREFIX | -o ONE_FILE] [-s STRIDE]
                         [--summary_only]
                         bam

Calculate read coverage depth from a bam.

positional arguments:
  bam                   .fasta/fastq file.

optional arguments:
  -h, --help            show this help message and exit
  -r REGIONS [REGIONS ...], --regions REGIONS [REGIONS ...]
                        Only process given regions. (default: None)
  -p PREFIX, --prefix PREFIX
                        Prefix for output, defaults to basename of bam.
                        (default: None)
  -o ONE_FILE, --one_file ONE_FILE
                        Single output file with "region" column. (default:
                        None)
  -s STRIDE, --stride STRIDE
                        Stride in genomic coordinate. (default: 1000)
  --summary_only        Output only the depth_summary.txt file (default:
                        False)

By default a file is written per reference sequence, this can be changed with
the `--one_file` option. If overlapping regions are specified, `--one_file`
should not be used.
usage: coverage_from_fastx [-h] [--coverage COVERAGE] [--longest]
                           basecalls ref_len

Estimate coverage from summed basecall and reference lengths

positional arguments:
  basecalls            input fastx file.
  ref_len              reference length (e.g. 4.8kb/mb/gb) or reference fastx
                       from which to calculate length.

optional arguments:
  -h, --help           show this help message and exit
  --coverage COVERAGE  Calculate fraction of reads required for this coverage.
                       (default: None)
  --longest            Use the longest reads when calculating fraction reads
                       required for a given coverage. (default: False)
usage: fast_convert [-h] [--discard_q] [--mock_q MOCK_Q] {qq,aa,aq,qa}

Convert between fasta<->fastq.

positional arguments:
  {qq,aa,aq,qa}    Conversion code: from->to.

optional arguments:
  -h, --help       show this help message and exit
  --discard_q      Discard quality information from fastq, use with --mock_q.
                   (default: False)
  --mock_q MOCK_Q  Mock quality value, valid for convert=aq|qq. (default: 10)
usage: long_fastx [-h] (--longest LONGEST | --bases BASES) [--others OTHERS]
                  input output

Extract longest reads from a fastq.

positional arguments:
  input              Input .fasta/q file.
  output             Output .fasta file.

optional arguments:
  -h, --help         show this help message and exit
  --longest LONGEST  Percentage of longest reads to partition.
  --bases BASES      Maximum number of bases (subject to at least one read.)
  --others OTHERS    Write all other reads to file.
usage: pomoxis_path [-h] program

Print the path of bundled executables.

positional arguments:
  program     name of program.

optional arguments:
  -h, --help  show this help message and exit
usage: qscores_from_summary [-h] [--median] [--ref REF]
                            summaries [summaries ...]

Extract Q scores from summary_from_stats output

positional arguments:
  summaries   *summ.txt created by summary_from_stats

optional arguments:
  -h, --help  show this help message and exit
  --median    Use median. If false, use mean. (default: False)
  --ref REF   process single ref, rather than overall result (default: None)
usage: split_fastx [-h] input output chunksize

Split records in a fasta/q file into chunks of a maximum size.

positional arguments:
  input       Input fastax/q file.
  output      Output fastax/q file.
  chunksize   Maximum size of output sequences.

optional arguments:
  -h, --help  show this help message and exit
usage: stats_from_bam [-h] [--bed BED] [-m MIN_LENGTH] [-a] [-o OUTPUT]
                      [-s SUMMARY] [-t THREADS]
                      bam

Parse a bamfile (from a stream) and output summary stats for each read.

positional arguments:
  bam                   Path to bam file.

optional arguments:
  -h, --help            show this help message and exit
  --bed BED             .bed file of reference regions to include. (default:
                        None)
  -m MIN_LENGTH, --min_length MIN_LENGTH
  -a, --all_alignments  Include secondary and supplementary alignments.
                        (default: False)
  -o OUTPUT, --output OUTPUT
                        Output alignment stats to file instead of stdout.
                        (default: <_io.TextIOWrapper name='<stdout>' mode='w'
                        encoding='utf-8'>)
  -s SUMMARY, --summary SUMMARY
                        Output summary to file instead of stderr. (default:
                        <_io.TextIOWrapper name='<stderr>' mode='w'
                        encoding='utf-8'>)
  -t THREADS, --threads THREADS
                        Number of threads for parallel processing. (default:
                        1)
usage: subsample_bam [-h] [-o OUTPUT_PREFIX] [-r REGIONS [REGIONS ...]]
                     [-p PROFILE] [-O {fwd,rev}] [-t THREADS] [-q QUALITY]
                     [-a ACCURACY] [-c COVERAGE] [-l LENGTH]
                     [--any_fail | --all_fail] [-x PATIENCE] [-s STRIDE] [-P]
                     [-S SEED]
                     bam depth [depth ...]

Subsample a bam to uniform or proportional depth

positional arguments:
  bam                   input bam file.
  depth                 Target depth.

optional arguments:
  -h, --help            show this help message and exit
  -o OUTPUT_PREFIX, --output_prefix OUTPUT_PREFIX
                        Output prefix (default: sub_sampled)
  -r REGIONS [REGIONS ...], --regions REGIONS [REGIONS ...]
                        Only process given regions. (default: None)
  -p PROFILE, --profile PROFILE
                        Stride in genomic coordinates for depth profile.
                        (default: 1000)
  -O {fwd,rev}, --orientation {fwd,rev}
                        Sample only forward or reverse reads. (default: None)
  -t THREADS, --threads THREADS
                        Number of threads to use. (default: -1)
  -q QUALITY, --quality QUALITY
                        Filter reads by mean qscore. (default: None)
  -a ACCURACY, --accuracy ACCURACY
                        Filter reads by accuracy. (default: None)
  -c COVERAGE, --coverage COVERAGE
                        Filter reads by coverage (what fraction of the read
                        aligns). (default: None)
  -l LENGTH, --length LENGTH
                        Filter reads by read length. (default: None)
  --any_fail            Exit with an error if any region has insufficient
                        coverage. (default: False)
  --all_fail            Exit with an error if all regions have insufficient
                        coverage. (default: False)

Uniform sampling options:
  -x PATIENCE, --patience PATIENCE
                        Maximum iterations with no change in median coverage
                        before aborting. (default: 5)
  -s STRIDE, --stride STRIDE
                        Stride in genomic coordinates when searching for new
                        reads. Smaller can lead to more compact pileup.
                        (default: 1000)

Proportional sampling options:
  -P, --proportional    Activate proportional sampling, thus keeping depth
                        variations of the pileup. (default: False)
  -S SEED, --seed SEED  Random seed for proportional downsampling of reads.
                        (default: None)
usage: summary_from_stats [-h] [-i INPUT] [-o OUTPUT]
                          [-p PERCENTILES [PERCENTILES ...]] [-pr]

Summarise output of `stats_from_bam`.

optional arguments:
  -h, --help            show this help message and exit
  -i INPUT, --input INPUT
  -o OUTPUT, --output OUTPUT
                        Output summary to file instead of stderr. (default:
                        <_io.TextIOWrapper name='<stderr>' mode='w'
                        encoding='utf-8'>)
  -p PERCENTILES [PERCENTILES ...], --percentiles PERCENTILES [PERCENTILES ...]
                        Percentiles for summary. (default: (10, 50, 90))
  -pr, --per_reference  Also output a summary for each reference. (default:
                        False)
usage: trim_alignments [-h] [-r REF_NAME] [-o OUTPUT_PREFIX]
                       [-f REFERENCE_FASTA]
                       bams [bams ...]

Trim alignments in multiple bams to common overlap window.

positional arguments:
  bams                  input bam files

optional arguments:
  -h, --help            show this help message and exit
  -r REF_NAME, --ref_name REF_NAME
                        Reference to process, only needed if bams contain
                        multiple references. (default: None)
  -o OUTPUT_PREFIX, --output_prefix OUTPUT_PREFIX
                        Prefix for outputs. (default: trimmed)
  -f REFERENCE_FASTA, --reference_fasta REFERENCE_FASTA
                        Reference fasta to trim to alignment window. (default:
                        None)
usage: ref_seqs_from_bam [-h] bam

Extract reference sequence that queries are aligned to

positional arguments:
  bam         input bam file, MD tag must be set (mini_align -m).

optional arguments:
  -h, --help  show this help message and exit
usage: find_indels [-h] [-m MIN_INDEL_LENGTH] [-a] [-o OUTPUT] [-b BED]
                   [-t THREADS]
                   bam

Parse a bamfile and document indels.

positional arguments:
  bam                   Path to bam file.

optional arguments:
  -h, --help            show this help message and exit
  -m MIN_INDEL_LENGTH, --min_indel_length MIN_INDEL_LENGTH
                        Filter out indels shorter than this length. (default:
                        0)
  -a, --all_alignments  Include secondary and supplementary alignments.
                        (default: False)
  -o OUTPUT, --output OUTPUT
                        Output indels to file instead of stdout. (default:
                        <_io.TextIOWrapper name='<stdout>' mode='w'
                        encoding='utf-8'>)
  -b BED, --bed BED     Additionaly output a .bed file. (default: None)
  -t THREADS, --threads THREADS
                        Number of threads for parallel processing. (default:
                        1)

Resource usage statistics from testing pomoxis:
   Process count: 3
   CPU time: Sys=0:00:00.3, User=0:00:00.9
   Memory: 70.0M
   Disk usage: 24B
   Time elapsed: 0:00:08.2


TEST END: pomoxis-0.3.9-pyhdfd78af_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


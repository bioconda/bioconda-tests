  Package          Version  Build        Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge  conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu        conda-forge/linux-64                    Cached
  + consan             1.2  h779adbc_2   /home/vsts/conda/conda-bld/linux-64       3 MB
  + libgcc-ng       11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached

  Summary:

  Install: 5 packages

  Total download: 3 MB

─────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: consan-1.2-h779adbc_2.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/consan_1630918267656/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge   conda-forge
    _openmp_mutex: 4.5-1_gnu         conda-forge
    consan:        1.2-h779adbc_2    local      
    libgcc-ng:     11.1.0-hc902ee8_8 conda-forge
    libgomp:       11.1.0-hc902ee8_8 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/consan_1630918267656/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/home/vsts/conda/conda-bld/consan_1630918267656/test_tmp
Sankoff: Full Implementation of Sankoff 1985
         Sankoff 0.1 (in progress)Usage: comppair [-options] <seqfile in>

where options are:
-h            : print short help, usage info, and grammar description
-S	      : suppress comparison totals 
-q	      : suppress every pair alignment prediction output 
-M 1	      : turn on Mathews definition of paired 

Usage: comppair [-options] <seqfile in>


CONUS: Single Sequence SCFG algorithms
         CONUS 1.0 (in progress)
Usage: conus_compare [-options] <testfile1> <testfile2> ...

where options are:
-h            : print short help, usage info, and grammar description
-m <file>     : Use model <file> 
-g <string>   : Use grammar <string> and plus one scoring 
   -H	        (with -g) shift to hydrogen bonding scoring  
   --flat       (with -g) flat scoring scheme 
-M	      : Use the Mathews99 method of evalutation 
-c            : output in table format 
-a            : give cummulative statistics (global) 
-i            : give statistics on each sequence (ignored in table mode)
-p            : output real and predicted structures
-q            : output predicted structures in stockholm format 
-v            : verbose output 
-x            : print out parameters of model 
-d            : debugging output 
-t            : debugging, print traceback
-f            : debugging, print fill matrix from cyk 

Grammars available in CONUS: (use three letter codes) 
  code	Grammar:
  ----  -------- 
  NUS   Ambiguous Simple Grammar (G1) 
  UNA   Another Unambiguous (G3) 
  RUN   Little Unambiguous (G4) 
  IVO	Simplest Unambiguous (G5) 
  BJK	Pfold grammar (G6) 
  YRN	Stacking grammar (G2) 
  UYN   Stacking analog of UNA (G7)
  RY3   Stacking analog of RUN (G8)
  BK2	Stacking parameterization of BJK (G6S)

Usage: conus_compare [-options] <testfile1> <testfile2> ...


CONUS: Single Sequence SCFG algorithms
         CONUS 1.0 (in progress)
Usage: conus_train [-options] <training set files> 

where options are:
-h            : print short help, usage info, and grammar description
-g <string>   : Use grammar <string>, defaults to NUS
-l <file>     : Load prior specified in <file> 
-1            : Turn off the standard plus one prior 
-s <file>     : save model file to <file>; defaults to conus.mod 
-x            : print out parameters of model 
-t            : print traceback
-d            : debugging output 
-v            : verbose output 

Grammars available in CONUS: (use three letter codes) 
  code	Grammar:
  ----  -------- 
  NUS   Ambiguous Simple Grammar (G1) 
  UNA   Another Unambiguous (G3) 
  RUN   Little Unambiguous (G4) 
  IVO	Simplest Unambiguous (G5) 
  BJK	Pfold grammar (G6) 
  YRN	Stacking grammar (G2) 
  UYN   Stacking analog of UNA (G7)
  RY3   Stacking analog of RUN (G8)
  BK2	Stacking parameterization of BJK (G6S)

Usage: conus_train [-options] <training set files> 


Sankoff: Full Implementation of Sankoff 1985
         Sankoff 0.1 (in progress)Usage: pModel [-options] <modfile>

  [Defaults to printing all parameters as probs] 

where options are:
-h            : print short help, usage info, and grammar description
-t            : Print transition parameters 
-x            : Print 16x16 pairwise emission parameters 
-f            : Print 4x4 alignment emission parameters 
-d            : Print 4 background (to gap) parameters 
-q            : Print parameters as scores (defaults to as probs) 
-S            : Print parameters as both probs and scores 
-l	      : Linearize output for gnuplot (not valid with -q or -S) 
-v	      : Include labels in linear output 

Usage: pModel [-options] <modfile>


Sankoff: Full Implementation of Sankoff 1985
         Sankoff 0.1 (in progress)Usage: scompare [-options] <test msa> 

[Given a MSA, calculate foldings for all pairs.  Output two files -- 
predicted pairs to stdout and given pairs to a required -s file.] 
where options are:
-h            : print short help, usage info, and grammar description
-s <file>     : Output of given structure in ordered pairs (needed for comppair) 
-M <int>      : Ensure that pin selection results in something near X Mbytes memory 
-C <int>      : do CYK and use <int> pins from trusted alignment 
-P <int>      : do CYK and use <int> predicted pins )
-f 	      : do full sankoff (no constraints) 
-t            : print traceback
-d            : debugging output 
-v            : verbose output 
-S            : suppress extra output 

Usage: scompare [-options] <test msa> 


Sankoff: Full Implementation of Sankoff 1985
         Sankoff 0.1 (in progress)Usage: sfold [-options] <seqfile1> <seqfile2>

where options are:
-h            : print short help, usage info, and grammar description
-m <file>     : Use parameters, grammar and scoring specified in model <file> 
-M <int>      : Ensure that pin selection results in something near X Mbytes memory 
-C <int>      : use <int> pins from trusted alignment 
-P <int>      : use <int> predicted pins 
-V	      : output as single sequences rather than pair 
-f 	      : execute full (unconstrained) algorithm 
-x            : print out parameters of model 
-t            : print traceback
-d            : debugging output 
-v            : verbose output 
-f            : debugging, print fill matrix from cyk 

Usage: sfold [-options] <seqfile1> <seqfile2>


Sankoff: Full Implementation of Sankoff 1985
         Sankoff 0.1 (in progress)Usage: mltrain [-options] <training set files> 

where options are:
-h            : print short help, usage info, and grammar description
-g <string>   : Use grammar <string>, defaults to STA
-s <file>     : save model file to <file>
-x            : print out parameters of model 
-q            : print out counts used for model 
-t            : print traceback
-d            : debugging output 
-v            : verbose output 
-n	      : Turn off weighting scheme
-c	      : Force recalculate weights (defaults to given when available)
-V	      : Use Voronoi weights instead of GSC 
-T <int>      : Setup Tying Type 
  	        [No tying = 0; NT counts = 1; Gap Open/Extend counts = 2; 
  		 Gap Open/Extend probs = 3; LR Symmetry 4 (default)]  

Usage: mltrain [-options] <training set files> 



Resource usage statistics from testing consan:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.2M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: consan-1.2-h779adbc_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


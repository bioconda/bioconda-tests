  Package                   Version  Build               Channel                                    Size
──────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────────────

  + bowtie2                   2.4.4  py39h8538cfa_0      bioconda/osx-64                            1 MB
  + bzip2                     1.0.8  h0d85af4_4          conda-forge/osx-64                       Cached
  + c-ares                   1.17.2  h0d85af4_0          conda-forge/osx-64                       Cached
  + ca-certificates       2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + conduit-assembler         0.1.2  h06e8507_0          /Users/runner/conda/conda-bld/osx-64     486 KB
  + htslib                   1.10.2  h422799e_1          bioconda/osx-64                            1 MB
  + krb5                     1.19.2  hcfbf3a7_0          conda-forge/osx-64                       Cached
  + libcurl                  7.78.0  hf45b732_0          conda-forge/osx-64                       Cached
  + libcxx                   12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libdeflate                  1.6  h0b31af3_0          conda-forge/osx-64                        61 KB
  + libedit            3.1.20191231  h0678c8f_2          conda-forge/osx-64                       Cached
  + libev                      4.33  haf1e3a3_1          conda-forge/osx-64                       Cached
  + libffi                      3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + libnghttp2               1.43.0  h07e645a_0          conda-forge/osx-64                       Cached
  + libssh2                  1.10.0  h52ee1ee_0          conda-forge/osx-64                       Cached
  + lz4-c                     1.9.3  he49afe7_1          conda-forge/osx-64                       Cached
  + ncurses                     6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + openssl                  1.1.1l  h0d85af4_0          conda-forge/osx-64                       Cached
  + perl                     5.32.1  0_h0d85af4_perl5    conda-forge/osx-64                        13 MB
  + pip                      21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + python                    3.9.7  hd187cdc_0_cpython  conda-forge/osx-64                       Cached
  + python_abi                  3.9  2_cp39              conda-forge/osx-64                       Cached
  + readline                    8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + samtools                   1.10  hf7e01e7_3          bioconda/osx-64                          341 KB
  + setuptools               58.0.3  py39h6e9494a_0      conda-forge/osx-64                       Cached
  + sqlite                   3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + tbb                      2020.2  h940c156_4          conda-forge/osx-64                       132 KB
  + tk                       8.6.11  h5dbffcc_1          conda-forge/osx-64                       Cached
  + tzdata                    2021a  he74cb21_1          conda-forge/noarch                       Cached
  + wheel                    0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                        5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + zlib                     1.2.11  h7795811_1010       conda-forge/osx-64                       Cached
  + zstd                      1.4.9  h582d3a0_0          conda-forge/osx-64                       460 KB

  Summary:

  Install: 33 packages

  Total download: 18 MB

──────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: conduit-assembler-0.1.2-h06e8507_0.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/conduit-assembler_1631098219658/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p


The following NEW packages will be INSTALLED:

    bowtie2:           2.4.4-py39h8538cfa_0     bioconda   
    bzip2:             1.0.8-h0d85af4_4         conda-forge
    c-ares:            1.17.2-h0d85af4_0        conda-forge
    ca-certificates:   2021.5.30-h033912b_0     conda-forge
    conduit-assembler: 0.1.2-h06e8507_0         local      
    htslib:            1.10.2-h422799e_1        bioconda   
    krb5:              1.19.2-hcfbf3a7_0        conda-forge
    libcurl:           7.78.0-hf45b732_0        conda-forge
    libcxx:            12.0.1-habf9029_0        conda-forge
    libdeflate:        1.6-h0b31af3_0           conda-forge
    libedit:           3.1.20191231-h0678c8f_2  conda-forge
    libev:             4.33-haf1e3a3_1          conda-forge
    libffi:            3.3-h046ec9c_2           conda-forge
    libnghttp2:        1.43.0-h07e645a_0        conda-forge
    libssh2:           1.10.0-h52ee1ee_0        conda-forge
    lz4-c:             1.9.3-he49afe7_1         conda-forge
    ncurses:           6.2-h2e338ed_4           conda-forge
    openssl:           1.1.1l-h0d85af4_0        conda-forge
    perl:              5.32.1-0_h0d85af4_perl5  conda-forge
    pip:               21.2.4-pyhd8ed1ab_0      conda-forge
    python:            3.9.7-hd187cdc_0_cpython conda-forge
    python_abi:        3.9-2_cp39               conda-forge
    readline:          8.1-h05e3726_0           conda-forge
    samtools:          1.10-hf7e01e7_3          bioconda   
    setuptools:        58.0.3-py39h6e9494a_0    conda-forge
    sqlite:            3.36.0-h23a322b_0        conda-forge
    tbb:               2020.2-h940c156_4        conda-forge
    tk:                8.6.11-h5dbffcc_1        conda-forge
    tzdata:            2021a-he74cb21_1         conda-forge
    wheel:             0.37.0-pyhd8ed1ab_1      conda-forge
    xz:                5.2.5-haf1e3a3_1         conda-forge
    zlib:              1.2.11-h7795811_1010     conda-forge
    zstd:              1.4.9-h582d3a0_0         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/conduit-assembler_1631098219658/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_p
export SRC_DIR=/Users/runner/conda/conda-bld/conduit-assembler_1631098219658/test_tmp
CONDUIT - CONsensus Decomposition Utility In Transcriptome-assembly:
CONDUIT Version 0.1.2 by Nathan Roach ( nroach2@jhu.edu, https://github.com/NatPRoach/conduit/ )
Usage:
  ./conduit <nano | hybrid>
NOTE: nano mode not yet implemented... coming soon
      to run the equivalent of nano mode, run hybrid mode with -i:0 and --no-final-polish
      this will still require 'illumina' files to be passed, but will not check that they actually exist
      so including -U this_file_does_not_exist.fq should run.
CONDUIT - CONsensus Decomposition Utility In Transcriptome-assembly:
CONDUIT Version 0.1.2 by Nathan Roach ( nroach2@jhu.edu, https://github.com/NatPRoach/conduit/ )
Usage:
  ./conduit hybrid [options] <clustersDirectory> {-1 <m1> -2 <m2> | -U <r> | --interleaved <i> | -b <bam>}
  <clustersDirectory>   Directory containing the .fasta/.fa or .fastq/.fq files of reads separated by gene cluster
                         NOTE: .gz support coming for nanopore scaffold data, but is not an option at this time

  Illumina data is aligned with Bowtie2, therefore Illumina data is provided in the same format as Bowtie2, namely:

    <m1>                   Files with #1 mates, paired with files in <m2>
                           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <m2>                   Files with #2 mates, paired with files in <m1>
                           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <r>                    Files with unpaired reads
                           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <i>                    File with interleaved paired-end FASTQ/FASTA reads
                           Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2).
    <bam>                  Files are unaligned BAM sorted by read name.

  <m1>, <m2>, <r> can be comma-separated lists (no whitespace) and can be specified many times.
  E.g. '-U file1.fq,file2.fq -U file3.fq'.

Options (defaults in parentheses):
  Scaffold Type:
    --drna (default)
        Scaffold reads are stranded forward relative to coding strand, enforces --UtoT
    --cdna-rev-stranded
        Scaffold reads are stranded reverse complemented relative to coding strand
    --cdna
        Scaffold reads are NOT stranded
    --sfq (default)
        Scaffold reads are in FASTQ format, enforces --UtoT
    --sfa
        Scaffold reads are in FASTA format
    --UtoT (default)
        Scaffold reads contain Us instead of Ts. Converts U nucleotides to Ts in the sequences
        NOTE: This adds a bit of I/O overhead but doesn't affect things if your sequences are already U free
    --noUtoT
        Scaffold reads do not contain Us and do not need to be converted.
  Illumina Type:
    -u, --unstranded
        Illumina reads are unstranded
    -f, --fwd-stranded
        Illumina reads are stranded s.t. the first mate originates from the RNA strand
        Ignored if scaffold reads are not stranded
    -r, --rev-stranded (default)
        Illumina reads are stranded s.t. the first mate is the reverse complement of the RNA strand
        Ignored if scaffold reads are not stranded
    --ifq (default)
        Illumina reads are in FASTQ format; Mutually exclusive with --ifa
    --ifa
        Illumina reads are in FASTA format; Mutually exclusive with --ifq
  Consensus Collapsing:
    -m, --score-matrix <path>
        Provide an alternative scoring matrix to use in partial order alignment
        Example formatting for the score matrix can be found at poaV2/myNUC3.4.4.mat
    -d, --isoform-delta (35)
        Maximum indel size to be 'corrected', beyond this size a new isoform is declared. Must be between 2 and 255
    -e, --ends-delta (35)
        Maximum size at the ends of isoforms to 'correct' before splitting. Must be between 2 and 255
    -i, --max-iterations (5)
        Maximum number of iterations to align to and correct scaffolds. Does not include optional final polshing step
        Note: Providing a value of 0 will not perform any graph based illumina correction
    -w, --illumina-weight (10)
        Weight of illumina reads relative to nanopore reads when generating consensus
    --final-polish (default)
        Include a final correction of individual isoforms, not in a splice graph
    --no-final-polish
        Do not do a final correction of individual isoforms, not in a splice graph
    --stringent (default)
        Enforce that every base / edge in each final reported isoform is supported by an Illumina read, excluding --stringent-tolerance bp on each end of each isoform
    --no-stringent
        Do not enforce that every base / edge in each final reported isoform is supported by an Illumina read
    --stringent-tolerance (100)
        Number of bases at the end of each isoform that do not have to have Illumina reads supporting them when run in --stringent mode; ignored when run with --no-stringents
  Ouput:
    -o, --output-dir <path> (conduit/)
        <path> where corrected clusters will be written
        NOTE: THIS WILL OVERWRITE EXISTING FILES!
    -n, --no-intermediates (default)
        Does not save FASTA file generated for intermediate rounds of polishing
    -s, --save-intermediates
        Saves the FASTA file generated for intermediate rounds of polishing
  Bowtie2:
    --end-to-end (default)
        Align Illumina reads to ONT scaffolds in end-to-end alignment mode
    --local
        Align Illumina reads to ONT scaffolds in local alignment mode
    -k,--bowtie2-max-alignments (50)
        Maximum number of alignments per Illumina read to be used in final polishing step
  SAMtools:
    --samtools-thread-memory (768 MiB)
        Memory amount to use per SAMtools thread
        Specified either in bytes or with a K, M, or G suffix
  Miscellaneous:
    -h, --help
        Display this help message and exit
    -v, --version
        Display the installed version number of CONDUIT and exit
    --tmp-dir <path> (conduit-tmp/)
        <path> where temporary files will be created
    -t, --threads (4)
        Number of threads to run in parallel (used for both Bowtie2 and Partial Order Graph correction)
CONDUIT - CONsensus Decomposition Utility In Transcriptome-assembly:
CONDUIT Utilities Version 0.1.2 by Nathan Roach ( nroach2@jhu.edu, https://github.com/NatPRoach/conduit/ )
Usage:
  ./conduitUtils <function>
Where <function> is one of the following:
  translate   - Translates FASTA/Q nucleotide sequences into protein based on their longest ORF

  bed2gtf     - Converts BED12 files to well structured GTF file suitable for use in GFFcompare

  parseBLASTP   - Parses BLASTP output and outputs closest match for each query transcript as determined by BLASTP

  compareBLASTP - Compares BLASTP output and reference proteome to determine the # of TP, FP, and FN for a sample

  compareFASTA  - Compares two FASTA files, an input and a reference, to determine the # of TP, FP, and FN for a sample

  splitFASTA    - Splits CONDUIT produced FASTA file based on the number of reads supporting each isoform

  filterFASTA   - Filters CONDUIT produced FASTA file based on number of reads supporting each isoform

  extractIntrons   - Extracts out intronic sequences from BED12 formatted input and outputs as BED6

  callNonCanonical - Reads in a FASTA file and reports the readIDs of sequences that dont begin with GT and end with AG

  callNovelNonCanonical - Compares introns described by reference GTF file to introns described by a list of readIDs in the format produced by `bedtools getfasta -name` function, outputs the novel introns in BED format

  callOverlapping - Compares two files of readIDs specifying introns in the format produced by `bedtools getfasta -name`, and reports the introns that are shared between the two files (not stranded)


Resource usage statistics from testing conduit-assembler:
   Process count: 2
   CPU time: Sys=0:00:00.0, User=0:00:00.0
   Memory: 10.2M
   Disk usage: 12B
   Time elapsed: 0:00:02.2


TEST END: conduit-assembler-0.1.2-h06e8507_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                 Version  Build                           Channel                                    Size
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + biopython                1.76  py27h0b31af3_0                  conda-forge/osx-64                         3 MB
  + blas                      1.1  openblas                        conda-forge/osx-64                         1 KB
  + bx-python               0.7.3  np112py27_1                     bioconda/osx-64                          858 KB
  + c-ares                 1.17.2  h0d85af4_0                      conda-forge/osx-64                       Cached
  + ca-certificates     2021.5.30  h033912b_0                      conda-forge/osx-64                       Cached
  + certifi            2019.11.28  py27h8c360ce_1                  conda-forge/osx-64                       149 KB
  + coreutils                8.31  h0b31af3_0                      conda-forge/osx-64                       Cached
  + curl                   7.78.0  hb861fe1_0                      conda-forge/osx-64                       137 KB
  + guidescan                 1.2  py27h6162fbf_1                  /Users/runner/conda/conda-bld/osx-64      40 MB
  + krb5                   1.19.2  hcfbf3a7_0                      conda-forge/osx-64                       Cached
  + libblas                 3.8.0  17_openblas                     conda-forge/osx-64                        11 KB
  + libcblas                3.8.0  17_openblas                     conda-forge/osx-64                        11 KB
  + libcurl                7.78.0  hf45b732_0                      conda-forge/osx-64                       Cached
  + libcxx                 12.0.1  habf9029_0                      conda-forge/osx-64                       Cached
  + libedit          3.1.20191231  h0678c8f_2                      conda-forge/osx-64                       Cached
  + libev                    4.33  haf1e3a3_1                      conda-forge/osx-64                       Cached
  + libffi                  3.2.1  hb1e8313_1007                   conda-forge/osx-64                        42 KB
  + libgfortran             3.0.1  0                               conda-forge/osx-64                       495 KB
  + liblapack               3.8.0  17_openblas                     conda-forge/osx-64                        11 KB
  + libnghttp2             1.43.0  h07e645a_0                      conda-forge/osx-64                       Cached
  + libopenblas            0.3.10  h0794777_0                      pkgs/main/osx-64                           5 MB
  + libssh2                1.10.0  h52ee1ee_0                      conda-forge/osx-64                       Cached
  + ncurses                   6.2  h2e338ed_4                      conda-forge/osx-64                       Cached
  + numpy                  1.12.1  py27_blas_openblash24bf2e0_201  conda-forge/osx-64                         4 MB
  + openblas               0.2.20  8                               conda-forge/osx-64                        20 MB
  + openssl                1.1.1l  h0d85af4_0                      conda-forge/osx-64                       Cached
  + pandas                 0.24.2  py27h0a44026_0                  conda-forge/osx-64                        10 MB
  + perl                   5.32.1  0_h0d85af4_perl5                conda-forge/osx-64                        13 MB
  + pip                    20.1.1  pyh9f0ad1d_0                    conda-forge/noarch                         1 MB
  + psutil                  5.7.0  py27h89ed719_1                  conda-forge/osx-64                       326 KB
  + pyfaidx               0.4.7.1  py27_0                          bioconda/osx-64                           39 KB
  + pysam                   0.8.3  py27h68eaf8f_8                  bioconda/osx-64                            2 MB
  + python                 2.7.15  h8e446fc_1011_cpython           conda-forge/osx-64                        12 MB
  + python-dateutil         2.8.1  py_0                            conda-forge/noarch                       220 KB
  + python_abi                2.7  1_cp27m                         conda-forge/osx-64                         4 KB
  + pytz                   2020.1  pyh9f0ad1d_0                    conda-forge/noarch                       227 KB
  + readline                  8.1  h05e3726_0                      conda-forge/osx-64                       Cached
  + rename                  1.601  hdfd78af_1                      bioconda/noarch                           13 KB
  + samtools                1.3.1  h7b56a33_8                      bioconda/osx-64                          461 KB
  + scikit-learn           0.20.3  py27hca23c92_1                  conda-forge/osx-64                         5 MB
  + scipy                   1.2.1  py27hbd7caa9_1                  conda-forge/osx-64                        16 MB
  + setuptools             44.0.0  py27_0                          conda-forge/osx-64                       649 KB
  + six                    1.16.0  pyh6c4a22f_0                    conda-forge/noarch                       Cached
  + sqlite                 3.36.0  h23a322b_0                      conda-forge/osx-64                       Cached
  + tk                     8.6.11  h5dbffcc_1                      conda-forge/osx-64                       Cached
  + wheel                  0.37.0  pyhd8ed1ab_1                    conda-forge/noarch                       Cached
  + xlwt                    1.3.0  py27_0                          conda-forge/osx-64                       159 KB
  + zlib                   1.2.11  h7795811_1010                   conda-forge/osx-64                       Cached

  Summary:

  Install: 48 packages

  Total download: 135 MB

────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: guidescan-1.2-py27h6162fbf_1.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/guidescan_1630755320829/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    biopython:       1.76-py27h0b31af3_0                   conda-forge
    blas:            1.1-openblas                          conda-forge
    bx-python:       0.7.3-np112py27_1                     bioconda   
    c-ares:          1.17.2-h0d85af4_0                     conda-forge
    ca-certificates: 2021.5.30-h033912b_0                  conda-forge
    certifi:         2019.11.28-py27h8c360ce_1             conda-forge
    coreutils:       8.31-h0b31af3_0                       conda-forge
    curl:            7.78.0-hb861fe1_0                     conda-forge
    guidescan:       1.2-py27h6162fbf_1                    local      
    krb5:            1.19.2-hcfbf3a7_0                     conda-forge
    libblas:         3.8.0-17_openblas                     conda-forge
    libcblas:        3.8.0-17_openblas                     conda-forge
    libcurl:         7.78.0-hf45b732_0                     conda-forge
    libcxx:          12.0.1-habf9029_0                     conda-forge
    libedit:         3.1.20191231-h0678c8f_2               conda-forge
    libev:           4.33-haf1e3a3_1                       conda-forge
    libffi:          3.2.1-hb1e8313_1007                   conda-forge
    libgfortran:     3.0.1-0                               conda-forge
    liblapack:       3.8.0-17_openblas                     conda-forge
    libnghttp2:      1.43.0-h07e645a_0                     conda-forge
    libopenblas:     0.3.10-h0794777_0                                
    libssh2:         1.10.0-h52ee1ee_0                     conda-forge
    ncurses:         6.2-h2e338ed_4                        conda-forge
    numpy:           1.12.1-py27_blas_openblash24bf2e0_201 conda-forge [blas_openblas]
    openblas:        0.2.20-8                              conda-forge
    openssl:         1.1.1l-h0d85af4_0                     conda-forge
    pandas:          0.24.2-py27h0a44026_0                 conda-forge
    perl:            5.32.1-0_h0d85af4_perl5               conda-forge
    pip:             20.1.1-pyh9f0ad1d_0                   conda-forge
    psutil:          5.7.0-py27h89ed719_1                  conda-forge
    pyfaidx:         0.4.7.1-py27_0                        bioconda   
    pysam:           0.8.3-py27h68eaf8f_8                  bioconda   
    python:          2.7.15-h8e446fc_1011_cpython          conda-forge
    python-dateutil: 2.8.1-py_0                            conda-forge
    python_abi:      2.7-1_cp27m                           conda-forge
    pytz:            2020.1-pyh9f0ad1d_0                   conda-forge
    readline:        8.1-h05e3726_0                        conda-forge
    rename:          1.601-hdfd78af_1                      bioconda   
    samtools:        1.3.1-h7b56a33_8                      bioconda   
    scikit-learn:    0.20.3-py27hca23c92_1                 conda-forge
    scipy:           1.2.1-py27hbd7caa9_1                  conda-forge
    setuptools:      44.0.0-py27_0                         conda-forge
    six:             1.16.0-pyh6c4a22f_0                   conda-forge
    sqlite:          3.36.0-h23a322b_0                     conda-forge
    tk:              8.6.11-h5dbffcc_1                     conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1                   conda-forge
    xlwt:            1.3.0-py27_0                          conda-forge
    zlib:            1.2.11-h7795811_1010                  conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/guidescan_1630755320829/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/Users/runner/conda/conda-bld/guidescan_1630755320829/test_tmp
import: 'guidescan'
import: 'guidescan'
usage: guidescan_processer [-h] -f FASTA [-n NAME] [--minchr MINCHRLEN]
                           [-c CHROM] [-l LENGTH] [-p PAM] [-a ALTPAM]
                           [--pampos {start,end}] [-s SIM] [-d OFFDIST]
                           [--maxoffpos MAXOFFPOS] [--maxoffcount MAXOFFCOUNT]
                           [--gnupath GNUPATH] [-t THREADS]

Precompute guideRNA database from genomic sequences

optional arguments:
  -h, --help            show this help message and exit
  -f FASTA              path to fasta file or folder with fasta files (will
                        use all .fa, .fasta, .fa.gz, .fasta.gz files found in
                        the folder) (default: None)
  -n NAME               project name, use in all output (will produce a folder
                        with this name containing intermediate and final files
                        in it) (default: myguides)
  --minchr MINCHRLEN    minimum chromosome length to consider, chromosomes in
                        input FASTA that are shorter than this will be
                        excluded from analysis; simple way to exclude
                        scaffolds unassigned to known chromosomes etc.
                        (default: 10000)
  -c CHROM              list names of chromosomes (comma separated) that will
                        be used in analysis, or name of file where this list
                        is stored (default: )
  -l LENGTH             desired length of guideRNAs (not including PAM)
                        (default: 20)
  -p PAM                PAM sequence (default: NGG)
  -a ALTPAM             alternative PAM sequences (separate multiple ones by
                        commas), will not be used in primary guideRNAs, but
                        will be considered in off-targets; all PAM sequences
                        should be mutually exclusive and of the same length
                        (default: NAG)
  --pampos {start,end}  position of PAM with respect to guideRNA (default:
                        end)
  -s SIM                minimum mismatch similarity between guideRNAs; a
                        candidate guideRNA (with primary PAM) should not have
                        alternative occurences in the genome (with any PAM)
                        with less than this many mismatches (not including
                        PAM) (default: 2)
  -d OFFDIST            maximum distance to consider from guideRNA to its off-
                        target; off-target is an alternative occurrence (with
                        any PAM) of this guideRNA in the genome at edit
                        distance at most this number (including PAM);
                        currently values larger than 4 are infeasible for
                        large (e.g., mammalian) genomes, and value 3 will take
                        long time to compute; use -1 if do not want any off-
                        target info in resulting database (can add it later
                        using bamdata) (default: 3)
  --maxoffpos MAXOFFPOS
                        maximum number of positions of k-mers to remember; for
                        k-mer occurring multiple times in the genome (such
                        k-mers cannot be guideRNAs, but their positions can be
                        off-targets of guideRNAs) store at most this many
                        arbitrary their occurrences in the genome (default:
                        10)
  --maxoffcount MAXOFFCOUNT
                        maximum number of off-targets to store for a guideRNA
                        in a resulting BAM library (default: 1000)
  --gnupath GNUPATH     path to gnu utilities, e.g. "/usr/local/bin"; if
                        empty, use system defaults; requires: cut, sort, uniq,
                        shuf (default: )
  -t THREADS            how many threads to use; do not specify more than you
                        have on your system; currently not implemented
                        (default: 1)
usage: guidescan_bamdata [-h] -n NAME --label LABEL [-g GUIDESFILE]
                         [-d OFFDIST] [--maxoffcount MAXOFFCOUNT] [-t THREADS]

Produce BAM file with guideRNA database from precomputed trie and list of
guideRNAs

optional arguments:
  -h, --help            show this help message and exit
  -n NAME               project name, load previously saved arguments and save
                        additional output (default: myguides)
  --label LABEL         use in file name of output database for this run
                        (default: test)
  -g GUIDESFILE         name of file with guideRNAs for which to compute BAM
                        database; may be gzipped (.gz); if not provided, use
                        all candidate guideRNAs found in the project (default:
                        )
  -d OFFDIST            maximum Hamming distance to consider from guideRNA to
                        its off-target; off-target is an alternative
                        occurrence (with any PAM) of this guideRNA in the
                        genome at Hamming distance at most this number
                        (including PAM); use -1 for omitting any off-target
                        info in resulting BAM (works much faster) (default: 3)
  --maxoffcount MAXOFFCOUNT
                        maximum number of off-targets to store for a guideRNA
                        in a resulting BAM library; ignore if OFFDIST is -1
                        (default: 1000)
  -t THREADS            how many threads to use; do not specify more than you
                        have on your system; currently not implemented
                        (default: 1)
usage: guidescan_guidequery [-h] -b BAM
                            (-c COORDS | --batch BATCH_MODE | --sequence SEQUENCE_FILE)
                            --target TARGET [--flankdistance FLANKDISTANCE]
                            [--one] -o OUTPUT [--output_format FORMAT]
                            [--header] [--off] [--sort SORT | --select SELECT]
                            [-n N] [--annot ANNOTFILE]
                            [--feature_bed_file FEATURES] [--fasta_file FASTA]
                            [--blat BLAT]

Find guideRNAs in precomputed database stored in BAM format.

optional arguments:
  -h, --help            show this help message and exit
  -b BAM                path to BAM file with precomputed guideRNAs. REQUIRED
  -c COORDS             coordinates in the form "<chr>:<start>-<end>"
                        ;example: chrX:3364088-3372035, mutually exclusive
                        with --batch
  --batch BATCH_MODE    absolute filepath to a BED file, GTF file where the
                        first field (column) contains chromosome information
                        (chr#:), or a txt file composed of a single field
                        (column) of genomic coordinates of the following
                        format: chr#:start-end, mutually exclusive with -c
  --sequence SEQUENCE_FILE
                        sequence file is fasta file format. sequences will be
                        processed through locally installed blat binary and
                        sequences with perfect matches to a specified genome
                        will be processed. If a perfect match does not exist,
                        the individual query will not be processed
  --target TARGET       get sgRNAs within the target coordinates (within) or
                        flanking the target coordinates(flanks) by a distance
                        detailed with the flankdistance parameter. Default is
                        within.
  --flankdistance FLANKDISTANCE
                        the distance flanking both the upstream and downstream
                        regions of a target coordinate.Default is 1000.
  --one                 whether input coordinates are 1-based (default is
                        0-based); output is always in BED format and 0-based
  -o OUTPUT             name of output directory. REQUIRED
  --output_format FORMAT
                        file format for output can either be bed (bed) or csv
                        (csv) format. Default is csv.
  --header              whether header should be included in output
  --off                 whether detailed info about off-targets of each
                        guideRNA should be included in output (each off-target
                        in a separate line); default is to include only
                        summary about all off-targets of a guideRNA. Must be
                        utilized with csv output format (which is default)
  --sort SORT           sort sgRNAs by fewest off-targets (offtargets),
                        highest Rule 2 Set cutting efficiencyscore (score),
                        highest CFD cutting specificity (specificity), or
                        sgRNAs closest to the target region (coordinates).
                        Default is coordinates. Mutually exclusive with
                        select.
  --select SELECT       guidequery chooses n optimal sgRNAs based on
                        emphasizing fewest off-targets then sorts by Rule 2
                        Set cutting efficiency (offtargets) or it chooses n
                        optimal sgRNAsbased on emphasizing highest Rule 2 Set
                        cutting efficiency score then sorts by fewest off-
                        targets (score). Also can choose n sgRNAs closes to
                        target and sorts by offtargets (coordinates). Also can
                        choose n sgRNAs with highest CFD score and sorts by
                        offtargets. Mutually exclusive with sort.
  -n N                  amount of optimal sgRNAs desired from the --select
                        parameter. Ignored if --select not used. Default is 3.
  --annot ANNOTFILE     path to BED file with coordinates of genomic features
                        that should be used for annotation (format
                        (tabulated): chrom, start, end, name); for example,
                        use Table Browser https://genome.ucsc.edu/cgi-
                        bin/hgTables to create such BED files of various
                        kinds; alternatively, use here short names for
                        preinstalled exon annotations: "hg38" for human, "dm6"
                        for fly, "mm10" for mouse, "sacSer3" for yeast, ce11
                        for c. elegans
  --feature_bed_file FEATURES
                        path to BED file with genomic features of interest
                        such that user can upload a BED file with feature
                        names (in 4th field) and GuideScan will map the
                        genomic coordinates to the feature
  --fasta_file FASTA    fasta file with index located in same directory so
                        that --sequence queries can be processed
  --blat BLAT           absolute filepath to blat tool. Binary packages for
                        locally running blat are found within GuideScan
                        software at ./blat_binaries

Output is in (extended) BED format with the following fields: 0: chromosome
name; 1: start coordinate on chromosome (0-based); 2: end coordinate on
chromosome (not part of guideRNA or off-target); 3: sequence of guideRNA + PAM
(may include N for unknown nucleotide); 4: cutting efficiency score (between 0
and 100, 100 is best efficiency) for guideRNA, "*" for off-targets or if
unknown; 5: cutting specificity score for gRNA, * if unknown 6: strand; 7:
total number of off-targets of guideRNA, undefined for off-targets; 8: summary
of off-targets for a guideRNA in the form "#mismatches:#offtargets" separated
by "|" ("*" if unknown); 9: guideRNA off-target score (between 0 and 100, 100
means no off-targets), "*" for off-targets or if unknown; 10: number of
mismatches of genomic sequence with the guideRNA+PAM (always 0 for guideRNAs,
some value larger than 0 for off-targets); 11: sequence in the genome ("*" if
unknown), for guideRNA will coincide with guideRNA+PAM sequence (field 3) with
all N substituted to actual sequence content, for off-targets will be distant
from this guideRNA+PAM sequence by a certain number of mismatches (field 8);
11: (optionally) list of annotations with genomic features or "*" if no
annotations found.
usage: guidescan_cutting_efficiency_processer [-h] -d DATABASE_DIRECTORY -n
                                              DATABASE_NAME
                                              [-f FASTA_FILEPATH] [-a AMINO]
                                              [-p PEPTIDE]
                                              [-d2 DATABASE_DIRECTORY2]
                                              [-n2 DATABASE_NAME2]

optional arguments:
  -h, --help            show this help message and exit
  -d DATABASE_DIRECTORY, --database_directory DATABASE_DIRECTORY
                        absolute filepath to directory hosting sgRNA database
                        with no cutting efficiency scores
  -n DATABASE_NAME, --database_name DATABASE_NAME
                        filename of sgRNA database with no cutting efficiency
                        scores
  -f FASTA_FILEPATH, --fasta_filepath FASTA_FILEPATH
                        absolute filepath to organism FASTA file. Index for
                        FASTA should also be present in same directory (.fai).
                        Must be single aggregate FASTA file for organism
  -a AMINO, --amino AMINO
                        amino acid information to be used in cutting
                        efficiency. Default -1 indicating to not use amino
                        acid information
  -p PEPTIDE, --peptide PEPTIDE
                        peptide information to be used in cutting efficiency.
                        Default -1 indicating to not use peptide information
  -d2 DATABASE_DIRECTORY2, --database_directory2 DATABASE_DIRECTORY2
                        absolute filepath to directory hosting sgRNA database
                        with cutting efficency scores already included and
                        generated with all the same run parameters as another
                        database except for -d. This parameter, coupled with
                        -n2, allows for the transfer of cutting efficiency
                        scores between two sgRNA databases that differ only in
                        how many mismatches off-targets are enumerated to
  -n2 DATABASE_NAME2, --database_name2 DATABASE_NAME2
                        filename of sgRNA database with cutting efficiency
                        scores already included and generated with all the
                        same run parameters as another database except for -d.
                        This parameter, coupled with -d2, allows for the
                        transfer of cutting efficiency scores between two
                        sgRNA databases that differ only in how many
                        mismatches off-targets are enumerated to
usage: guidescan_cutting_specificity_processer [-h] -d DATABASE_DIRECTORY -n
                                               DATABASE_NAME [-k KMERS_FILE]
                                               [-f FASTA_FILEPATH]
                                               [-d2 DATABASE_DIRECTORY2]
                                               [-n2 DATABASE_NAME2]

optional arguments:
  -h, --help            show this help message and exit
  -d DATABASE_DIRECTORY, --database_directory DATABASE_DIRECTORY
                        absolute filepath to directory hosting sgRNA database
                        with no cutting specificity scores
  -n DATABASE_NAME, --database_name DATABASE_NAME
                        filename of sgRNA database with no cutting specificity
                        scores
  -k KMERS_FILE, --kmers_file KMERS_FILE
                        absolute filepath to directory hosting either
                        X_all_kmers.txt.gz or X_all_kmers_counted.txt
  -f FASTA_FILEPATH, --fasta_filepath FASTA_FILEPATH
                        absolute filepath to organism FASTA file. Index for
                        FASTA should also be present in same directory (.fai).
                        Must be single aggregate FASTA file for organism
  -d2 DATABASE_DIRECTORY2, --database_directory2 DATABASE_DIRECTORY2
                        absolute filepath to directory hosting sgRNA database
                        with cutting specificity scores already included and
                        generated with all the same run parameters as another
                        database except for -d. This parameter, coupled with
                        -n2, allows for the transfer of cutting efficiency
                        scores between two sgRNA databases that differ only in
                        how many mismatches off-targets are enumerated to
  -n2 DATABASE_NAME2, --database_name2 DATABASE_NAME2
                        filename of sgRNA database with cutting specificity
                        scores already included and generated with all the
                        same run parameters as another database except for -d.
                        This parameter, coupled with -d2, allows for the
                        transfer of cutting efficiency scores between two
                        sgRNA databases that differ only in how many
                        mismatches off-targets are enumerated to

Resource usage statistics from testing guidescan:
   Process count: 4
   CPU time: Sys=0:00:00.7, User=0:00:01.0
   Memory: 65.6M
   Disk usage: 16B
   Time elapsed: 0:00:18.5


TEST END: guidescan-1.2-py27h6162fbf_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                            Version  Build                Channel                                   Size
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex                        0.1  conda_forge          conda-forge/linux-64                    Cached
  + _openmp_mutex                        4.5  1_gnu                conda-forge/linux-64                    Cached
  + biopython                           1.79  py36h8f6f2f9_0       conda-forge/linux-64                      3 MB
  + blast                             2.12.0  pl5262h3289130_0     bioconda/linux-64                        22 MB
  + bowtie2                            2.4.4  py36hd4290be_0       bioconda/linux-64                        15 MB
  + bzip2                              1.0.8  h7f98852_4           conda-forge/linux-64                    Cached
  + c-ares                            1.17.2  h7f98852_0           conda-forge/linux-64                    Cached
  + ca-certificates                2021.5.30  ha878542_0           conda-forge/linux-64                    Cached
  + curl                              7.78.0  hea6ffbf_0           conda-forge/linux-64                    Cached
  + entrez-direct                       13.9  pl5262he881be0_2     bioconda/linux-64                         5 MB
  + expat                              2.4.1  h9c3ff4c_0           conda-forge/linux-64                    Cached
  + hs-blastn                          0.0.5  h7d875b9_3           bioconda/linux-64                       176 KB
  + htslib                              1.13  h9093b5e_0           bioconda/linux-64                         2 MB
  + krb5                              1.19.2  hcc1bbae_0           conda-forge/linux-64                    Cached
  + ld_impl_linux-64                  2.36.1  hea4e1c9_2           conda-forge/linux-64                    Cached
  + libblas                            3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcblas                           3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libcurl                           7.78.0  h2574ce0_0           conda-forge/linux-64                    Cached
  + libdeflate                           1.7  h7f98852_5           conda-forge/linux-64                    Cached
  + libedit                     3.1.20191231  he28a2e2_2           conda-forge/linux-64                    Cached
  + libev                               4.33  h516909a_1           conda-forge/linux-64                    Cached
  + libffi                               3.3  h58526e2_2           conda-forge/linux-64                    Cached
  + libgcc-ng                         11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + libgfortran-ng                    11.1.0  h69a702a_8           conda-forge/linux-64                    Cached
  + libgfortran5                      11.1.0  h6c583b3_8           conda-forge/linux-64                    Cached
  + libgomp                           11.1.0  hc902ee8_8           conda-forge/linux-64                    Cached
  + liblapack                          3.9.0  11_linux64_openblas  conda-forge/linux-64                    Cached
  + libnghttp2                        1.43.0  h812cca2_0           conda-forge/linux-64                    Cached
  + libopenblas                       0.3.17  pthreads_h8fe5266_1  conda-forge/linux-64                    Cached
  + libssh2                           1.10.0  ha56f1ee_0           conda-forge/linux-64                    Cached
  + libstdcxx-ng                      11.1.0  h56837e0_8           conda-forge/linux-64                    Cached
  + lz4-c                              1.9.3  h9c3ff4c_1           conda-forge/linux-64                    Cached
  + midas                              1.3.2  py36h24bf2e0_2       /home/vsts/conda/conda-bld/linux-64     170 KB
  + ncurses                              6.2  h58526e2_4           conda-forge/linux-64                    Cached
  + numpy                             1.19.5  py36hfc0c790_2       conda-forge/linux-64                      5 MB
  + openssl                           1.1.1k  h7f98852_1           conda-forge/linux-64                    Cached
  + pandas                             1.1.5  py36h284efc9_0       conda-forge/linux-64                     11 MB
  + pcre                                8.45  h9c3ff4c_0           conda-forge/linux-64                    Cached
  + perl                              5.26.2  h36c2ea0_1008        conda-forge/linux-64                    Cached
  + perl-app-cpanminus                1.7044  pl526_1              bioconda/linux-64                       Cached
  + perl-archive-tar                    2.32  pl526_0              bioconda/linux-64                        31 KB
  + perl-base                           2.23  pl526_1              bioconda/linux-64                        10 KB
  + perl-business-isbn                 3.004  pl526_0              bioconda/linux-64                        15 KB
  + perl-business-isbn-data     20140910.003  pl526_0              bioconda/linux-64                        15 KB
  + perl-carp                           1.38  pl526_3              bioconda/linux-64                       Cached
  + perl-common-sense                   3.74  pl526_2              bioconda/linux-64                        11 KB
  + perl-compress-raw-bzip2            2.087  pl526he1b5a44_0      bioconda/linux-64                        44 KB
  + perl-compress-raw-zlib             2.087  pl526hc9558a2_0      bioconda/linux-64                        72 KB
  + perl-constant                       1.33  pl526_1              bioconda/linux-64                       Cached
  + perl-data-dumper                   2.173  pl526_0              bioconda/linux-64                        35 KB
  + perl-digest-hmac                    1.03  pl526_3              bioconda/linux-64                         9 KB
  + perl-digest-md5                     2.55  pl526_0              bioconda/linux-64                        18 KB
  + perl-encode                         2.88  pl526_1              bioconda/linux-64                         2 MB
  + perl-encode-locale                  1.05  pl526_6              bioconda/linux-64                        11 KB
  + perl-exporter                       5.72  pl526_1              bioconda/linux-64                       Cached
  + perl-exporter-tiny              1.002001  pl526_0              bioconda/linux-64                        23 KB
  + perl-extutils-makemaker             7.36  pl526_1              bioconda/linux-64                       Cached
  + perl-file-listing                   6.04  pl526_1              bioconda/linux-64                         9 KB
  + perl-file-path                      2.16  pl526_0              bioconda/linux-64                       Cached
  + perl-file-temp                    0.2304  pl526_2              bioconda/linux-64                       Cached
  + perl-html-parser                    3.72  pl526h6bb024c_5      bioconda/linux-64                        66 KB
  + perl-html-tagset                    3.20  pl526_3              bioconda/linux-64                        12 KB
  + perl-html-tree                      5.07  pl526_1              bioconda/linux-64                       129 KB
  + perl-http-cookies                   6.04  pl526_0              bioconda/linux-64                        19 KB
  + perl-http-daemon                    6.01  pl526_1              bioconda/linux-64                        14 KB
  + perl-http-date                      6.02  pl526_3              bioconda/linux-64                        10 KB
  + perl-http-message                   6.18  pl526_0              bioconda/linux-64                        51 KB
  + perl-http-negotiate                 6.01  pl526_3              bioconda/linux-64                        13 KB
  + perl-io-compress                   2.087  pl526he1b5a44_0      bioconda/linux-64                        81 KB
  + perl-io-html                       1.001  pl526_2              bioconda/linux-64                        13 KB
  + perl-io-socket-ssl                 2.066  pl526_0              bioconda/linux-64                       151 KB
  + perl-io-zlib                        1.10  pl526_2              bioconda/linux-64                         9 KB
  + perl-json                           4.02  pl526_0              bioconda/linux-64                        52 KB
  + perl-json-xs                        2.34  pl526h6bb024c_3      bioconda/linux-64                        63 KB
  + perl-libwww-perl                    6.39  pl526_0              bioconda/noarch                          94 KB
  + perl-list-moreutils                0.428  pl526_1              bioconda/linux-64                        28 KB
  + perl-list-moreutils-xs             0.428  pl526_0              bioconda/linux-64                        43 KB
  + perl-lwp-mediatypes                 6.04  pl526_0              bioconda/linux-64                        22 KB
  + perl-lwp-protocol-https             6.07  pl526_4              bioconda/linux-64                         9 KB
  + perl-mime-base64                    3.15  pl526_1              bioconda/linux-64                        15 KB
  + perl-mozilla-ca                 20180117  pl526_1              bioconda/linux-64                       140 KB
  + perl-net-http                       6.19  pl526_0              bioconda/noarch                          19 KB
  + perl-net-ssleay                     1.88  pl526h90d6eec_0      bioconda/linux-64                       289 KB
  + perl-ntlm                           1.09  pl526_4              bioconda/linux-64                        15 KB
  + perl-parent                        0.236  pl526_1              bioconda/linux-64                       Cached
  + perl-pathtools                      3.75  pl526h14c3975_1      bioconda/linux-64                        41 KB
  + perl-scalar-list-utils              1.52  pl526h516909a_0      bioconda/linux-64                        38 KB
  + perl-socket                        2.027  pl526_1              bioconda/linux-64                        31 KB
  + perl-storable                       3.15  pl526h14c3975_0      bioconda/linux-64                        63 KB
  + perl-test-requiresinternet          0.05  pl526_0              bioconda/linux-64                         7 KB
  + perl-time-local                     1.28  pl526_1              bioconda/linux-64                        10 KB
  + perl-try-tiny                       0.30  pl526_1              bioconda/linux-64                        17 KB
  + perl-types-serialiser                1.0  pl526_2              bioconda/linux-64                        10 KB
  + perl-uri                            1.76  pl526_0              bioconda/linux-64                        55 KB
  + perl-www-robotrules                 6.02  pl526_3              bioconda/linux-64                        12 KB
  + perl-xml-namespacesupport           1.12  pl526_0              bioconda/linux-64                        11 KB
  + perl-xml-parser                  2.44_01  pl5262hc3e0081_1002  conda-forge/linux-64                    165 KB
  + perl-xml-sax                        1.02  pl526_0              bioconda/noarch                          36 KB
  + perl-xml-sax-base                   1.09  pl526_0              bioconda/linux-64                        19 KB
  + perl-xml-sax-expat                  0.51  pl526_3              bioconda/linux-64                        10 KB
  + perl-xml-simple                     2.25  pl526_1              bioconda/linux-64                        48 KB
  + perl-xsloader                       0.24  pl526_0              bioconda/linux-64                         8 KB
  + pip                               21.2.4  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + pysam                           0.16.0.1  py36h61e5637_3       bioconda/linux-64                         3 MB
  + python                            3.6.13  hffdb5ce_0_cpython   conda-forge/linux-64                     38 MB
  + python-dateutil                    2.8.2  pyhd8ed1ab_0         conda-forge/noarch                      240 KB
  + python_abi                           3.6  2_cp36m              conda-forge/linux-64                      4 KB
  + pytz                              2021.1  pyhd8ed1ab_0         conda-forge/noarch                      Cached
  + readline                             8.1  h46c0cb4_0           conda-forge/linux-64                    Cached
  + samtools                            1.13  h8c37831_0           bioconda/linux-64                       397 KB
  + setuptools                        57.4.0  py36h5fab9bb_0       conda-forge/linux-64                    933 KB
  + six                               1.16.0  pyh6c4a22f_0         conda-forge/noarch                      Cached
  + sqlite                            3.36.0  h9cd32fc_0           conda-forge/linux-64                    Cached
  + tbb                               2020.2  h4bd325d_4           conda-forge/linux-64                      1 MB
  + tk                                8.6.11  h27826a3_1           conda-forge/linux-64                    Cached
  + wheel                             0.37.0  pyhd8ed1ab_1         conda-forge/noarch                      Cached
  + xz                                 5.2.5  h516909a_1           conda-forge/linux-64                    Cached
  + zlib                              1.2.11  h516909a_1010        conda-forge/linux-64                    Cached
  + zstd                               1.4.9  ha95c52a_0           conda-forge/linux-64                    Cached

  Summary:

  Install: 119 packages

  Total download: 113 MB

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: midas-1.3.2-py36h24bf2e0_2.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/midas_1630588134860/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh


The following NEW packages will be INSTALLED:

    _libgcc_mutex:              0.1-conda_forge             conda-forge
    _openmp_mutex:              4.5-1_gnu                   conda-forge
    biopython:                  1.79-py36h8f6f2f9_0         conda-forge
    blast:                      2.12.0-pl5262h3289130_0     bioconda   
    bowtie2:                    2.4.4-py36hd4290be_0        bioconda   
    bzip2:                      1.0.8-h7f98852_4            conda-forge
    c-ares:                     1.17.2-h7f98852_0           conda-forge
    ca-certificates:            2021.5.30-ha878542_0        conda-forge
    curl:                       7.78.0-hea6ffbf_0           conda-forge
    entrez-direct:              13.9-pl5262he881be0_2       bioconda   
    expat:                      2.4.1-h9c3ff4c_0            conda-forge
    hs-blastn:                  0.0.5-h7d875b9_3            bioconda   
    htslib:                     1.13-h9093b5e_0             bioconda   
    krb5:                       1.19.2-hcc1bbae_0           conda-forge
    ld_impl_linux-64:           2.36.1-hea4e1c9_2           conda-forge
    libblas:                    3.9.0-11_linux64_openblas   conda-forge
    libcblas:                   3.9.0-11_linux64_openblas   conda-forge
    libcurl:                    7.78.0-h2574ce0_0           conda-forge
    libdeflate:                 1.7-h7f98852_5              conda-forge
    libedit:                    3.1.20191231-he28a2e2_2     conda-forge
    libev:                      4.33-h516909a_1             conda-forge
    libffi:                     3.3-h58526e2_2              conda-forge
    libgcc-ng:                  11.1.0-hc902ee8_8           conda-forge
    libgfortran-ng:             11.1.0-h69a702a_8           conda-forge
    libgfortran5:               11.1.0-h6c583b3_8           conda-forge
    libgomp:                    11.1.0-hc902ee8_8           conda-forge
    liblapack:                  3.9.0-11_linux64_openblas   conda-forge
    libnghttp2:                 1.43.0-h812cca2_0           conda-forge
    libopenblas:                0.3.17-pthreads_h8fe5266_1  conda-forge
    libssh2:                    1.10.0-ha56f1ee_0           conda-forge
    libstdcxx-ng:               11.1.0-h56837e0_8           conda-forge
    lz4-c:                      1.9.3-h9c3ff4c_1            conda-forge
    midas:                      1.3.2-py36h24bf2e0_2        local      
    ncurses:                    6.2-h58526e2_4              conda-forge
    numpy:                      1.19.5-py36hfc0c790_2       conda-forge
    openssl:                    1.1.1k-h7f98852_1           conda-forge
    pandas:                     1.1.5-py36h284efc9_0        conda-forge
    pcre:                       8.45-h9c3ff4c_0             conda-forge
    perl:                       5.26.2-h36c2ea0_1008        conda-forge
    perl-app-cpanminus:         1.7044-pl526_1              bioconda   
    perl-archive-tar:           2.32-pl526_0                bioconda   
    perl-base:                  2.23-pl526_1                bioconda   
    perl-business-isbn:         3.004-pl526_0               bioconda   
    perl-business-isbn-data:    20140910.003-pl526_0        bioconda   
    perl-carp:                  1.38-pl526_3                bioconda   
    perl-common-sense:          3.74-pl526_2                bioconda   
    perl-compress-raw-bzip2:    2.087-pl526he1b5a44_0       bioconda   
    perl-compress-raw-zlib:     2.087-pl526hc9558a2_0       bioconda   
    perl-constant:              1.33-pl526_1                bioconda   
    perl-data-dumper:           2.173-pl526_0               bioconda   
    perl-digest-hmac:           1.03-pl526_3                bioconda   
    perl-digest-md5:            2.55-pl526_0                bioconda   
    perl-encode:                2.88-pl526_1                bioconda   
    perl-encode-locale:         1.05-pl526_6                bioconda   
    perl-exporter:              5.72-pl526_1                bioconda   
    perl-exporter-tiny:         1.002001-pl526_0            bioconda   
    perl-extutils-makemaker:    7.36-pl526_1                bioconda   
    perl-file-listing:          6.04-pl526_1                bioconda   
    perl-file-path:             2.16-pl526_0                bioconda   
    perl-file-temp:             0.2304-pl526_2              bioconda   
    perl-html-parser:           3.72-pl526h6bb024c_5        bioconda   
    perl-html-tagset:           3.20-pl526_3                bioconda   
    perl-html-tree:             5.07-pl526_1                bioconda   
    perl-http-cookies:          6.04-pl526_0                bioconda   
    perl-http-daemon:           6.01-pl526_1                bioconda   
    perl-http-date:             6.02-pl526_3                bioconda   
    perl-http-message:          6.18-pl526_0                bioconda   
    perl-http-negotiate:        6.01-pl526_3                bioconda   
    perl-io-compress:           2.087-pl526he1b5a44_0       bioconda   
    perl-io-html:               1.001-pl526_2               bioconda   
    perl-io-socket-ssl:         2.066-pl526_0               bioconda   
    perl-io-zlib:               1.10-pl526_2                bioconda   
    perl-json:                  4.02-pl526_0                bioconda   
    perl-json-xs:               2.34-pl526h6bb024c_3        bioconda   
    perl-libwww-perl:           6.39-pl526_0                bioconda   
    perl-list-moreutils:        0.428-pl526_1               bioconda   
    perl-list-moreutils-xs:     0.428-pl526_0               bioconda   
    perl-lwp-mediatypes:        6.04-pl526_0                bioconda   
    perl-lwp-protocol-https:    6.07-pl526_4                bioconda   
    perl-mime-base64:           3.15-pl526_1                bioconda   
    perl-mozilla-ca:            20180117-pl526_1            bioconda   
    perl-net-http:              6.19-pl526_0                bioconda   
    perl-net-ssleay:            1.88-pl526h90d6eec_0        bioconda   
    perl-ntlm:                  1.09-pl526_4                bioconda   
    perl-parent:                0.236-pl526_1               bioconda   
    perl-pathtools:             3.75-pl526h14c3975_1        bioconda   
    perl-scalar-list-utils:     1.52-pl526h516909a_0        bioconda   
    perl-socket:                2.027-pl526_1               bioconda   
    perl-storable:              3.15-pl526h14c3975_0        bioconda   
    perl-test-requiresinternet: 0.05-pl526_0                bioconda   
    perl-time-local:            1.28-pl526_1                bioconda   
    perl-try-tiny:              0.30-pl526_1                bioconda   
    perl-types-serialiser:      1.0-pl526_2                 bioconda   
    perl-uri:                   1.76-pl526_0                bioconda   
    perl-www-robotrules:        6.02-pl526_3                bioconda   
    perl-xml-namespacesupport:  1.12-pl526_0                bioconda   
    perl-xml-parser:            2.44_01-pl5262hc3e0081_1002 conda-forge
    perl-xml-sax:               1.02-pl526_0                bioconda   
    perl-xml-sax-base:          1.09-pl526_0                bioconda   
    perl-xml-sax-expat:         0.51-pl526_3                bioconda   
    perl-xml-simple:            2.25-pl526_1                bioconda   
    perl-xsloader:              0.24-pl526_0                bioconda   
    pip:                        21.2.4-pyhd8ed1ab_0         conda-forge
    pysam:                      0.16.0.1-py36h61e5637_3     bioconda   
    python:                     3.6.13-hffdb5ce_0_cpython   conda-forge
    python-dateutil:            2.8.2-pyhd8ed1ab_0          conda-forge
    python_abi:                 3.6-2_cp36m                 conda-forge
    pytz:                       2021.1-pyhd8ed1ab_0         conda-forge
    readline:                   8.1-h46c0cb4_0              conda-forge
    samtools:                   1.13-h8c37831_0             bioconda   
    setuptools:                 57.4.0-py36h5fab9bb_0       conda-forge
    six:                        1.16.0-pyh6c4a22f_0         conda-forge
    sqlite:                     3.36.0-h9cd32fc_0           conda-forge
    tbb:                        2020.2-h4bd325d_4           conda-forge
    tk:                         8.6.11-h27826a3_1           conda-forge
    wheel:                      0.37.0-pyhd8ed1ab_1         conda-forge
    xz:                         5.2.5-h516909a_1            conda-forge
    zlib:                       1.2.11-h516909a_1010        conda-forge
    zstd:                       1.4.9-ha95c52a_0            conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/midas_1630588134860/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh
export SRC_DIR=/home/vsts/conda/conda-bld/midas_1630588134860/test_tmp
Description:
This script will allow you to build your own custom MIDAS database
Usage: build_midas_db.py indir mapfile outdir [options]

positional arguments:
  indir              Path to directory of input genomes
                     Each subdirectory should be named according to a genome_id
                     Each subdirectory should contain (replace genome_id):
                       genome_id.fna: Genomic DNA sequence in FASTA format
                       genome_id.ffn: Gene DNA sequences in FASTA format
                       genome_id.faa: Translated genes in FASTA format
  mapfile            Path to mapping file that specifies which genomes belonging to the same species.
                     The file should be tab-delimited file with a header and 3 fields:
                       genome_id (CHAR): corresponds to subdirectory within INDIR
                       species_id (CHAR): species identifier for genome_id
                       rep_genome (0 or 1): indicator if genome_id should be used for SNP calling
  outdir             Directory to store MIDAS database

optional arguments:
  -h, --help         show this help message and exit
  --threads INT      Number of threads to use (1)
  --compress         Compress output files with gzip (False)
  --max_species INT  Maximum number of species to process from input (use all).
                     Useful for quick tests
  --max_genomes INT  Maximum number of genomes to process per species (use all).
                     Useful for quick tests
Description:
Build FASTA file of consensus sequences for a species per sample
Useful for building phylogenetic trees
Before running this script, you'll need to have run `merge_midas.py snps`

Usage: call_consensus.py indir [options]

positional arguments:
  PATH                  path to output from `merge_midas.py snps` for one species
                        directory should be named according to a species_id and contains files 'snps_*.txt')

optional arguments:
  -h, --help            show this help message and exit
  --out PATH            path to output file

Sample filters (select subset of samples from INDIR):
  --sample_depth FLOAT  minimum average read depth per sample (0.0)
  --sample_cov FLOAT    fraction of reference sites covered by at least 1 read (0.0)
  --max_samples INT     maximum number of samples to process.
                        useful for quick tests (use all)
  --keep_samples STR    comma-separated list of samples to include
                        samples will still be subject to other filters
  --exclude_samples STR
                        comma-separated list of samples to exclude.
                        samples will still be subject to other filters

Site filters (select subset of genomic sites from INDIR):
  --site_list PATH      path to list of sites to include; other filters still apply
  --site_depth INT      minimum number of mapped reads per site (2)
  --site_prev FLOAT     site has at least <site_depth> coverage in at least <site_prev> proportion of samples (0.0)
                        a value of 1.0 will select sites that have sufficent coverage in all samples.
                        a value of 0.0 will select all sites, including those with low coverage in many samples 
                        NAs recorded for included sites with less than <site_depth> in a sample 
  --site_maf FLOAT      minimum average-minor-allele-frequency of site across samples (0.0)
                        setting this above zero (e.g. 0.01, 0.02, 0.05) will only retain variable sites
                        by default invariant sites are also retained.
  --site_ratio FLOAT    maximum ratio of site-depth to mean-genome-depth (None)
                        a value of 10 will filter genomic sites with 10x greater coverage than the genomic background
  --allele_support FLOAT
                        minimum fraction of reads supporting consensus allele (0.5)
  --locus_type {CDS,RNA,IGR}
                        use genomic sites that intersect: 'CDS': coding genes, 'RNA': rRNA and tRNA genes, 'IGS': intergenic regions
  --site_type {1D,2D,3D,4D}
                        if locus_type == 'CDS', use genomic sites with specified degeneracy: 4D indicates synonymous and 1D non-synonymous sites
  --max_sites INT       maximum number of sites to include in output (use all)
                        useful for quick tests

Examples:
1) Build multi-FASTA of core-genome sequences (recommended)
-core-genome sites defined as >=5 reads in >=90% of samples
-use only variable positions (>=1% minor allele frequency across samples)
-only include samples with sufficient data (>=10x mean-depth, >=40% of sites with >=1 mapped read)
-exclude sites with abnormal depth (>5x mean-depth or <1/5 mean-depth)

call_consensus.py /path/to/snps --out /path/to/seqs --site_maf 0.01 --site_depth 5 --site_prev 0.90 --sample_depth 10 --sample_cov 0.40 --site_ratio 5.0

2) Build multi-FASTA using defaults
call_consensus.py /path/to/snps --out /path/to/seqs

3) Run a quick test
call_consensus.py /path/to/snps --out /path/to/output --max_sites 10000
Description:
This script will compare the gene content between all pairs of samples
Before running this script, you'll need to have run: merge_midas.py genes

Usage: compare_genes.py indir [options]

positional arguments:
  PATH                  Path to output from `merge_midas.py genes` for one species
                        directory should be named according to a species_id and contains files 'genes_*.txt')

optional arguments:
  -h, --help            show this help message and exit
  --out PATH            Path to output file
  --max_genes INT       Maximum number of genes to use. Useful for quick tests (use all)
  --max_samples INT     Maximum number of samples to use. Useful for quick tests (use all)
  --distance {jaccard,euclidean,manhattan}
                        Metric to use for computing distances (jaccard)
  --dtype {presabs,copynum}
                        Data type to use for comparing genes (presabs)
  --cutoff FLOAT        Cutoff to use for determining presence absence (0.35)

Examples:
1) Run with defaults:
compare_genes.py /path/to/genes --out distances.txt

2) Run a quick test:
compare_genes.py /path/to/genes --out distances.txt --max_genes 1000 --max_samples 10

3) Use a different distance metric:
compare_genes.py /path/to/genes --out distances.txt --distance manhattan

4) Use a lenient cutoff for determining gene presence absence:
compare_genes.py /path/to/genes --out distances.txt --cutoff 0.10

5) Use a strict cutoff for determining gene presence absence:
compare_genes.py /path/to/genes --out distances.txt --cutoff 0.75
Description: merge MIDAS results across metagenomic samples

Usage: merge_midas.py <command> [options]

Commands:
	species	 build species abundance matrix
	genes	 build pangenome matrix for each species
	snps	 perform multi-sample SNP calling and build SNP matrix for each species

Note: use merge_midas.py <command> -h to view usage for a specific command
Description: 
Query MIDAS output results by KEGG compound identifier
For more info on compounds, see: http://www.genome.jp/kegg/compound/

Workflow:
1) Identify enzymes linked to KEGG compound
2) Identify genes linked to enzymes
3) Scan over MIDAS output results 
4) Return abundances of identified genes per sample and species

Usage: query_by_compound.py [options]

optional arguments:
  -h, --help          show this help message and exit
  -i INPUT            Input to sample directories output by run_midas.py
                      Can be a list of directories, a directory containing all samples, or a file with paths
                      See '-t' for details
  -t {list,file,dir}  list: -i is a comma-separated list (ex: /path/to/samples/sample_1,/path/to/samples/sample_2)
                       dir: -i is a directory containing all samples (ex: /path/to/samples)
                      file: -i is a file containing paths to sample directories (ex: /path/to/sample_paths.txt)
  -o OUT              Path to output file (/dev/stdout)
  -d DB               Path to MIDAS reference database
                      By default, the MIDAS_DB environmental variable is used
  -c COMPOUND         KEGG Compound identifier

Examples:
1) Query MIDAS results for compound C00312 (L-Xylulose):
query_by_compound.py -i midas_out -t dir -c C00312

2) Store results in text file:
query_by_compound.py -i midas_out -t dir -c C00312 > midas_C00312.txt

3) Specify path to individual sample directories:
query_by_compound.py -i midas_out/sample_1,midas_out/sample_2 -t list -c C00312
Description: Estimate species abundance and intra-species genomic variation from an individual metagenome

Usage: run_midas.py <command> [options]

Commands:
	species	 estimate the abundance of 5,952 bacterial species
	genes	 quantify gene copy number variation in abundant species
	snps	 quantify single nucleotide variation in abundant species

Note: use run_midas.py <command> -h to view usage for a specific command
Description:
Quantify the genomic diversity of a bacterial population
Diversity computed genome-wide, for different site classes, or for individual genes
Diversity computed for individual metagenomic samples for data pooled across samples
Before running these scripts, you'll need to have run `merge_midas.py snps`

Usage: snp_diversity.py indir [options]

positional arguments:
  PATH                  path to output from `merge_midas.py snps` for one species
                        directory should be named according to a species_id and contains files 'snps_*.txt')

optional arguments:
  -h, --help            show this help message and exit
  --out PATH            path to output file (/dev/stdout)

Diversity options:
  --genomic_type {genome-wide,per-gene}
                        compute diversity for individual genes or genome-wide (genome-wide)
  --sample_type {per-sample,pooled-samples}
                        compute diversity for individual samples or for pooled reads across samples (per-sample)
  --weight_by_depth     weight data from samples by sequencing depth when --sample_type=pooled-samples
  --rand_reads INT      randomly select N reads from each sample for each genomic site 
  --replace_reads       reads drawn with replacement
  --rand_samples INT    randomly select N samples from each genomic site
  --rand_sites FLOAT    randomly select X proportion of high-quality genomic sites
  --snp_maf FLOAT       minor allele frequency cutoff for determining if a site is a SNP (0.01)
  --consensus           call consensus alleles prior to calling SNPs

Sample filters (select subset of samples from INDIR):
  --sample_depth FLOAT  minimum average read depth per sample (0.0)
  --sample_cov FLOAT    fraction of reference sites covered by at least 1 read (0.0)
  --max_samples INT     maximum number of samples to process.
                        useful for quick tests (use all)
  --keep_samples STR    comma-separated list of samples to use for computing diversity metrics.
                        samples will still be subject to other filters
  --exclude_samples STR
                        comma-separated list of samples to exclude from computing diversity metrics.
                        samples will still be subject to other filters

Site filters (select subset of genomic sites from INDIR):
  --site_list PATH      path to file containing newline-delimited list of genomic sites to include.
                        other filters will still apply
  --site_depth INT      minimum number of mapped reads per site (2)
  --site_prev FLOAT     site has at least <site_depth> coverage in at least <site_prev> proportion of samples (0.0)
                        a value of 1.0 will select sites that have sufficent coverage in all samples.
                        a value of 0.0 will select all sites, including those with low coverage in many samples 
                        NAs recorded for included sites with less than <site_depth> in a sample 
  --site_maf FLOAT      minimum average-minor-allele-frequency of site across samples (0.0)
                        setting this above zero (e.g. 0.01, 0.02, 0.05) will only retain variable sites
                        by default invariant sites are also retained.
  --site_ratio FLOAT    maximum ratio of site-depth to mean-genome-depth (None)
                        a value of 10 will filter genomic sites with 10x greater coverage than the genomic background
  --allele_support FLOAT
                        minimum fraction of reads supporting consensus allele (0.50)
  --locus_type {CDS,RNA,IGR}
                        use genomic sites that intersect: 'CDS': coding genes, 'RNA': rRNA and tRNA genes, 'IGS': intergenic regions
  --site_type {1D,2D,3D,4D}
                        if locus_type == 'CDS', use genomic sites with specified degeneracy: 4D indicates synonymous and 1D non-synonymous sites
  --max_sites INT       maximum number of sites to include in output (use all)
                        useful for quick tests

Examples:
1) Quantify within-sample heterogenity genome-wide
snp_diversity.py /path/to/snps --genomic_type genome-wide --sample_type per-sample --out /path/to/output

2) Quantify between-sample heterogenity genome-wide
snp_diversity.py /path/to/snps --genomic_type genome-wide --sample_type pooled-sample --out /path/to/output

3) Quantify between-sample heterogenity per-gene
snp_diversity.py /path/to/snps --genomic_type per-gene --sample_type pooled-samples --out /path/to/output

4) Use downsampling to control the read-depth at each genomic site
snp_diversity.py /path/to/snps --genomic_type genome-wide --sample_type per-sample --out /path/to/output

5) Only quantify diversity at non-synonymous sites
snp_diversity.py /path/to/snps --genomic_type genome-wide --sample_type pooled-samples --site_type 4D --locus_type CDS --out /path/to/output

6) Quantify SNPs using a different definition of a polymorphism
snp_diversity.py /path/to/snps --genomic_type genome-wide --sample_type per-sample --snp_maf 0.05 --out /path/to/output

7) Run a quick test
snp_diversity.py /path/to/snps --max_sites 10000  --out /path/to/output

Usage: strain_tracking.py <command> [options]

Note: use strain_tracking.py <command> -h to view usage for a specific command

Commands:
	id_markers      identify rare SNPs that disriminate individual strains
	track_markers   track rare SNPs between samples and determine transmission

Resource usage statistics from testing midas:
   Process count: 3
   CPU time: Sys=0:00:00.1, User=0:00:00.2
   Memory: 41.7M
   Disk usage: 16B
   Time elapsed: 0:00:04.1


TEST END: midas-1.3.2-py36h24bf2e0_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


Updating build index: /Users/runner/conda/conda-bld

TEST START: repenrich-1.2-py27_1.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmp86yh0l5x/info/recipe/conda_build_config.yaml
  Package                 Version  Build                  Channel                                    Size
───────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────────────────────

  + bedtools               2.23.0  h5c9b4e4_2             bioconda/osx-64                          677 KB
  + biopython                1.76  py27h0b31af3_0         conda-forge/osx-64                         3 MB
  + bowtie                  1.2.3  py27h770b8ee_0         bioconda/osx-64                            1 MB
  + bzip2                   1.0.8  h0d85af4_4             conda-forge/osx-64                       Cached
  + c-ares                 1.17.2  h0d85af4_0             conda-forge/osx-64                       Cached
  + ca-certificates     2021.5.30  h033912b_0             conda-forge/osx-64                       Cached
  + certifi            2019.11.28  py27h8c360ce_1         conda-forge/osx-64                       149 KB
  + htslib                   1.13  hc38c3fb_0             bioconda/osx-64                            2 MB
  + krb5                   1.19.2  hcfbf3a7_0             conda-forge/osx-64                       Cached
  + libblas                 3.9.0  11_osx64_openblas      conda-forge/osx-64                       Cached
  + libcblas                3.9.0  11_osx64_openblas      conda-forge/osx-64                       Cached
  + libcurl                7.78.0  hf45b732_0             conda-forge/osx-64                       Cached
  + libcxx                 12.0.1  habf9029_0             conda-forge/osx-64                       Cached
  + libdeflate                1.7  h35c211d_5             conda-forge/osx-64                       Cached
  + libedit          3.1.20191231  h0678c8f_2             conda-forge/osx-64                       Cached
  + libev                    4.33  haf1e3a3_1             conda-forge/osx-64                       Cached
  + libffi                  3.2.1  hb1e8313_1007          conda-forge/osx-64                        42 KB
  + libgfortran             5.0.0  9_3_0_h6c81a4c_23      conda-forge/osx-64                       Cached
  + libgfortran5            9.3.0  h6c81a4c_23            conda-forge/osx-64                       Cached
  + liblapack               3.9.0  11_osx64_openblas      conda-forge/osx-64                       Cached
  + libnghttp2             1.43.0  h07e645a_0             conda-forge/osx-64                       Cached
  + libopenblas            0.3.17  openmp_h3351f45_1      conda-forge/osx-64                       Cached
  + libssh2                1.10.0  h52ee1ee_0             conda-forge/osx-64                       Cached
  + llvm-openmp            12.0.1  hda6cdc1_1             conda-forge/osx-64                       Cached
  + ncurses                   6.2  h2e338ed_4             conda-forge/osx-64                       Cached
  + numpy                  1.16.5  py27hde6bac1_0         conda-forge/osx-64                         4 MB
  + openssl                1.1.1l  h0d85af4_0             conda-forge/osx-64                       Cached
  + perl                   5.32.1  0_h0d85af4_perl5       conda-forge/osx-64                        13 MB
  + pip                    20.1.1  pyh9f0ad1d_0           conda-forge/noarch                         1 MB
  + python                 2.7.15  h8e446fc_1011_cpython  conda-forge/osx-64                        12 MB
  + python_abi                2.7  1_cp27m                conda-forge/osx-64                         4 KB
  + readline                  8.1  h05e3726_0             conda-forge/osx-64                       Cached
  + repenrich                 1.2  py27_1                 /Users/runner/conda/conda-bld/osx-64      11 KB
  + samtools                 1.13  h7596a89_0             bioconda/osx-64                          404 KB
  + setuptools             44.0.0  py27_0                 conda-forge/osx-64                       649 KB
  + sqlite                 3.36.0  h23a322b_0             conda-forge/osx-64                       Cached
  + tbb                  2021.3.0  h940c156_0             conda-forge/osx-64                       162 KB
  + tk                     8.6.11  h5dbffcc_1             conda-forge/osx-64                       Cached
  + wheel                  0.37.0  pyhd8ed1ab_1           conda-forge/noarch                       Cached
  + xz                      5.2.5  haf1e3a3_1             conda-forge/osx-64                       Cached
  + zlib                   1.2.11  h7795811_1010          conda-forge/osx-64                       Cached

  Summary:

  Install: 41 packages

  Total download: 39 MB

───────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/repenrich_1630902464391/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    bedtools:        2.23.0-h5c9b4e4_2            bioconda   
    biopython:       1.76-py27h0b31af3_0          conda-forge
    bowtie:          1.2.3-py27h770b8ee_0         bioconda   
    bzip2:           1.0.8-h0d85af4_4             conda-forge
    c-ares:          1.17.2-h0d85af4_0            conda-forge
    ca-certificates: 2021.5.30-h033912b_0         conda-forge
    certifi:         2019.11.28-py27h8c360ce_1    conda-forge
    htslib:          1.13-hc38c3fb_0              bioconda   
    krb5:            1.19.2-hcfbf3a7_0            conda-forge
    libblas:         3.9.0-11_osx64_openblas      conda-forge
    libcblas:        3.9.0-11_osx64_openblas      conda-forge
    libcurl:         7.78.0-hf45b732_0            conda-forge
    libcxx:          12.0.1-habf9029_0            conda-forge
    libdeflate:      1.7-h35c211d_5               conda-forge
    libedit:         3.1.20191231-h0678c8f_2      conda-forge
    libev:           4.33-haf1e3a3_1              conda-forge
    libffi:          3.2.1-hb1e8313_1007          conda-forge
    libgfortran:     5.0.0-9_3_0_h6c81a4c_23      conda-forge
    libgfortran5:    9.3.0-h6c81a4c_23            conda-forge
    liblapack:       3.9.0-11_osx64_openblas      conda-forge
    libnghttp2:      1.43.0-h07e645a_0            conda-forge
    libopenblas:     0.3.17-openmp_h3351f45_1     conda-forge
    libssh2:         1.10.0-h52ee1ee_0            conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1            conda-forge
    ncurses:         6.2-h2e338ed_4               conda-forge
    numpy:           1.16.5-py27hde6bac1_0        conda-forge
    openssl:         1.1.1l-h0d85af4_0            conda-forge
    perl:            5.32.1-0_h0d85af4_perl5      conda-forge
    pip:             20.1.1-pyh9f0ad1d_0          conda-forge
    python:          2.7.15-h8e446fc_1011_cpython conda-forge
    python_abi:      2.7-1_cp27m                  conda-forge
    readline:        8.1-h05e3726_0               conda-forge
    repenrich:       1.2-py27_1                   local      
    samtools:        1.13-h7596a89_0              bioconda   
    setuptools:      44.0.0-py27_0                conda-forge
    sqlite:          3.36.0-h23a322b_0            conda-forge
    tbb:             2021.3.0-h940c156_0          conda-forge
    tk:              8.6.11-h5dbffcc_1            conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1          conda-forge
    xz:              5.2.5-haf1e3a3_1             conda-forge
    zlib:            1.2.11-h7795811_1010         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/repenrich_1630902464391/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/Users/runner/conda/conda-bld/repenrich_1630902464391/test_tmp
usage: RepEnrich.py [-h] [--version] [--pairedend PAIREDEND]
                    [--collapserepeat collapserepeat] [--threshold threshold]
                    [--tolerance tolerance] [--fastqfile2 fastqfile2]
                    [--cpus cpus] [--allcountmethod allcountmethod]
                    [--is_bed is_bed]
                    annotation_file outputfolder outputprefix setup_folder
                    fastqfile alignment_bam

Part II: Conducting the alignments to the psuedogenomes. Before doing this
step you will require 1) a bamfile of the unique alignments with index 2) a
fastq file of the reads mapping to more than one location. These files can be
obtained using the following bowtie options [EXAMPLE: bowtie -S -m 1 --max
multimap.fastq mm9 mate1_reads.fastq] Once you have the unique alignment
bamfile and the reads mapping to more than one location in a fastq file you
can run this step. EXAMPLE: python master_output.py
/users/nneretti/data/annotation/hg19/hg19_repeatmasker.txt
/users/nneretti/datasets/repeatmapping/POL3/Pol3_human/HeLa_InputChIPseq_Rep1
HeLa_InputChIPseq_Rep1 /users/nneretti/data/annotation/hg19/setup_folder
HeLa_InputChIPseq_Rep1_multimap.fastq HeLa_InputChIPseq_Rep1.bam

positional arguments:
  annotation_file       List RepeatMasker.org annotation file for your
                        organism. The file may be downloaded from the
                        RepeatMasker.org website. Example:
                        /data/annotation/hg19/hg19_repeatmasker.txt
  outputfolder          List folder to contain results. Example: /outputfolder
  outputprefix          Enter prefix name for data. Example:
                        HeLa_InputChIPseq_Rep1
  setup_folder          List folder that contains the repeat element
                        psuedogenomes. Example
                        /data/annotation/hg19/setup_folder
  fastqfile             Enter file for the fastq reads that map to multiple
                        locations. Example /data/multimap.fastq
  alignment_bam         Enter bamfile output for reads that map uniquely.
                        Example /bamfiles/old.bam

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --pairedend PAIREDEND
                        Designate this option for paired-end sequencing.
                        Default FALSE change to TRUE
  --collapserepeat collapserepeat
                        Designate this option to generate a collapsed repeat
                        type. Uncollapsed output is generated in addition to
                        collapsed repeat type. Simple_repeat is default to
                        simplify downstream analysis. You can change the
                        default to another repeat name to collapse a seperate
                        specific repeat instead or if the name of
                        Simple_repeat is different for your organism. Default
                        Simple_repeat
  --threshold threshold
                        This option specifies overlap between repetitive
                        elements and reads that map uniquely to the genome.
                        You should change the option depending on the read
                        length. We felt that the the value should be close to
                        half read length. Default 21
  --tolerance tolerance
                        This option helps to modifies the scrutiny of the
                        region sorter. Default 500
  --fastqfile2 fastqfile2
                        Enter fastqfile2 when using paired-end option. Default
                        none
  --cpus cpus           Enter available cpus per node. The more cpus the
                        faster RepEnrich performs. RepEnrich is designed to
                        only work on one node. Default: "1"
  --allcountmethod allcountmethod
                        By default the pipeline only outputs the fraction
                        count method. Consdidered to be the best way to count
                        multimapped reads. Changing this option will include
                        the unique count method, a conservative count, and the
                        total count method, a liberal counting strategy. Our
                        evaluation of simulated data indicated fraction
                        counting is best. Default = FALSE, change to TRUE
  --is_bed is_bed       Is the annotation file a bed file. This is also a
                        compatible format. The file needs to be a tab
                        seperated bed with optional fields. Ex. format chr
                        start end Name_element class family. The class and
                        family should identical to name_element if not
                        applicable. Default FALSE change to TRUE
usage: getargs_genome_maker.py [-h] [--version]
                               [--nfragmentsfile1 nfragmentsfile1]
                               [--gaplength gaplength]
                               [--flankinglength flankinglength]
                               [--is_bed is_bed]
                               annotation_file genomefasta setup_folder

Part I: Prepartion of repetive element psuedogenomes and repetive element
bamfiles. This script prepares the annotation used by downstream applications
to analyze for repetitive element enrichment. For this script to run properly
bowtie must be loaded. The repeat element psuedogenomes are prepared in order
to analyze reads that map to multiple locations of the genome. The repeat
element bamfiles are prepared in order to use a region sorter to analyze reads
that map to a single location of the genome.You will 1) annotation_file: The
repetitive element annotation file downloaded from RepeatMasker.org database
for your organism of interest. 2) genomefasta: Your genome of interest in
fasta format, 3)setup_folder: a folder to contain repeat element setup files
command-line usage EXAMPLE: python master_setup.py
/users/nneretti/data/annotation/mm9/mm9_repeatmasker.txt
/users/nneretti/data/annotation/mm9/mm9.fa
/users/nneretti/data/annotation/mm9/setup_folder

positional arguments:
  annotation_file       List annotation file. The annotation file contains the
                        repeat masker annotation for the genome of interest
                        and may be downloaded at RepeatMasker.org Example
                        /data/annotation/mm9/mm9.fa.out
  genomefasta           File name and path for genome of interest in fasta
                        format. Example /data/annotation/mm9/mm9.fa
  setup_folder          List folder to contain bamfiles for repeats and repeat
                        element psuedogenomes. Example
                        /data/annotation/mm9/setup

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --nfragmentsfile1 nfragmentsfile1
                        Output location of a description file that saves the
                        number of fragments processed per repname. Default
                        ./repnames_nfragments.txt
  --gaplength gaplength
                        Length of the spacer used to build repeat
                        psuedogeneomes. Default 200
  --flankinglength flankinglength
                        Length of the flanking region adjacent to the repeat
                        element that is used to build repeat psuedogeneomes.
                        The flanking length should be set according to the
                        length of your reads. Default 25
  --is_bed is_bed       Is the annotation file a bed file. This is also a
                        compatible format. The file needs to be a tab
                        seperated bed with optional fields. Ex. format chr
                        start end Name_element class family. The class and
                        family should identical to name_element if not
                        applicable. Default FALSE change to TRUE

Resource usage statistics from testing repenrich:
   Process count: 4
   CPU time: Sys=0:00:00.2, User=0:00:00.2
   Memory: 25.3M
   Disk usage: 12B
   Time elapsed: 0:00:08.2


TEST END: repenrich-1.2-py27_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package               Version  Build               Channel                                   Size
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  Install:
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

  + _libgcc_mutex           0.1  conda_forge         conda-forge/linux-64                    Cached
  + _openmp_mutex           4.5  1_gnu               conda-forge/linux-64                    Cached
  + ca-certificates   2021.5.30  ha878542_0          conda-forge/linux-64                    Cached
  + gatk4               4.2.2.0  hdfd78af_0          bioconda/noarch                         Cached
  + gatk4-spark         4.2.2.0  hdfd78af_0          /home/vsts/conda/conda-bld/linux-64     161 MB
  + ld_impl_linux-64     2.36.1  hea4e1c9_2          conda-forge/linux-64                    Cached
  + libffi                  3.3  h58526e2_2          conda-forge/linux-64                    Cached
  + libgcc-ng            11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libgomp              11.1.0  hc902ee8_8          conda-forge/linux-64                    Cached
  + libstdcxx-ng         11.1.0  h56837e0_8          conda-forge/linux-64                    Cached
  + ncurses                 6.2  h58526e2_4          conda-forge/linux-64                    Cached
  + openjdk             8.0.282  h7f98852_0          conda-forge/linux-64                    Cached
  + openssl              1.1.1l  h7f98852_0          conda-forge/linux-64                    Cached
  + pip                  21.2.4  pyhd8ed1ab_0        conda-forge/noarch                      Cached
  + python                3.9.7  h49503c6_0_cpython  conda-forge/linux-64                    Cached
  + python_abi              3.9  2_cp39              conda-forge/linux-64                    Cached
  + readline                8.1  h46c0cb4_0          conda-forge/linux-64                    Cached
  + setuptools           57.4.0  py39hf3d152e_0      conda-forge/linux-64                    Cached
  + sqlite               3.36.0  h9cd32fc_0          conda-forge/linux-64                    Cached
  + tk                   8.6.11  h27826a3_1          conda-forge/linux-64                    Cached
  + tzdata                2021a  he74cb21_1          conda-forge/noarch                      Cached
  + wheel                0.37.0  pyhd8ed1ab_1        conda-forge/noarch                      Cached
  + xz                    5.2.5  h516909a_1          conda-forge/linux-64                    Cached
  + zlib                 1.2.11  h516909a_1010       conda-forge/linux-64                    Cached

  Summary:

  Install: 24 packages

  Total download: 161 MB

â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€

Updating build index: /home/vsts/conda/conda-bld

TEST START: gatk4-spark-4.2.2.0-hdfd78af_0.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/gatk4-spark_1630834100758/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_


The following NEW packages will be INSTALLED:

    _libgcc_mutex:    0.1-conda_forge          conda-forge
    _openmp_mutex:    4.5-1_gnu                conda-forge
    ca-certificates:  2021.5.30-ha878542_0     conda-forge
    gatk4:            4.2.2.0-hdfd78af_0       bioconda   
    gatk4-spark:      4.2.2.0-hdfd78af_0       local      
    ld_impl_linux-64: 2.36.1-hea4e1c9_2        conda-forge
    libffi:           3.3-h58526e2_2           conda-forge
    libgcc-ng:        11.1.0-hc902ee8_8        conda-forge
    libgomp:          11.1.0-hc902ee8_8        conda-forge
    libstdcxx-ng:     11.1.0-h56837e0_8        conda-forge
    ncurses:          6.2-h58526e2_4           conda-forge
    openjdk:          8.0.282-h7f98852_0       conda-forge
    openssl:          1.1.1l-h7f98852_0        conda-forge
    pip:              21.2.4-pyhd8ed1ab_0      conda-forge
    python:           3.9.7-h49503c6_0_cpython conda-forge
    python_abi:       3.9-2_cp39               conda-forge
    readline:         8.1-h46c0cb4_0           conda-forge
    setuptools:       57.4.0-py39hf3d152e_0    conda-forge
    sqlite:           3.36.0-h9cd32fc_0        conda-forge
    tk:               8.6.11-h27826a3_1        conda-forge
    tzdata:           2021a-he74cb21_1         conda-forge
    wheel:            0.37.0-pyhd8ed1ab_1      conda-forge
    xz:               5.2.5-h516909a_1         conda-forge
    zlib:             1.2.11-h516909a_1010     conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/gatk4-spark_1630834100758/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_
export SRC_DIR=/home/vsts/conda/conda-bld/gatk4-spark_1630834100758/test_tmp

 Usage template for all tools (uses --spark-runner LOCAL when used with a Spark tool)
    gatk AnyTool toolArgs

 Usage template for Spark tools (will NOT work on non-Spark tools)
    gatk SparkTool toolArgs  [ -- --spark-runner <LOCAL | SPARK | GCS> sparkArgs ]

 Getting help
    gatk --list       Print the list of available tools

    gatk Tool --help  Print help on a particular tool

 Configuration File Specification
     --gatk-config-file                PATH/TO/GATK/PROPERTIES/FILE

 gatk forwards commands to GATK and adds some sugar for submitting spark jobs

   --spark-runner <target>    controls how spark tools are run
     valid targets are:
     LOCAL:      run using the in-memory spark runner
     SPARK:      run using spark-submit on an existing cluster 
                 --spark-master must be specified
                 --spark-submit-command may be specified to control the Spark submit command
                 arguments to spark-submit may optionally be specified after -- 
     GCS:        run using Google cloud dataproc
                 commands after the -- will be passed to dataproc
                 --cluster <your-cluster> must be specified after the --
                 spark properties and some common spark-submit parameters will be translated 
                 to dataproc equivalents

   --dry-run      may be specified to output the generated command line without running it
   --java-options 'OPTION1[ OPTION2=Y ... ]'   optional - pass the given string of options to the 
                 java JVM at runtime.  
                 Java options MUST be passed inside a single string with space-separated values.

   --debug-port <number> sets up a Java VM debug agent to listen to debugger connections on a
                         particular port number. This in turn will add the necessary java VM arguments
                         so that you don't need to explicitly indicate these using --java-options.
   --debug-suspend       sets the Java VM debug agent up so that the run get immediatelly suspended
                         waiting for a debugger to connect. By default the port number is 5005 but
                         can be customized using --debug-port
[1m[31mUSAGE:  [32m<program name>[1m[31m [-h]

[0m[1m[31mAvailable Programs:
[0m[37m--------------------------------------------------------------------------------------
[0m[31mBase Calling:                                    Tools that process sequencing machine data, e.g. Illumina base calls, and detect sequencing level attributes, e.g. adapters[0m
[32m    CheckIlluminaDirectory (Picard)              [36mAsserts the validity for specified Illumina basecalling data.  [0m
[32m    CollectIlluminaBasecallingMetrics (Picard)   [36mCollects Illumina Basecalling metrics for a sequencing run.  [0m
[32m    CollectIlluminaLaneMetrics (Picard)          [36mCollects Illumina lane metrics for the given BaseCalling analysis directory.  [0m
[32m    ExtractIlluminaBarcodes (Picard)             [36mTool determines the barcode for each read in an Illumina lane.  [0m
[32m    IlluminaBasecallsToFastq (Picard)            [36mGenerate FASTQ file(s) from Illumina basecall read data.  [0m
[32m    IlluminaBasecallsToSam (Picard)              [36mTransforms raw Illumina sequencing data into an unmapped SAM or BAM file.[0m
[32m    MarkIlluminaAdapters (Picard)                [36mReads a SAM or BAM file and rewrites it with new adapter-trimming tags.  [0m

[37m--------------------------------------------------------------------------------------
[0m[31mCopy Number Variant Discovery:                   Tools that analyze read coverage to detect copy number variants.[0m
[32m    AnnotateIntervals                            [36mAnnotates intervals with GC content, mappability, and segmental-duplication content[0m
[32m    CallCopyRatioSegments                        [36mCalls copy-ratio segments as amplified, deleted, or copy-number neutral[0m
[32m    CombineSegmentBreakpoints                    [31m(EXPERIMENTAL Tool) [36mCombine the breakpoints of two segment files and annotate the resulting intervals with chosen columns from each file.[0m
[32m    CreateReadCountPanelOfNormals                [36mCreates a panel of normals for read-count denoising[0m
[32m    DenoiseReadCounts                            [36mDenoises read counts to produce denoised copy ratios[0m
[32m    DetermineGermlineContigPloidy                [36mDetermines the baseline contig ploidy for germline samples given counts data[0m
[32m    FilterIntervals                              [36mFilters intervals based on annotations and/or count statistics[0m
[32m    GermlineCNVCaller                            [36mCalls copy-number variants in germline samples given their counts and the output of DetermineGermlineContigPloidy[0m
[32m    MergeAnnotatedRegions                        [31m(EXPERIMENTAL Tool) [36mMerge annotated genomic regions based entirely on touching/overlapping intervals.[0m
[32m    MergeAnnotatedRegionsByAnnotation            [31m(EXPERIMENTAL Tool) [36mMerge annotated genomic regions within specified distance if annotation value(s) are exactly the same.[0m
[32m    ModelSegments                                [36mModels segmented copy ratios from denoised copy ratios and segmented minor-allele fractions from allelic counts[0m
[32m    PlotDenoisedCopyRatios                       [36mCreates plots of denoised copy ratios[0m
[32m    PlotModeledSegments                          [36mCreates plots of denoised and segmented copy-ratio and minor-allele-fraction estimates[0m
[32m    PostprocessGermlineCNVCalls                  [36mPostprocesses the output of GermlineCNVCaller and generates VCFs and denoised copy ratios[0m
[32m    TagGermlineEvents                            [31m(EXPERIMENTAL Tool) [36mDo a simplistic tagging of germline events in a tumor segment file.[0m

[37m--------------------------------------------------------------------------------------
[0m[31mCoverage Analysis:                               Tools that count coverage, e.g. depth per allele[0m
[32m    ASEReadCounter                               [36mGenerates table of filtered base counts at het sites for allele specific expression[0m
[32m    AnalyzeSaturationMutagenesis                 [31m(BETA Tool) [36m(EXPERIMENTAL) Processes reads from a MITESeq or other saturation mutagenesis experiment.[0m
[32m    CollectAllelicCounts                         [36mCollects reference and alternate allele counts at specified sites[0m
[32m    CollectAllelicCountsSpark                    [36mCollects reference and alternate allele counts at specified sites[0m
[32m    CollectF1R2Counts                            [36mCollect F1R2 read counts for the Mutect2 orientation bias mixture model filter[0m
[32m    CollectReadCounts                            [36mCollects read counts at specified intervals[0m
[32m    CountBases                                   [36mCount bases in a SAM/BAM/CRAM file[0m
[32m    CountBasesSpark                              [36mCounts bases in the input SAM/BAM[0m
[32m    CountReads                                   [36mCount reads in a SAM/BAM/CRAM file[0m
[32m    CountReadsSpark                              [36mCounts reads in the input SAM/BAM[0m
[32m    DepthOfCoverage                              [31m(BETA Tool) [36mGenerate coverage summary information for reads data[0m
[32m    GeneExpressionEvaluation                     [31m(BETA Tool) [36mEvaluate gene expression from RNA-seq reads aligned to genome.[0m
[32m    GetPileupSummaries                           [36mTabulates pileup metrics for inferring contamination[0m
[32m    LocalAssembler                               [31m(BETA Tool) [36mLocal assembler for SVs[0m
[32m    Pileup                                       [36mPrints read alignments in samtools pileup format[0m
[32m    PileupSpark                                  [31m(BETA Tool) [36mPrints read alignments in samtools pileup format[0m

[37m--------------------------------------------------------------------------------------
[0m[31mDiagnostics and Quality Control:                 Tools that collect sequencing quality related and comparative metrics[0m
[32m    AccumulateVariantCallingMetrics (Picard)     [36mCombines multiple Variant Calling Metrics files into a single file[0m
[32m    AnalyzeCovariates                            [36mEvaluate and compare base quality score recalibration (BQSR) tables[0m
[32m    BamIndexStats (Picard)                       [36mGenerate index statistics from a BAM file[0m
[32m    CalcMetadataSpark                            [31m(BETA Tool) [36m(Internal) Collects read metrics relevant to structural variant discovery[0m
[32m    CalculateContamination                       [36mCalculate the fraction of reads coming from cross-sample contamination[0m
[32m    CalculateFingerprintMetrics (Picard)         [36mCalculate statistics on fingerprints, checking their viability[0m
[32m    CalculateReadGroupChecksum (Picard)          [36mCreates a hash code based on the read groups (RG).  [0m
[32m    CheckDuplicateMarking (Picard)               [36mChecks the consistency of duplicate markings.[0m
[32m    CheckFingerprint (Picard)                    [36mComputes a fingerprint from the supplied input (SAM/BAM/CRAM or VCF) file and compares it to the provided genotypes[0m
[32m    CheckPileup                                  [36mCompare GATK's internal pileup to a reference Samtools mpileup[0m
[32m    CheckTerminatorBlock (Picard)                [36mAsserts the provided gzip file's (e.g., BAM) last block is well-formed; RC 100 otherwise[0m
[32m    ClusterCrosscheckMetrics (Picard)            [36mClusters the results of a CrosscheckFingerprints run by LOD score[0m
[32m    CollectAlignmentSummaryMetrics (Picard)      [36m<b>Produces a summary of alignment metrics from a SAM or BAM file.</b>  [0m
[32m    CollectArraysVariantCallingMetrics (Picard)  [36mCollects summary and per-sample from the provided arrays VCF file[0m
[32m    CollectBaseDistributionByCycle (Picard)      [36mChart the nucleotide distribution per cycle in a SAM or BAM file[0m
[32m    CollectBaseDistributionByCycleSpark          [31m(BETA Tool) [36mCollects base distribution per cycle in SAM/BAM/CRAM file(s).[0m
[32m    CollectGcBiasMetrics (Picard)                [36mCollect metrics regarding GC bias. [0m
[32m    CollectHiSeqXPfFailMetrics (Picard)          [36mClassify PF-Failing reads in a HiSeqX Illumina Basecalling directory into various categories.[0m
[32m    CollectHsMetrics (Picard)                    [36mCollects hybrid-selection (HS) metrics for a SAM or BAM file.  [0m
[32m    CollectIndependentReplicateMetrics (Picard)  [31m(EXPERIMENTAL Tool) [36mEstimates the rate of independent replication rate of reads within a bam. 
[0m
[32m    CollectInsertSizeMetrics (Picard)            [36mCollect metrics about the insert size distribution of a paired-end library. [0m
[32m    CollectInsertSizeMetricsSpark                [31m(BETA Tool) [36mCollects insert size distribution information on alignment data[0m
[32m    CollectJumpingLibraryMetrics (Picard)        [36mCollect jumping library metrics. [0m
[32m    CollectMultipleMetrics (Picard)              [36mCollect multiple classes of metrics. [0m
[32m    CollectMultipleMetricsSpark                  [31m(BETA Tool) [36mRuns multiple metrics collection modules for a given alignment file[0m
[32m    CollectOxoGMetrics (Picard)                  [36mCollect metrics to assess oxidative artifacts.[0m
[32m    CollectQualityYieldMetrics (Picard)          [36mCollect metrics about reads that pass quality thresholds and Illumina-specific filters.  [0m
[32m    CollectQualityYieldMetricsSpark              [31m(BETA Tool) [36mCollects quality yield metrics from SAM/BAM/CRAM file(s).[0m
[32m    CollectRawWgsMetrics (Picard)                [36mCollect whole genome sequencing-related metrics.  [0m
[32m    CollectRnaSeqMetrics (Picard)                [36mProduces RNA alignment metrics for a SAM or BAM file.  [0m
[32m    CollectRrbsMetrics (Picard)                  [36m<b>Collects metrics from reduced representation bisulfite sequencing (Rrbs) data.</b>  [0m
[32m    CollectSamErrorMetrics (Picard)              [36mProgram to collect error metrics on bases stratified in various ways.[0m
[32m    CollectSequencingArtifactMetrics (Picard)    [36mCollect metrics to quantify single-base sequencing artifacts.  [0m
[32m    CollectTargetedPcrMetrics (Picard)           [36mCalculate PCR-related metrics from targeted sequencing data. [0m
[32m    CollectVariantCallingMetrics (Picard)        [36mCollects per-sample and aggregate (spanning all samples) metrics from the provided VCF file[0m
[32m    CollectWgsMetrics (Picard)                   [36mCollect metrics about coverage and performance of whole genome sequencing (WGS) experiments.[0m
[32m    CollectWgsMetricsWithNonZeroCoverage (Picard)[31m(EXPERIMENTAL Tool) [36mCollect metrics about coverage and performance of whole genome sequencing (WGS) experiments.  [0m
[32m    CompareBaseQualities                         [36mCompares the base qualities of two SAM/BAM/CRAM files[0m
[32m    CompareDuplicatesSpark                       [31m(BETA Tool) [36mDetermine if two potentially identical BAMs have the same duplicate reads[0m
[32m    CompareMetrics (Picard)                      [36mCompare two metrics files.[0m
[32m    CompareSAMs (Picard)                         [36mCompare two input ".sam" or ".bam" files.  [0m
[32m    ConvertHaplotypeDatabaseToVcf (Picard)       [36mConvert Haplotype database file to vcf[0m
[32m    ConvertSequencingArtifactToOxoG (Picard)     [36mExtract OxoG metrics from generalized artifacts metrics.  [0m
[32m    CrosscheckFingerprints (Picard)              [36mChecks that all data in the input files appear to have come from the same individual[0m
[32m    CrosscheckReadGroupFingerprints (Picard)     [36mDEPRECATED: USE CrosscheckFingerprints. [0m
[32m    EstimateLibraryComplexity (Picard)           [36mEstimates the numbers of unique molecules in a sequencing library.  [0m
[32m    ExtractFingerprint (Picard)                  [36mComputes a fingerprint from the input file.[0m
[32m    FlagStat                                     [36mAccumulate flag statistics given a BAM file[0m
[32m    FlagStatSpark                                [36mSpark tool to accumulate flag statistics[0m
[32m    GatherPileupSummaries                        [36mCombine output files from GetPileupSummary in the order defined by a sequence dictionary[0m
[32m    GetSampleName                                [36mEmit a single sample name[0m
[32m    IdentifyContaminant (Picard)                 [36mComputes a fingerprint from the supplied SAM/BAM file, given a contamination estimate.[0m
[32m    LiftOverHaplotypeMap (Picard)                [36mLifts over a haplotype database from one reference to another[0m
[32m    MeanQualityByCycle (Picard)                  [36mCollect mean quality by cycle.[0m
[32m    MeanQualityByCycleSpark                      [31m(BETA Tool) [36mMeanQualityByCycle on Spark[0m
[32m    QualityScoreDistribution (Picard)            [36mChart the distribution of quality scores.  [0m
[32m    QualityScoreDistributionSpark                [31m(BETA Tool) [36mQualityScoreDistribution on Spark[0m
[32m    ValidateSamFile (Picard)                     [36mValidates a SAM or BAM file.[0m
[32m    ViewSam (Picard)                             [36mPrints a SAM or BAM file to the screen[0m

[37m--------------------------------------------------------------------------------------
[0m[31mExample Tools:                                   Example tools that show developers how to implement new tools[0m
[32m    HtsgetReader                                 [31m(EXPERIMENTAL Tool) [36mDownload a file using htsget[0m

[37m--------------------------------------------------------------------------------------
[0m[31mGenotyping Arrays Manipulation:                  Tools that manipulate data generated by Genotyping arrays[0m
[32m    BpmToNormalizationManifestCsv (Picard)       [36mProgram to convert an Illumina bpm file into a bpm.csv file.[0m
[32m    CombineGenotypingArrayVcfs (Picard)          [36mProgram to combine multiple genotyping array VCF files into one VCF.[0m
[32m    CompareGtcFiles (Picard)                     [36mCompares two GTC files.[0m
[32m    CreateBafRegressMetricsFile (Picard)         [36mProgram to generate a picard metrics file from the output of the bafRegress tool.[0m
[32m    CreateVerifyIDIntensityContaminationMetricsFile (Picard)    [36mProgram to generate a picard metrics file from the output of the VerifyIDIntensity tool.[0m
[32m    GtcToVcf (Picard)                            [36mProgram to convert an Illumina GTC file to a VCF[0m
[32m    MergePedIntoVcf (Picard)                     [36mProgram to merge a single-sample ped file from zCall into a single-sample VCF.[0m
[32m    VcfToAdpc (Picard)                           [36mProgram to convert an Arrays VCF to an ADPC file.[0m

[37m--------------------------------------------------------------------------------------
[0m[31mIntervals Manipulation:                          Tools that process genomic intervals in various formats[0m
[32m    BedToIntervalList (Picard)                   [36mConverts a BED file to a Picard Interval List.  [0m
[32m    CompareIntervalLists                         [36mCompare two interval lists for equality[0m
[32m    IntervalListToBed (Picard)                   [36mConverts an Picard IntervalList file to a BED file.[0m
[32m    IntervalListTools (Picard)                   [36mA tool for performing various IntervalList manipulations[0m
[32m    LiftOverIntervalList (Picard)                [36mLifts over an interval list from one reference build to another. [0m
[32m    PreprocessIntervals                          [36mPrepares bins for coverage collection[0m
[32m    SplitIntervals                               [36mSplit intervals into sub-interval files.[0m

[37m--------------------------------------------------------------------------------------
[0m[31mMetagenomics:                                    Tools that perform metagenomic analysis, e.g. microbial community composition and pathogen detection[0m
[32m    PathSeqBuildKmers                            [36mBuilds set of host reference k-mers[0m
[32m    PathSeqBuildReferenceTaxonomy                [36mBuilds a taxonomy datafile of the microbe reference[0m
[32m    PathSeqBwaSpark                              [36mStep 2: Aligns reads to the microbe reference[0m
[32m    PathSeqFilterSpark                           [36mStep 1: Filters low quality, low complexity, duplicate, and host reads[0m
[32m    PathSeqPipelineSpark                         [36mCombined tool that performs all steps: read filtering, microbe reference alignment, and abundance scoring[0m
[32m    PathSeqScoreSpark                            [36mStep 3: Classifies pathogen-aligned reads and generates abundance scores[0m

[37m--------------------------------------------------------------------------------------
[0m[31mMethylation-Specific Tools:                      Tools that perform methylation calling, processing bisulfite sequenced, methylation-aware aligned BAM[0m
[32m    MethylationTypeCaller                        [31m(EXPERIMENTAL Tool) [36mIdentify methylated bases from bisulfite sequenced, methylation-aware BAMs[0m

[37m--------------------------------------------------------------------------------------
[0m[31mOther:                                           Miscellaneous tools, e.g. those that aid in data streaming[0m
[32m    CreateHadoopBamSplittingIndex                [31m(BETA Tool) [36mCreate a Hadoop BAM splitting index[0m
[32m    FifoBuffer (Picard)                          [36mProvides a large, FIFO buffer that can be used to buffer input and output streams between programs.[0m
[32m    GatherBQSRReports                            [36mGathers scattered BQSR recalibration reports into a single file[0m
[32m    GatherTranches                               [31m(BETA Tool) [36mGathers scattered VQSLOD tranches into a single file[0m
[32m    IndexFeatureFile                             [36mCreates an index for a feature file, e.g. VCF or BED file.[0m
[32m    ParallelCopyGCSDirectoryIntoHDFSSpark        [31m(BETA Tool) [36mParallel copy a file or directory from Google Cloud Storage into the HDFS file system used by Spark[0m
[32m    PrintBGZFBlockInformation                    [31m(EXPERIMENTAL Tool) [36mPrint information about the compressed blocks in a BGZF format file[0m
[32m    ReadAnonymizer                               [31m(EXPERIMENTAL Tool) [36mReplace bases in reads with reference bases.[0m
[32m    ReblockGVCF                                  [36mCondenses homRef blocks in a single-sample GVCF[0m

[37m--------------------------------------------------------------------------------------
[0m[31mRead Data Manipulation:                          Tools that manipulate read data in SAM, BAM or CRAM format[0m
[32m    AddCommentsToBam (Picard)                    [36mAdds comments to the header of a BAM file.[0m
[32m    AddOATag (Picard)                            [36mRecord current alignment information to OA tag.[0m
[32m    AddOrReplaceReadGroups (Picard)              [36mAssigns all the reads in a file to a single new read-group.[0m
[32m    AddOriginalAlignmentTags                     [31m(EXPERIMENTAL Tool) [36mAdds Original Alignment tag and original mate contig tag[0m
[32m    ApplyBQSR                                    [36mApply base quality score recalibration[0m
[32m    ApplyBQSRSpark                               [31m(BETA Tool) [36mApply base quality score recalibration on Spark[0m
[32m    BQSRPipelineSpark                            [31m(BETA Tool) [36mBoth steps of BQSR (BaseRecalibrator and ApplyBQSR) on Spark[0m
[32m    BamToBfq (Picard)                            [36mConverts a BAM file into a BFQ (binary fastq formatted) file[0m
[32m    BaseRecalibrator                             [36mGenerates recalibration table for Base Quality Score Recalibration (BQSR)[0m
[32m    BaseRecalibratorSpark                        [31m(BETA Tool) [36mGenerate recalibration table for Base Quality Score Recalibration (BQSR) on Spark[0m
[32m    BuildBamIndex (Picard)                       [36mGenerates a BAM index ".bai" file.  [0m
[32m    BwaAndMarkDuplicatesPipelineSpark            [31m(BETA Tool) [36mTakes name-sorted file and runs BWA and MarkDuplicates.[0m
[32m    BwaSpark                                     [31m(BETA Tool) [36mAlign reads to a given reference using BWA on Spark[0m
[32m    CleanSam (Picard)                            [36mCleans the provided SAM/BAM, soft-clipping beyond-end-of-reference alignments and setting MAPQ to 0 for unmapped reads[0m
[32m    ClipReads                                    [36mClip reads in a SAM/BAM/CRAM file[0m
[32m    CollectDuplicateMetrics (Picard)             [36mCollect Duplicate metrics from marked file.[0m
[32m    ConvertHeaderlessHadoopBamShardToBam         [31m(BETA Tool) [36mConvert a headerless BAM shard into a readable BAM[0m
[32m    DownsampleByDuplicateSet                     [31m(BETA Tool) [36mDiscard a set fraction of duplicate sets from a UMI-grouped bam[0m
[32m    DownsampleSam (Picard)                       [36mDownsample a SAM or BAM file.[0m
[32m    ExtractOriginalAlignmentRecordsByNameSpark   [31m(BETA Tool) [36mSubsets reads by name[0m
[32m    FastqToSam (Picard)                          [36mConverts a FASTQ file to an unaligned BAM or SAM file[0m
[32m    FilterSamReads (Picard)                      [36mSubsets reads from a SAM or BAM file by applying one of several filters.[0m
[32m    FixMateInformation (Picard)                  [36mVerify mate-pair information between mates and fix if needed.[0m
[32m    FixMisencodedBaseQualityReads                [36mFix Illumina base quality scores in a SAM/BAM/CRAM file[0m
[32m    GatherBamFiles (Picard)                      [36mConcatenate efficiently BAM files that resulted from a scattered parallel analysis[0m
[32m    LeftAlignIndels                              [36mLeft-aligns indels from reads in a SAM/BAM/CRAM file[0m
[32m    MarkDuplicates (Picard)                      [36mIdentifies duplicate reads.  [0m
[32m    MarkDuplicatesSpark                          [36mMarkDuplicates on Spark[0m
[32m    MarkDuplicatesWithMateCigar (Picard)         [36mIdentifies duplicate reads, accounting for mate CIGAR.  [0m
[32m    MergeBamAlignment (Picard)                   [36mMerge alignment data from a SAM or BAM with data in an unmapped BAM file.  [0m
[32m    MergeSamFiles (Picard)                       [36mMerges multiple SAM and/or BAM files into a single file.  [0m
[32m    PositionBasedDownsampleSam (Picard)          [36mDownsample a SAM or BAM file to retain a subset of the reads based on the reads location in each tile in the flowcell.[0m
[32m    PrintDistantMates                            [36mUnmaps reads with distant mates.[0m
[32m    PrintReads                                   [36mPrint reads in the SAM/BAM/CRAM file[0m
[32m    PrintReadsHeader                             [36mPrint the header from a SAM/BAM/CRAM file[0m
[32m    PrintReadsSpark                              [36mPrintReads on Spark[0m
[32m    ReorderSam (Picard)                          [36mReorders reads in a SAM or BAM file to match ordering in a second reference file.[0m
[32m    ReplaceSamHeader (Picard)                    [36mReplaces the SAMFileHeader in a SAM or BAM file.  [0m
[32m    RevertBaseQualityScores                      [36mRevert Quality Scores in a SAM/BAM/CRAM file[0m
[32m    RevertOriginalBaseQualitiesAndAddMateCigar (Picard)[36mReverts the original base qualities and adds the mate cigar tag to read-group BAMs[0m
[32m    RevertSam (Picard)                           [36mReverts SAM or BAM files to a previous state.  [0m
[32m    RevertSamSpark                               [31m(BETA Tool) [36mReverts SAM, BAM or CRAM files to a previous state.[0m
[32m    SamFormatConverter (Picard)                  [36mConvert a BAM file to a SAM file, or a SAM to a BAM[0m
[32m    SamToFastq (Picard)                          [36mConverts a SAM or BAM file to FASTQ.[0m
[32m    SamToFastqWithTags (Picard)                  [36mConverts a SAM or BAM file to FASTQ alongside FASTQs created from tags.[0m
[32m    SetNmAndUqTags (Picard)                      [36mDEPRECATED: Use SetNmMdAndUqTags instead.[0m
[32m    SetNmMdAndUqTags (Picard)                    [36mFixes the NM, MD, and UQ tags in a SAM file [0m
[32m    SimpleMarkDuplicatesWithMateCigar (Picard)   [31m(EXPERIMENTAL Tool) [36mExamines aligned records in the supplied SAM or BAM file to locate duplicate molecules.[0m
[32m    SortSam (Picard)                             [36mSorts a SAM or BAM file[0m
[32m    SortSamSpark                                 [31m(BETA Tool) [36mSortSam on Spark (works on SAM/BAM/CRAM)[0m
[32m    SplitNCigarReads                             [36mSplit Reads with N in Cigar[0m
[32m    SplitReads                                   [36mOutputs reads from a SAM/BAM/CRAM by read group, sample and library name[0m
[32m    SplitSamByLibrary (Picard)                   [36mSplits a SAM or BAM file into individual files by library[0m
[32m    SplitSamByNumberOfReads (Picard)             [36mSplits a SAM or BAM file to multiple BAMs.[0m
[32m    UmiAwareMarkDuplicatesWithMateCigar (Picard) [31m(EXPERIMENTAL Tool) [36mIdentifies duplicate reads using information from read positions and UMIs. [0m
[32m    UnmarkDuplicates                             [36mClears the 0x400 duplicate SAM flag[0m

[37m--------------------------------------------------------------------------------------
[0m[31mReference:                                       Tools that analyze and manipulate FASTA format references[0m
[32m    BaitDesigner (Picard)                        [36mDesigns oligonucleotide baits for hybrid selection reactions.[0m
[32m    BwaMemIndexImageCreator                      [36mCreate a BWA-MEM index image file for use with GATK BWA tools[0m
[32m    ComposeSTRTableFile                          [36mComposes a genome-wide STR location table used for DragSTR model auto-calibration[0m
[32m    CountBasesInReference                        [36mCount the numbers of each base in a reference file[0m
[32m    CreateSequenceDictionary (Picard)            [36mCreates a sequence dictionary for a reference sequence.  [0m
[32m    ExtractSequences (Picard)                    [36mSubsets intervals from a reference sequence to a new FASTA file.[0m
[32m    FastaAlternateReferenceMaker                 [36mCreate an alternative reference by combining a fasta with a vcf.[0m
[32m    FastaReferenceMaker                          [36mCreate snippets of a fasta file[0m
[32m    FindBadGenomicKmersSpark                     [31m(BETA Tool) [36mIdentifies sequences that occur at high frequency in a reference[0m
[32m    NonNFastaSize (Picard)                       [36mCounts the number of non-N bases in a fasta file.[0m
[32m    NormalizeFasta (Picard)                      [36mNormalizes lines of sequence in a FASTA file to be of the same length.[0m
[32m    ScatterIntervalsByNs (Picard)                [36mWrites an interval list created by splitting a reference at Ns.[0m
[32m    ShiftFasta                                   [31m(BETA Tool) [36mCreates a shifted fasta file and shift_back file[0m

[37m--------------------------------------------------------------------------------------
[0m[31mShort Variant Discovery:                         Tools that perform variant calling and genotyping for short variants (SNPs, SNVs and Indels)[0m
[32m    CalibrateDragstrModel                        [36mestimates the parameters for the DRAGstr model[0m
[32m    CombineGVCFs                                 [36mMerges one or more HaplotypeCaller GVCF files into a single GVCF with appropriate annotations[0m
[32m    GenomicsDBImport                             [36mImport VCFs to GenomicsDB[0m
[32m    GenotypeGVCFs                                [36mPerform joint genotyping on one or more samples pre-called with HaplotypeCaller[0m
[32m    GnarlyGenotyper                              [31m(BETA Tool) [36mPerform "quick and dirty" joint genotyping on one or more samples pre-called with HaplotypeCaller[0m
[32m    HaplotypeCaller                              [36mCall germline SNPs and indels via local re-assembly of haplotypes[0m
[32m    HaplotypeCallerSpark                         [31m(BETA Tool) [36mHaplotypeCaller on Spark[0m
[32m    LearnReadOrientationModel                    [36mGet the maximum likelihood estimates of artifact prior probabilities in the orientation bias mixture model filter[0m
[32m    MergeMutectStats                             [36mMerge the stats output by scatters of a single Mutect2 job[0m
[32m    Mutect2                                      [36mCall somatic SNVs and indels via local assembly of haplotypes[0m
[32m    ReadsPipelineSpark                           [31m(BETA Tool) [36mRuns BWA (if specified), MarkDuplicates, BQSR, and HaplotypeCaller on unaligned or aligned reads to generate a VCF.[0m

[37m--------------------------------------------------------------------------------------
[0m[31mStructural Variant Discovery:                    Tools that detect structural variants        [0m
[32m    CollectSVEvidence                            [31m(BETA Tool) [36mGathers paired-end and split read evidence files for use in the GATK-SV pipeline.[0m
[32m    CpxVariantReInterpreterSpark                 [31m(BETA Tool) [36m(Internal) Tries to extract simple variants from a provided GATK-SV CPX.vcf[0m
[32m    DiscoverVariantsFromContigAlignmentsSAMSpark [31m(BETA Tool) [36m(Internal) Examines aligned contigs from local assemblies and calls structural variants[0m
[32m    ExtractSVEvidenceSpark                       [31m(BETA Tool) [36m(Internal) Extracts evidence of structural variations from reads[0m
[32m    FindBreakpointEvidenceSpark                  [31m(BETA Tool) [36m(Internal) Produces local assemblies of genomic regions that may harbor structural variants[0m
[32m    JointGermlineCNVSegmentation                 [31m(BETA Tool) [36mCombine segmented gCNV VCFs.[0m
[32m    PrintSVEvidence                              [31m(EXPERIMENTAL Tool) [36mPrints SV evidence records[0m
[32m    StructuralVariantDiscoverer                  [31m(BETA Tool) [36m(Internal) Examines aligned contigs from local assemblies and calls structural variants or their breakpoints[0m
[32m    StructuralVariationDiscoveryPipelineSpark    [31m(BETA Tool) [36mRuns the structural variation discovery workflow on a single sample[0m
[32m    SvDiscoverFromLocalAssemblyContigAlignmentsSpark    [31m(BETA Tool) [36m(Internal) Examines aligned contigs from local assemblies and calls structural variants or their breakpoints[0m

[37m--------------------------------------------------------------------------------------
[0m[31mVariant Evaluation and Refinement:               Tools that evaluate and refine variant calls, e.g. with annotations not offered by the engine[0m
[32m    AlleleFrequencyQC                            [31m(BETA Tool) [36mGeneral-purpose tool for variant evaluation (% in dbSNP, genotype concordance, Ti/Tv ratios, and a lot more)[0m
[32m    AnnotateVcfWithBamDepth                      [36m(Internal) Annotate a vcf with a bam's read depth at each variant locus[0m
[32m    AnnotateVcfWithExpectedAlleleFraction        [36m(Internal) Annotate a vcf with expected allele fractions in pooled sequencing[0m
[32m    CalculateGenotypePosteriors                  [36mCalculate genotype posterior probabilities given family and/or known population genotypes[0m
[32m    CalculateMixingFractions                     [36m(Internal) Calculate proportions of different samples in a pooled bam[0m
[32m    Concordance                                  [36mEvaluate concordance of an input VCF against a validated truth VCF[0m
[32m    CountFalsePositives                          [31m(BETA Tool) [36mCount PASS variants[0m
[32m    CountVariants                                [36mCounts variant records in a VCF file, regardless of filter status.[0m
[32m    CountVariantsSpark                           [36mCountVariants on Spark[0m
[32m    EvaluateInfoFieldConcordance                 [31m(BETA Tool) [36mEvaluate concordance of info fields in an input VCF against a validated truth VCF[0m
[32m    FilterFuncotations                           [31m(EXPERIMENTAL Tool) [36mFilter variants based on clinically-significant Funcotations.[0m
[32m    FindMendelianViolations (Picard)             [36mFinds mendelian violations of all types within a VCF[0m
[32m    FuncotateSegments                            [31m(BETA Tool) [36mFunctional annotation for segment files.  The output formats are not well-defined and subject to change.[0m
[32m    Funcotator                                   [36mFunctional Annotator[0m
[32m    FuncotatorDataSourceDownloader               [36mData source downloader for Funcotator.[0m
[32m    GenotypeConcordance (Picard)                 [36mCalculates the concordance between genotype data of one sample in each of two VCFs - truth (or reference) vs. calls.[0m
[32m    MergeMutect2CallsWithMC3                     [31m(EXPERIMENTAL Tool) [36mUNSUPPORTED.  FOR EVALUATION ONLY. Merge M2 calls with MC[0m
[32m    ReferenceBlockConcordance                    [36mEvaluate GVCF reference block concordance of an input GVCF against a truth GVCF[0m
[32m    ValidateBasicSomaticShortMutations           [31m(EXPERIMENTAL Tool) [36mCheck variants against tumor-normal bams representing the same samples, though not the ones from the actual calls.[0m
[32m    ValidateVariants                             [36mValidate VCF[0m
[32m    VariantEval                                  [31m(BETA Tool) [36mGeneral-purpose tool for variant evaluation (% in dbSNP, genotype concordance, Ti/Tv ratios, and a lot more)[0m
[32m    VariantsToTable                              [36mExtract fields from a VCF file to a tab-delimited table[0m

[37m--------------------------------------------------------------------------------------
[0m[31mVariant Filtering:                               Tools that filter variants by annotating the FILTER column[0m
[32m    ApplyVQSR                                    [36m Apply a score cutoff to filter variants based on a recalibration table[0m
[32m    CNNScoreVariants                             [36mApply a Convolutional Neural Net to filter annotated variants[0m
[32m    CNNVariantTrain                              [31m(EXPERIMENTAL Tool) [36mTrain a CNN model for filtering variants[0m
[32m    CNNVariantWriteTensors                       [31m(EXPERIMENTAL Tool) [36mWrite variant tensors for training a CNN to filter variants[0m
[32m    CreateSomaticPanelOfNormals                  [31m(BETA Tool) [36mMake a panel of normals for use with Mutect2[0m
[32m    FilterAlignmentArtifacts                     [31m(EXPERIMENTAL Tool) [36mFilter alignment artifacts from a vcf callset.[0m
[32m    FilterMutectCalls                            [36mFilter somatic SNVs and indels called by Mutect2[0m
[32m    FilterVariantTranches                        [36mApply tranche filtering[0m
[32m    FilterVcf (Picard)                           [36mHard filters a VCF.[0m
[32m    MTLowHeteroplasmyFilterTool                  [36mIf too many low het sites, filter all low het sites[0m
[32m    NuMTFilterTool                               [36mUses the median autosomal coverage and the allele depth to determine whether the allele might be a NuMT[0m
[32m    VariantFiltration                            [36mFilter variant calls based on INFO and/or FORMAT annotations[0m
[32m    VariantRecalibrator                          [36mBuild a recalibration model to score variant quality for filtering purposes[0m

[37m--------------------------------------------------------------------------------------
[0m[31mVariant Manipulation:                            Tools that manipulate variant call format (VCF) data[0m
[32m    FixVcfHeader (Picard)                        [36mReplaces or fixes a VCF header.[0m
[32m    GatherVcfs (Picard)                          [36mGathers multiple VCF files from a scatter operation into a single VCF file[0m
[32m    GatherVcfsCloud                              [31m(BETA Tool) [36mGathers multiple VCF files from a scatter operation into a single VCF file[0m
[32m    LeftAlignAndTrimVariants                     [36mLeft align and trim vairants[0m
[32m    LiftoverVcf (Picard)                         [36mLifts over a VCF file from one reference build to another.  [0m
[32m    MakeSitesOnlyVcf (Picard)                    [36mCreates a VCF that contains all the site-level information for all records in the input VCF but no genotype information.[0m
[32m    MakeVcfSampleNameMap (Picard)                [36mCreates a TSV from sample name to VCF/GVCF path, with one line per input.[0m
[32m    MergeVcfs (Picard)                           [36mCombines multiple variant files into a single variant file[0m
[32m    PrintVariantsSpark                           [36mPrints out variants from the input VCF.[0m
[32m    RemoveNearbyIndels                           [36m(Internal) Remove indels from the VCF file that are close to each other.[0m
[32m    RenameSampleInVcf (Picard)                   [36mRenames a sample within a VCF or BCF.[0m
[32m    SelectVariants                               [36mSelect a subset of variants from a VCF file[0m
[32m    SortVcf (Picard)                             [36mSorts one or more VCF files.  [0m
[32m    SplitVcfs (Picard)                           [36mSplits SNPs and INDELs into separate files.  [0m
[32m    UpdateVCFSequenceDictionary                  [36mUpdates the sequence dictionary in a variant file.[0m
[32m    UpdateVcfSequenceDictionary (Picard)         [36mTakes a VCF and a second file that contains a sequence dictionary and updates the VCF with the new sequence dictionary.[0m
[32m    VariantAnnotator                             [36mTool for adding annotations to VCF files[0m
[32m    VcfFormatConverter (Picard)                  [36mConverts VCF to BCF or BCF to VCF.  [0m
[32m    VcfToIntervalList (Picard)                   [36mConverts a VCF or BCF file to a Picard Interval List[0m

[37m--------------------------------------------------------------------------------------
[0m
Tool returned:
0

Resource usage statistics from testing gatk4-spark:
   Process count: 4
   CPU time: Sys=0:00:00.2, User=0:00:03.8
   Memory: 213.3M
   Disk usage: 20B
   Time elapsed: 0:00:06.2


TEST END: gatk4-spark-4.2.2.0-hdfd78af_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package              Version  Build               Channel                                    Size
─────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────

  + arpack               3.7.0  hff0ca13_2          conda-forge/osx-64                       204 KB
  + biopython             1.79  py38h96a0964_0      conda-forge/osx-64                         3 MB
  + boost               1.70.0  py38hbf1eeb5_1      conda-forge/osx-64                       347 KB
  + boost-cpp           1.70.0  hd59e818_1          conda-forge/osx-64                        19 MB
  + bzip2                1.0.8  h0d85af4_4          conda-forge/osx-64                       Cached
  + ca-certificates  2021.5.30  h033912b_0          conda-forge/osx-64                       Cached
  + cd-hit               4.8.1  hfbae3c0_3          bioconda/osx-64                          193 KB
  + colorama             0.4.4  pyh9f0ad1d_0        conda-forge/noarch                       Cached
  + fastani               1.32  he69ab0f_0          bioconda/osx-64                          151 KB
  + gawk                 5.1.0  h8a989fb_0          conda-forge/osx-64                         1 MB
  + gettext           0.19.8.1  h7937167_1005       conda-forge/osx-64                       Cached
  + glpk                  4.65  h0f52abe_1004       conda-forge/osx-64                         1 MB
  + gmp                  6.2.1  h2e338ed_0          conda-forge/osx-64                       Cached
  + icu                   58.2  h0a44026_1000       conda-forge/osx-64                        22 MB
  + libblas              3.8.0  14_openblas         conda-forge/osx-64                        10 KB
  + libcblas             3.8.0  14_openblas         conda-forge/osx-64                        10 KB
  + libcxx              12.0.1  habf9029_0          conda-forge/osx-64                       Cached
  + libffi                 3.3  h046ec9c_2          conda-forge/osx-64                       Cached
  + libgfortran          4.0.0  7_5_0_h1a10cd1_23   conda-forge/osx-64                        19 KB
  + libgfortran4         7.5.0  h1a10cd1_23         conda-forge/osx-64                         1 MB
  + libiconv              1.16  haf1e3a3_0          conda-forge/osx-64                       Cached
  + libidn2              2.3.2  h0d85af4_0          conda-forge/osx-64                       101 KB
  + liblapack            3.8.0  14_openblas         conda-forge/osx-64                        10 KB
  + libopenblas          0.3.7  h3d69b6c_4          conda-forge/osx-64                         8 MB
  + libunistring        0.9.10  h0d85af4_0          conda-forge/osx-64                         1 MB
  + libxml2             2.9.12  hcdb78fc_0          pkgs/main/osx-64                           1 MB
  + llvm-openmp          8.0.1  h770b8ee_0          conda-forge/osx-64                       253 KB
  + metis                5.1.0  h2e338ed_1006       conda-forge/osx-64                         4 MB
  + mmseqs2           12.113e3  he641558_1          bioconda/osx-64                            2 MB
  + motulizer            0.3.1  pyhdfd78af_2        /Users/runner/conda/conda-bld/osx-64      55 KB
  + mpfr                 4.1.0  h0f52abe_1          conda-forge/osx-64                       Cached
  + ncurses                6.2  h2e338ed_4          conda-forge/osx-64                       Cached
  + numpy               1.21.2  py38h49b9922_0      conda-forge/osx-64                         6 MB
  + openmp               8.0.1  0                   conda-forge/osx-64                         8 KB
  + openssl             1.1.1l  h0d85af4_0          conda-forge/osx-64                       Cached
  + pip                 21.2.4  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + python              3.8.10  h0e5c897_0_cpython  conda-forge/osx-64                        13 MB
  + python-igraph        0.9.6  py38h3dab7cd_0      conda-forge/osx-64                         1 MB
  + python_abi             3.8  2_cp38              conda-forge/osx-64                         4 KB
  + readline               8.1  h05e3726_0          conda-forge/osx-64                       Cached
  + setuptools          58.0.3  py38h50d1736_0      conda-forge/osx-64                       963 KB
  + sqlite              3.36.0  h23a322b_0          conda-forge/osx-64                       Cached
  + suitesparse         5.10.1  h7aff33d_1          conda-forge/osx-64                         2 MB
  + tbb               2021.3.0  h940c156_0          conda-forge/osx-64                       162 KB
  + texttable            1.6.4  pyhd8ed1ab_0        conda-forge/noarch                        16 KB
  + tk                  8.6.11  h5dbffcc_1          conda-forge/osx-64                       Cached
  + tqdm                4.62.2  pyhd8ed1ab_0        conda-forge/noarch                       Cached
  + wget                1.20.3  h52ee1ee_0          conda-forge/osx-64                       813 KB
  + wheel               0.37.0  pyhd8ed1ab_1        conda-forge/noarch                       Cached
  + xz                   5.2.5  haf1e3a3_1          conda-forge/osx-64                       Cached
  + zlib                1.2.11  h7795811_1010       conda-forge/osx-64                       Cached

  Summary:

  Install: 51 packages

  Total download: 89 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: motulizer-0.3.1-pyhdfd78af_2.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/motulizer_1631112289573/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold


The following NEW packages will be INSTALLED:

    arpack:          3.7.0-hff0ca13_2          conda-forge
    biopython:       1.79-py38h96a0964_0       conda-forge
    boost:           1.70.0-py38hbf1eeb5_1     conda-forge
    boost-cpp:       1.70.0-hd59e818_1         conda-forge
    bzip2:           1.0.8-h0d85af4_4          conda-forge
    ca-certificates: 2021.5.30-h033912b_0      conda-forge
    cd-hit:          4.8.1-hfbae3c0_3          bioconda   
    colorama:        0.4.4-pyh9f0ad1d_0        conda-forge
    fastani:         1.32-he69ab0f_0           bioconda   
    gawk:            5.1.0-h8a989fb_0          conda-forge
    gettext:         0.19.8.1-h7937167_1005    conda-forge
    glpk:            4.65-h0f52abe_1004        conda-forge
    gmp:             6.2.1-h2e338ed_0          conda-forge
    icu:             58.2-h0a44026_1000        conda-forge
    libblas:         3.8.0-14_openblas         conda-forge
    libcblas:        3.8.0-14_openblas         conda-forge
    libcxx:          12.0.1-habf9029_0         conda-forge
    libffi:          3.3-h046ec9c_2            conda-forge
    libgfortran:     4.0.0-7_5_0_h1a10cd1_23   conda-forge
    libgfortran4:    7.5.0-h1a10cd1_23         conda-forge
    libiconv:        1.16-haf1e3a3_0           conda-forge
    libidn2:         2.3.2-h0d85af4_0          conda-forge
    liblapack:       3.8.0-14_openblas         conda-forge
    libopenblas:     0.3.7-h3d69b6c_4          conda-forge
    libunistring:    0.9.10-h0d85af4_0         conda-forge
    libxml2:         2.9.12-hcdb78fc_0                    
    llvm-openmp:     8.0.1-h770b8ee_0          conda-forge
    metis:           5.1.0-h2e338ed_1006       conda-forge
    mmseqs2:         12.113e3-he641558_1       bioconda   
    motulizer:       0.3.1-pyhdfd78af_2        local      
    mpfr:            4.1.0-h0f52abe_1          conda-forge
    ncurses:         6.2-h2e338ed_4            conda-forge
    numpy:           1.21.2-py38h49b9922_0     conda-forge
    openmp:          8.0.1-0                   conda-forge
    openssl:         1.1.1l-h0d85af4_0         conda-forge
    pip:             21.2.4-pyhd8ed1ab_0       conda-forge
    python:          3.8.10-h0e5c897_0_cpython conda-forge
    python-igraph:   0.9.6-py38h3dab7cd_0      conda-forge
    python_abi:      3.8-2_cp38                conda-forge
    readline:        8.1-h05e3726_0            conda-forge
    setuptools:      58.0.3-py38h50d1736_0     conda-forge
    sqlite:          3.36.0-h23a322b_0         conda-forge
    suitesparse:     5.10.1-h7aff33d_1         conda-forge
    tbb:             2021.3.0-h940c156_0       conda-forge
    texttable:       1.6.4-pyhd8ed1ab_0        conda-forge
    tk:              8.6.11-h5dbffcc_1         conda-forge
    tqdm:            4.62.2-pyhd8ed1ab_0       conda-forge
    wget:            1.20.3-h52ee1ee_0         conda-forge
    wheel:           0.37.0-pyhd8ed1ab_1       conda-forge
    xz:              5.2.5-haf1e3a3_1          conda-forge
    zlib:            1.2.11-h7795811_1010      conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/motulizer_1631112289573/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold
export SRC_DIR=/Users/runner/conda/conda-bld/motulizer_1631112289573/test_tmp
import: 'mOTUlizer'
import: 'mOTUlizer.bin'
import: 'mOTUlizer.classes'
import: 'mOTUlizer.scripts'
import: 'mOTUlizer'
import: 'mOTUlizer.bin'
import: 'mOTUlizer.classes'
import: 'mOTUlizer.scripts'
usage: mOTUlize [-h] [--output [OUTPUT]] [--force] [--checkm [CHECKM]]
                [--similarities [SIMILARITIES]] [--fnas [FNAS [FNAS ...]]]
                [--prefix [PREFIX]] [--MAG-completeness [MAG_COMPLETENESS]]
                [--MAG-contamination [MAG_CONTAMINATION]]
                [--SUB-completeness [SUB_COMPLETENESS]]
                [--SUB-contamination [SUB_CONTAMINATION]]
                [--similarity-cutoff [SIMILARITY_CUTOFF]] [--threads THREADS]
                [--keep-simi-file [KEEP_SIMI_FILE]] [--txt] [--long]
                [--version]

From a set of genomes, makes metagenomic Operational Taxonomic Units (mOTUs).
By default it makes a graph of 95% (reciprocal) ANI (with fastANI) connected
MAGs (with completeness > 40%, contamination < 5%). The mOTUs will be the
connected components of this graph, to which smaller "SUBs" with ANI > 95% are
recruited. If similarities provided, it should be a TAB-separated file with
columns as query, subject and similarity (in percent, e.g. [0-100]) if you
also provide fasta-files (for stats purpouses) query and names should
correspond to the fasta-files you provide. If the columns are file names, the
folders are removed (mainly so it can read fastANI output directly).

optional arguments:
  -h, --help            show this help message and exit
  --output [OUTPUT], -o [OUTPUT]
                        send output to this file
  --force, -f           force execution (overwritting existing files)
  --checkm [CHECKM], -k [CHECKM]
                        checkm file (or whatever you want to use as
                        completness), if not provided, all genomes are assumed
                        to be seed MAG (e.g complete enough)
  --similarities [SIMILARITIES], -I [SIMILARITIES]
                        file containing similarities between MAGs, if not
                        provided, will use fastANI to compute one
  --fnas [FNAS [FNAS ...]], -F [FNAS [FNAS ...]]
                        list of nucleotide fasta-files of MAGs or whatnot
  --prefix [PREFIX], -n [PREFIX]
                        prefix for the mOTU names, default : mOTU_
  --MAG-completeness [MAG_COMPLETENESS], --MC [MAG_COMPLETENESS], -M [MAG_COMPLETENESS]
                        completeness cutoff for seed MAGs, default : 40
  --MAG-contamination [MAG_CONTAMINATION], --Mc [MAG_CONTAMINATION], -m [MAG_CONTAMINATION]
                        contamination cutoff for seed MAGs, default : 5
  --SUB-completeness [SUB_COMPLETENESS], --SC [SUB_COMPLETENESS], -S [SUB_COMPLETENESS]
                        completeness cutoff for recruited SUBs, default : 0
  --SUB-contamination [SUB_CONTAMINATION], --Sc [SUB_CONTAMINATION], -s [SUB_CONTAMINATION]
                        contamination cutoff for recruited SUBs, default : 100
  --similarity-cutoff [SIMILARITY_CUTOFF], -i [SIMILARITY_CUTOFF]
                        distance cutoff for making the graph, default : 95
  --threads THREADS, -t THREADS
                        number of threads (default all, e.g. 3)
  --keep-simi-file [KEEP_SIMI_FILE], -K [KEEP_SIMI_FILE]
                        keep generated similarity file if '--similarities' is
                        not provided, does nothing if '--similarity' is
                        provided
  --txt, -T             the '--fnas' switch indicates a file with paths
  --long                longform output, a JSON-file with a lot more
                        information (might be cryptic...)
  --version, -v         get version

Let's do this
usage: mOTUpan.py [-h] [--output OUTPUT] [--force] [--checkm CHECKM]
                  [--seed [SEED]] [--length_seed] [--random_seed]
                  [--genome2gene_clusters_only] [--precluster]
                  [--faas [FAAS [FAAS ...]]] [--txt]
                  [--gene_clusters_file [GENE_CLUSTERS_FILE]] [--name NAME]
                  [--long] [--boots BOOTS] [--max_iter MAX_ITER]
                  [--threads THREADS] [--version]

From a buch of amino-acid sequences or COG-sets, computes concensus AA/COG
sets. Returns all to stdout by default.

optional arguments:
  -h, --help            show this help message and exit
  --output OUTPUT, -o OUTPUT
                        send output to this file
  --force, -f           force execution answering default answers
  --checkm CHECKM, -k CHECKM
                        checkm file if you want to seed completnesses with it,
                        accepts concatenations of multiple checkm-files, check
                        manual for more formating options
  --seed [SEED], -s [SEED]
                        seed completeness, advice a number around 90 (95
                        default), this is the default completeness prior
  --length_seed, --ls   seed completeness by length fraction [0-100]
  --random_seed, --rs   random seed completeness between 5 and 95 percent
  --genome2gene_clusters_only
                        returns genome2gene_clusters only
  --precluster          precluster proteomes with cd-hit, mainly for legacy
                        reasons, mmseqs2 is faaaaaast
  --faas [FAAS [FAAS ...]], -F [FAAS [FAAS ...]]
                        list of amino-acids faas of MAGs or whatnot, or a text
                        file with paths to the faas (with the --txt switch)
  --txt                 the '--faas' switch indicates a file with paths
  --gene_clusters_file [GENE_CLUSTERS_FILE], --gene_clusterss [GENE_CLUSTERS_FILE], -c [GENE_CLUSTERS_FILE]
                        file with COG-sets (see doc)
  --name NAME, -n NAME  if you want to name this bag of bins
  --long                longform output, a JSON-file with a lot more
                        information (might be cryptic...)
  --boots BOOTS, -b BOOTS
                        number of bootstraps for fpr and recall estimate
                        (default 0), careful, slows down program linearly
  --max_iter MAX_ITER, -m MAX_ITER
                        max number of iterations (set to one if you have only
                        few traits, e.g. re-estimation of completeness is
                        nonsensical)
  --threads THREADS, -t THREADS
                        number of threads (default all, e.g. 3), only gene
                        clustering is multithreaded right now, the rest is to
                        come
  --version, -v         get version

Let's do this
usage: mOTUconverts.py [-h] [--output [OUTPUT]] [--gene2genome [GENE2GENOME]]
                       [--in_type [IN_TYPE]] [--version] [--list] [--count]
                       [INPUT]

Converts output of diverse software generatig COGs, or genetically encoded
traits into a genome2gene_clusters-JSON file useable by mOTUpan

positional arguments:
  INPUT                 input file(s), check '--list' for specifics

optional arguments:
  -h, --help            show this help message and exit
  --output [OUTPUT], -o [OUTPUT]
                        send output to this file defaults to stdout
  --gene2genome [GENE2GENOME]
                        if gene names not '${genome_name}_[0-9]*', a tab
                        separated file with id of gene in the fist column and
                        a semi-column separated second column containing
                        genomes_id of genomes containing it
  --in_type [IN_TYPE], -I [IN_TYPE]
                        software generating the input
  --version, -v         get version and exit
  --list, -l            list tools available and exit
  --count, -c           count the occurences of COG/trait

Let's do this

Resource usage statistics from testing motulizer:
   Process count: 4
   CPU time: Sys=0:00:00.2, User=0:00:00.5
   Memory: 38.3M
   Disk usage: 20B
   Time elapsed: 0:00:08.2


TEST END: motulizer-0.3.1-pyhdfd78af_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


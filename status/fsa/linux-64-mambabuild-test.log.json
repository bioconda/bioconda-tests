  Package          Version  Build          Channel                                   Size
───────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge    conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu          conda-forge/linux-64                    Cached
  + fsa             1.15.9  h2e03b76_2     /home/vsts/conda/conda-bld/linux-64     796 KB
  + libgcc-ng       11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8     conda-forge/linux-64                    Cached
  + libstdcxx-ng    11.1.0  h56837e0_8     conda-forge/linux-64                    Cached
  + zlib            1.2.11  h516909a_1010  conda-forge/linux-64                    Cached

  Summary:

  Install: 7 packages

  Total download: 796 KB

───────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: fsa-1.15.9-h2e03b76_2.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/fsa_1630941690484/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge      conda-forge
    _openmp_mutex: 4.5-1_gnu            conda-forge
    fsa:           1.15.9-h2e03b76_2    local      
    libgcc-ng:     11.1.0-hc902ee8_8    conda-forge
    libgomp:       11.1.0-hc902ee8_8    conda-forge
    libstdcxx-ng:  11.1.0-h56837e0_8    conda-forge
    zlib:          1.2.11-h516909a_1010 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/fsa_1630941690484/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehol
export SRC_DIR=/home/vsts/conda/conda-bld/fsa_1630941690484/test_tmp
fsa - Distance-based alignment of DNA, RNA and proteins.
Usage: fsa [options] <sequence file(s)>

Command-line options (righthandmost options take precedence)
------------------------------------------------------------
-h,-help,--help                   display this message
-v,--version                      display version

Logging options
---------------
--log <string>                    turn on diagnostic logging (-loghelp shows syntax)
--logfile <file>                  log to file
--logcopy <file>                  log to file and standard error
--logtime                         timestamp standard error (logfile stamped automatically)
--logxml                          (default) add XML timestamps (--nologxml to disable)
--logerr                          log on standard error (default)

Output options
--------------
--stockholm                       output Stockholm alignments (default is multi-FASTA format)
--gui                             record alignment & statistical model for interactive Java GUI
--write-params                    write learned emission distributions (substitution matrices) to disk
--write-posteriors                write learned pairwise posterior alignment probability matrices to disk

Parallelization options
-----------------------
(Parallelization not available; please see the manual for more information.)

Database options
----------------
(Database not available; please see the manual for more information.)

Pair HMM model options
----------------------
--nucprot                         align input nucleotide sequences (must all be nucleotide) in protein space
--indel2                          (default) use two sets of indel states in Pair HMM (use --noindel2 to use 1 set only)
--gapopen1 <real>                 initial gap-open probability (for set 1 of indel states)
--gapextend1 <real>               initial gap-extend probability (for set 1 of indel states)
--gapopen2 <real>                 initial gap-open probability (for set 2 of indel states)
--gapextend2 <real>               initial gap-extend probability (for set 2 of indel states)
--model <integer>                 initial substitution model: 0 = Jukes-Cantor, 1 = Tamura-Nei / BLOSUM62-like (proteins) (default is 1)
--time <real>                     Jukes-Cantor/Tamura-Nei evolutionary time parameter (default is 0.4)
--alphar <real>                   Tamura-Nei rate alpha_R (transition: purine) (default is 1.3)
--alphay <real>                   Tamura-Nei rate alpha_Y (transition: pyrimidine) (default is 1.3)
--beta <real>                     Tamura-Nei rate beta (transversion) (default is 1)
--load-probs <string>             load pairwise posterior probabilities from a file rather than performing inference with Pair HMM

Parameter estimation options
----------------------------
--learngap                        (default) estimate indel probabilities for each pair of sequences (--nolearngap to disable) (--nolearngap to disable)
--learnemit-bypair                (default for DNA and RNA) estimate emission probabilities for each pair of sequences (--nolearnemit-bypair to disable)
--learnemit-all                   (default for proteins) estimate emission probabilities averaged over all sequences (--nolearnemit-all to disable)
--nolearn                         disable ALL parameter learning (use ProbCons defaults)
--regularize                      (default) regularize learned emission and gap probabilities with Dirichlet prior (--noregularize to disable)
--regularization-gapscale <real>  scaling factor for transition prior
--regularization-emitscale <real> scaling factor for emission Dirichlet prior
--mininc <real>                   minimum fractional increase in log-likelihood per round of EM (default is 0.1)
--maxrounds <integer>             maximum number of iterations of EM (default is 3)
--mingapdata <integer>            minimum amount of sequence data (# of aligned pairs of characters) for training gap probs
--minemitdata <integer>           minimum amount of sequence data (# of aligned pairs of characters) for training emission probs

Multiple alignment options: sequence annealing
----------------------------------------------
--refinement <integer>            number of iterative refinement steps (default is unlimited; 0 for none)
--maxsn                           maximum sensitivity (instead of highest accuracy)
--gapfactor <real>                gap factor; 0 for highest sensitivity (the internal effective minimum is 0.01); >1 for higher specificity (default is 1)
--dynamicweights                  (default) enable dynamic edge re-weighting (--nodynamicweights to disable)
--treeweights <string>            weights for sequence pairs based on a tree
--require-homology                require that there be some detectable homology between all input sequences

Alignment speedup options: many sequences
-----------------------------------------
--fast                            fast alignment: use 5 * Erdos-Renyi threshold percent of sequence pairs for alignment and 2 * for learning
--refalign                        alignment to a reference sequence only (reference must be first sequence in file)
--mst-min <integer>               build --mst-min minimum spanning trees on input sequences for pairwise comparisons (default is 3)
--mst-max <integer>               build --mst-max maximum spanning trees on input sequences for pairwise comparisons (default is 0)
--mst-palm <integer>              build --mst-palm minimum spanning palm trees on input sequences for pairwise comparisons (default is 0)
--degree <integer>                use --degree number of pairwise comparisons between closest sequences (default is 0)
--kmer <integer>                  length of k-mers to use when determining sequence similarity
--alignment-fraction <real>       randomized fraction of all (n choose 2) pairs of sequences to consider during alignment inference (default is 1)
--alignment-number <integer>      total number of (randomized) pairs of sequences to consider during alignment inference

Alignment speedup options: long sequences (MUMmer)
--------------------------------------------------
(MUMmer not available; please see the manual for more information.)

Alignment speedup options: long sequences (exonerate)
-----------------------------------------------------
(exonerate not available; please see the manual for more information.)

Alignment speedup options: long sequences (Mercator)
----------------------------------------------------
--mercator <string>               input Mercator constraints

Memory savings
--------------
--maxram <integer>                maximum RAM to use (in megabytes) (default is 5562)
--bandwidth <integer>             banding (default is no banding)
--minprob <real>                  minimum posterior probability to store (default is 0.01)


Input sequence file(s) must be in FASTA format.

FSA attempts to automatically figure out appropriate settings;
you can override its automated choices with the above options.

Please contact the FSA team at fsa@math.berkeley.edu with any questions or comments.


Resource usage statistics from testing fsa:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.5M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: fsa-1.15.9-h2e03b76_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


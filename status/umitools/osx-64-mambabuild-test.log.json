Updating build index: /Users/runner/conda/conda-bld

TEST START: umitools-0.3.4-py37_1.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/tmp3430xivw/info/recipe/conda_build_config.yaml
  Package                 Version  Build                 Channel                                    Size
──────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
──────────────────────────────────────────────────────────────────────────────────────────────────────────

  + bzip2                   1.0.8  h0d85af4_4            conda-forge/osx-64                       Cached
  + c-ares                 1.17.2  h0d85af4_0            conda-forge/osx-64                       Cached
  + ca-certificates     2021.5.30  h033912b_0            conda-forge/osx-64                       Cached
  + certifi             2021.5.30  py37hf985489_0        conda-forge/osx-64                       141 KB
  + cycler                 0.10.0  py_2                  conda-forge/noarch                       Cached
  + decorator               4.4.2  py_0                  conda-forge/noarch                       Cached
  + editdistance            0.5.3  py37h54c7649_3        conda-forge/osx-64                        24 KB
  + freetype               2.10.4  h4cff582_1            conda-forge/osx-64                       Cached
  + jbig                      2.1  h0d85af4_2003         conda-forge/osx-64                       Cached
  + jpeg                       9d  hbcb3906_0            conda-forge/osx-64                       Cached
  + kiwisolver              1.3.2  py37h737db71_0        conda-forge/osx-64                        57 KB
  + krb5                   1.19.2  hcfbf3a7_0            conda-forge/osx-64                       Cached
  + lcms2                    2.12  h577c468_0            conda-forge/osx-64                       Cached
  + lerc                    2.2.1  h046ec9c_0            conda-forge/osx-64                       Cached
  + libblas                 3.9.0  11_osx64_openblas     conda-forge/osx-64                       Cached
  + libcblas                3.9.0  11_osx64_openblas     conda-forge/osx-64                       Cached
  + libcurl                7.78.0  hf45b732_0            conda-forge/osx-64                       Cached
  + libcxx                 12.0.1  habf9029_0            conda-forge/osx-64                       Cached
  + libdeflate                1.7  h35c211d_5            conda-forge/osx-64                       Cached
  + libedit          3.1.20191231  h0678c8f_2            conda-forge/osx-64                       Cached
  + libev                    4.33  haf1e3a3_1            conda-forge/osx-64                       Cached
  + libffi                    3.3  h046ec9c_2            conda-forge/osx-64                       Cached
  + libgfortran             5.0.0  9_3_0_h6c81a4c_23     conda-forge/osx-64                       Cached
  + libgfortran5            9.3.0  h6c81a4c_23           conda-forge/osx-64                       Cached
  + liblapack               3.9.0  11_osx64_openblas     conda-forge/osx-64                       Cached
  + libnghttp2             1.43.0  h07e645a_0            conda-forge/osx-64                       Cached
  + libopenblas            0.3.17  openmp_h3351f45_1     conda-forge/osx-64                       Cached
  + libpng                 1.6.37  h7cec526_2            conda-forge/osx-64                       Cached
  + libssh2                1.10.0  h52ee1ee_0            conda-forge/osx-64                       Cached
  + libtiff                 4.3.0  h1167814_1            conda-forge/osx-64                       Cached
  + libwebp-base            1.2.1  h0d85af4_0            conda-forge/osx-64                       Cached
  + llvm-openmp            12.0.1  hda6cdc1_1            conda-forge/osx-64                       Cached
  + lz4-c                   1.9.3  he49afe7_1            conda-forge/osx-64                       Cached
  + matplotlib-base         3.4.3  py37h3147e9e_0        conda-forge/osx-64                         7 MB
  + ncurses                   6.2  h2e338ed_4            conda-forge/osx-64                       Cached
  + networkx                2.6.2  pyhd8ed1ab_0          conda-forge/noarch                       Cached
  + numpy                  1.21.2  py37haefe36b_0        conda-forge/osx-64                         6 MB
  + olefile                  0.46  pyh9f0ad1d_1          conda-forge/noarch                       Cached
  + openjpeg                2.4.0  h6e7aa92_1            conda-forge/osx-64                       Cached
  + openssl                1.1.1l  h0d85af4_0            conda-forge/osx-64                       Cached
  + pandas                  1.3.2  py37h5b83a90_0        conda-forge/osx-64                        11 MB
  + pillow                  8.3.2  py37h76dc067_0        conda-forge/osx-64                       662 KB
  + pip                    21.2.4  pyhd8ed1ab_0          conda-forge/noarch                       Cached
  + pyparsing               2.4.7  pyh9f0ad1d_0          conda-forge/noarch                       Cached
  + pysam                0.16.0.1  py37h505b978_3        bioconda/osx-64                            2 MB
  + python                 3.7.10  h7728216_100_cpython  conda-forge/osx-64                        24 MB
  + python-dateutil         2.8.2  pyhd8ed1ab_0          conda-forge/noarch                       Cached
  + python_abi                3.7  2_cp37m               conda-forge/osx-64                         4 KB
  + pytz                   2021.1  pyhd8ed1ab_0          conda-forge/noarch                       Cached
  + readline                  8.1  h05e3726_0            conda-forge/osx-64                       Cached
  + scipy                   1.7.1  py37h4e3cf02_0        conda-forge/osx-64                        20 MB
  + setuptools             57.4.0  py37hf985489_0        conda-forge/osx-64                       963 KB
  + six                    1.16.0  pyh6c4a22f_0          conda-forge/noarch                       Cached
  + sqlite                 3.36.0  h23a322b_0            conda-forge/osx-64                       Cached
  + tk                     8.6.11  h5dbffcc_1            conda-forge/osx-64                       Cached
  + tornado                   6.1  py37h271585c_1        conda-forge/osx-64                       645 KB
  + umitools                0.3.4  py37_1                /Users/runner/conda/conda-bld/osx-64      42 KB
  + wheel                  0.37.0  pyhd8ed1ab_1          conda-forge/noarch                       Cached
  + xz                      5.2.5  haf1e3a3_1            conda-forge/osx-64                       Cached
  + zlib                   1.2.11  h7795811_1010         conda-forge/osx-64                       Cached
  + zstd                    1.5.0  h582d3a0_0            conda-forge/osx-64                       Cached

  Summary:

  Install: 61 packages

  Total download: 73 MB

──────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/umitools_1630776621525/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_


The following NEW packages will be INSTALLED:

    bzip2:           1.0.8-h0d85af4_4            conda-forge
    c-ares:          1.17.2-h0d85af4_0           conda-forge
    ca-certificates: 2021.5.30-h033912b_0        conda-forge
    certifi:         2021.5.30-py37hf985489_0    conda-forge
    cycler:          0.10.0-py_2                 conda-forge
    decorator:       4.4.2-py_0                  conda-forge
    editdistance:    0.5.3-py37h54c7649_3        conda-forge
    freetype:        2.10.4-h4cff582_1           conda-forge
    jbig:            2.1-h0d85af4_2003           conda-forge
    jpeg:            9d-hbcb3906_0               conda-forge
    kiwisolver:      1.3.2-py37h737db71_0        conda-forge
    krb5:            1.19.2-hcfbf3a7_0           conda-forge
    lcms2:           2.12-h577c468_0             conda-forge
    lerc:            2.2.1-h046ec9c_0            conda-forge
    libblas:         3.9.0-11_osx64_openblas     conda-forge
    libcblas:        3.9.0-11_osx64_openblas     conda-forge
    libcurl:         7.78.0-hf45b732_0           conda-forge
    libcxx:          12.0.1-habf9029_0           conda-forge
    libdeflate:      1.7-h35c211d_5              conda-forge
    libedit:         3.1.20191231-h0678c8f_2     conda-forge
    libev:           4.33-haf1e3a3_1             conda-forge
    libffi:          3.3-h046ec9c_2              conda-forge
    libgfortran:     5.0.0-9_3_0_h6c81a4c_23     conda-forge
    libgfortran5:    9.3.0-h6c81a4c_23           conda-forge
    liblapack:       3.9.0-11_osx64_openblas     conda-forge
    libnghttp2:      1.43.0-h07e645a_0           conda-forge
    libopenblas:     0.3.17-openmp_h3351f45_1    conda-forge
    libpng:          1.6.37-h7cec526_2           conda-forge
    libssh2:         1.10.0-h52ee1ee_0           conda-forge
    libtiff:         4.3.0-h1167814_1            conda-forge
    libwebp-base:    1.2.1-h0d85af4_0            conda-forge
    llvm-openmp:     12.0.1-hda6cdc1_1           conda-forge
    lz4-c:           1.9.3-he49afe7_1            conda-forge
    matplotlib-base: 3.4.3-py37h3147e9e_0        conda-forge
    ncurses:         6.2-h2e338ed_4              conda-forge
    networkx:        2.6.2-pyhd8ed1ab_0          conda-forge
    numpy:           1.21.2-py37haefe36b_0       conda-forge
    olefile:         0.46-pyh9f0ad1d_1           conda-forge
    openjpeg:        2.4.0-h6e7aa92_1            conda-forge
    openssl:         1.1.1l-h0d85af4_0           conda-forge
    pandas:          1.3.2-py37h5b83a90_0        conda-forge
    pillow:          8.3.2-py37h76dc067_0        conda-forge
    pip:             21.2.4-pyhd8ed1ab_0         conda-forge
    pyparsing:       2.4.7-pyh9f0ad1d_0          conda-forge
    pysam:           0.16.0.1-py37h505b978_3     bioconda   
    python:          3.7.10-h7728216_100_cpython conda-forge
    python-dateutil: 2.8.2-pyhd8ed1ab_0          conda-forge
    python_abi:      3.7-2_cp37m                 conda-forge
    pytz:            2021.1-pyhd8ed1ab_0         conda-forge
    readline:        8.1-h05e3726_0              conda-forge
    scipy:           1.7.1-py37h4e3cf02_0        conda-forge
    setuptools:      57.4.0-py37hf985489_0       conda-forge
    six:             1.16.0-pyh6c4a22f_0         conda-forge
    sqlite:          3.36.0-h23a322b_0           conda-forge
    tk:              8.6.11-h5dbffcc_1           conda-forge
    tornado:         6.1-py37h271585c_1          conda-forge
    umitools:        0.3.4-py37_1                local      
    wheel:           0.37.0-pyhd8ed1ab_1         conda-forge
    xz:              5.2.5-haf1e3a3_1            conda-forge
    zlib:            1.2.11-h7795811_1010        conda-forge
    zstd:            1.5.0-h582d3a0_0            conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/umitools_1630776621525/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_
export SRC_DIR=/Users/runner/conda/conda-bld/umitools_1630776621525/test_tmp
import: 'umitools'
import: 'umitools'
usage: umitools [-h] subcommand

positional arguments:
  subcommand  See https://github.com/weng-lab/umitools for more information.
              For UMI RNA-seq: First, use umitools reformat_fastq to identify
              UMIs in UMI RNA-seq. Then, use umitools mark_duplicates to mark
              PCR duplicates. For UMI small RNA-seq: Use umitools
              reformat_sra_fastq to identify UMIs and PCR duplicates. To
              simulate UMIs, use umitools simulate.

optional arguments:
  -h, --help  show this help message and exit
usage: umi_reformat_fastq [-h] -l LEFT -r RIGHT -L LEFT_OUT -R RIGHT_OUT [-v]
                          [--umi-locator UMI_LOCATOR]
                          [--umi-padding UMI_PADDING]
                          [--umi-pattern UMI_PATTERN] [-q QUALITY] [-D]

A script to reformat reads in a UMI fastq file so that the name of each record
contains the UMI. This script is also known as umitools extract.

optional arguments:
  -h, --help            show this help message and exit
  -l LEFT, --left LEFT  the input fastq file for r1. (default: None)
  -r RIGHT, --right RIGHT
                        the input fastq file for r2. (default: None)
  -L LEFT_OUT, --left-out LEFT_OUT
                        the output fastq file for r1 (default: None)
  -R RIGHT_OUT, --right-out RIGHT_OUT
                        the output fastq file for r2 (default: None)
  -v, --verbose         Also include detailed stats for UMI and padding usage
                        (default: False)
  --umi-locator UMI_LOCATOR
                        Set the UMI locators. If you have multiple, separate
                        them by comma. e.g. GGG,TCA,ATC (default: GGG,TCA,ATC)
  --umi-padding UMI_PADDING
                        Set the nucleotide (for preventing ligation bias)
                        after the UMI locators. If you have multiple, separate
                        them by comma. e.g. A,C,G,T. The quality for this nt
                        is sometimes low, so the default is all possible four
                        nucleotides (default: A,C,G,T,N)
  --umi-pattern UMI_PATTERN
                        Set the UMI patterns. (default: None)
  -q QUALITY, --quality QUALITY
                        Quality (phred quality score) cutoff for UMI.Default
                        is 13, that is UMI with qualities >= 13 willbe kept.
                        This program assumes the phred quality scoresin the
                        fastq file are using sanger format (default: 13)
  -D, --debug           Turn on debugging mode (default: False)
usage: umi_reformat_sra_fastq [-h] -i INPUT -o OUTPUT -d PCR_DUPLICATE
                              [--reads-with-improper-umi READS_WITH_IMPROPER_UMI]
                              [-e ERRORS_ALLOWED] [-v] [-5 UMI_PATTERN_5]
                              [-3 UMI_PATTERN_3] [--debug]

A script to process reads in from UMI small RNA-seq. This script can handle
gzipped files transparently. This script is also known as umitools
extract_small.

optional arguments:
  -h, --help            show this help message and exit
  -i INPUT, --input INPUT
                        the input fastq file. (default: None)
  -o OUTPUT, --output OUTPUT
                        the output fastq file containing reads that are not
                        duplicates (default: None)
  -d PCR_DUPLICATE, --pcr-duplicate PCR_DUPLICATE
                        The output fastq file containing PCR duplicates
                        (default: None)
  --reads-with-improper-umi READS_WITH_IMPROPER_UMI
                        The output fastq file containing reads with improper
                        UMIs. The default is to throw away these reads. This
                        is for debugging purposes (default: )
  -e ERRORS_ALLOWED, --errors-allowed ERRORS_ALLOWED
                        Setting it to >=1 allows errors in UMIs. Otherwise, no
                        errors are allowed in UMIs. (default: 0)
  -v, --verbose         Also include detailed run info (default: False)
  -5 UMI_PATTERN_5, --umi-pattern-5 UMI_PATTERN_5
                        Set the UMI pattern at the 5' end. Use ACGT for fixed
                        nt and N for variable nt in UMI. If there are multiple
                        patterns, separate them using comma (default:
                        NNNCGANNNTACNNN,NNNATCNNNAGTNNN)
  -3 UMI_PATTERN_3, --umi-pattern-3 UMI_PATTERN_3
                        Set the UMI pattern at the 3' end. Use ACGT for fixed
                        nt and N for variable nt in UMI. If there are multiple
                        patterns, separate them using comma (default:
                        NNNGTCNNNTAGNNN)
  --debug               More output for debugging (default: False)
usage: umi_mark_duplicates [-h] -f FILE [-p PROCESSES] [-d] [-c]

A pair of FASTQ files are first reformatted using reformat_umi_fastq.py and
then is aligned to get the bam file. This script can parse the umi barcode in
the name of each read to mark duplicates. This script is also known as
umitools mark.

optional arguments:
  -h, --help            show this help message and exit
  -f FILE, --file FILE  the input bam file
  -p PROCESSES, --processes PROCESSES
                        number of processes
  -d, --debug           turn on debug mode
  -c, --count           Count the number of raw reads for each locus
                        (determined by pairs)
usage: umi_simulator [-h] [-p PCR_CYCLE] [-l UMI_LENGTH] [-s POOL_SIZE]
                     [-o OUTPUT_SIZE] [-a AMPLIFICATION_RATE]
                     [--pcr-error PCR_ERROR]
                     [--sequencing-error SEQUENCING_ERROR] [--task TASK]
                     [--task-rep TASK_REP] [--cpu CPU] [--seed SEED]

A simple in silico PCR simulator. It creates an initial set of molecules for
one locus, simulates PCR and sequencing and outputs the stats. It is necessary
to specify the seed, since by default, this simulator uses 0 as the seed

optional arguments:
  -h, --help            show this help message and exit
  -p PCR_CYCLE, --pcr-cycle PCR_CYCLE
                        number of PCR cycles (default: 10)
  -l UMI_LENGTH, --umi-length UMI_LENGTH
                        length of UMI (default: 18)
  -s POOL_SIZE, --pool-size POOL_SIZE
                        initial pool size (number of molecules before PCR)
                        (default: 100)
  -o OUTPUT_SIZE, --output-size OUTPUT_SIZE
                        final pool size (sequencing depth, i.e. number of
                        reads sampled from the PCR amplified pool) (default:
                        100)
  -a AMPLIFICATION_RATE, --amplification-rate AMPLIFICATION_RATE
                        successful rate of PCR amplification. The actual
                        amplification rate is uniformally distributed between
                        this number and 1 (default: 0.8)
  --pcr-error PCR_ERROR
                        error rate of PCR amplification (default: 3e-05)
  --sequencing-error SEQUENCING_ERROR
                        error rate of sequencing (default: 0.001)
  --task TASK           tasks to simulate multiple conditions. Other PCR-
                        related arguments are ignored when this option is used
                        (default: None)
  --task-rep TASK_REP   number of replicates when doing tasks (default: 100)
  --cpu CPU             Tasks supporting multiprocessing. (default: 16)
  --seed SEED           starting seed (default: 0)

Resource usage statistics from testing umitools:
   Process count: 4
   CPU time: Sys=0:00:00.1, User=0:00:00.2
   Memory: 23.0M
   Disk usage: 16B
   Time elapsed: 0:00:08.2


TEST END: umitools-0.3.4-py37_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


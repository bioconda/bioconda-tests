  Package          Version  Build        Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex      0.1  conda_forge  conda-forge/linux-64                    Cached
  + _openmp_mutex      4.5  1_gnu        conda-forge/linux-64                    Cached
  + fastq-multx      1.4.2  h7d875b9_1   /home/vsts/conda/conda-bld/linux-64      25 KB
  + libgcc-ng       11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + libgomp         11.1.0  hc902ee8_8   conda-forge/linux-64                    Cached
  + libstdcxx-ng    11.1.0  h56837e0_8   conda-forge/linux-64                    Cached

  Summary:

  Install: 6 packages

  Total download: 25 KB

─────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /home/vsts/conda/conda-bld

TEST START: fastq-multx-1.4.2-h7d875b9_1.tar.bz2

## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/fastq-multx_1630624696247/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_


The following NEW packages will be INSTALLED:

    _libgcc_mutex: 0.1-conda_forge   conda-forge
    _openmp_mutex: 4.5-1_gnu         conda-forge
    fastq-multx:   1.4.2-h7d875b9_1  local      
    libgcc-ng:     11.1.0-hc902ee8_8 conda-forge
    libgomp:       11.1.0-hc902ee8_8 conda-forge
    libstdcxx-ng:  11.1.0-h56837e0_8 conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/home/vsts/conda/conda-bld/fastq-multx_1630624696247/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_
export SRC_DIR=/home/vsts/conda/conda-bld/fastq-multx_1630624696247/test_tmp
Usage: fastq-multx [-g|-l|-B] <barcodes.fil> <read1.fq> [mate.fq] -o r1.%.fq [-o r2.%.fq] ...
Version: 1.4.2

Output files must contain a '%' sign which is replaced with the barcode id in the barcodes file.
Output file can be n/a to discard the corresponding data (use this for the barcode read)

The barcodes file (-B) looks like this [where '-NNNNNNNN' for a dual index is optional]:

sample1 ATGGTCCA-TTGAGGAC
sample2 GCCTAAGT-AAGCGTCA
...

The column delimiter may be a space or a tab.  The best matches in the index file(s) must be unique to a single sample's barcode(s) or the read(s) will be considered unmatched.

Default is to guess the -bol or -eol based on clear stats.

If -g is used, then it's parameter is an index lane, and frequently occuring sequences are used.

If -l is used then all barcodes in the file are tried, and the *group* with the *most* matches is chosen.

Grouped barcodes file (-l or -L) looks like this [where '-NNNNNNNN' for a dual index is optional]:

sample1 ATGGTCCA-TTGAGGAC group1
sample1 GCCTAAGT-AAGCGTCA group1
sample2 CTTAGTTC-CCAAGTAC group2
...

Mated reads, if supplied, are kept in-sync

Options:

-o FIL1     Output files (one per input, required)
-g SEQFIL   Determine barcodes from the indexed read SEQFIL
-l BCFIL    Determine barcodes from any read, using BCFIL as a master list
-L BCFIL    Determine barcodes from <read1.fq>, using BCFIL as a master list
-B BCFIL    Use barcodes from BCFIL, no determination step, codes in <read1.fq>
-H          Use barcodes from illumina's header, instead of a read
-b          Force beginning of line (5') for barcode matching
-e          Force end of line (3') for barcode matching
-t NUM      Divide threshold for auto-determine by factor NUM (1), > 1 = more sensitive
-G NAME     Use group(s) matching NAME only
-x          Don't trim barcodes off before writing out destination
-n          Don't execute, just print likely barcode list
-v C        Verify that mated id's match up to character C (Use ' ' for illumina)
-m N        Allow N mismatches in union of all indexes, unless -M is supplied. (1)
-M M        Allow N,M mismatches in indexes 1,2 respectively (see -m N) (not used)
-d N        Require a minimum distance of N between the best and next best (2)
-q N        Require a minimum phred quality of N to accept a barcode base (0)

Resource usage statistics from testing fastq-multx:
   Process count: 1
   CPU time: Sys=0:00:00.0, User=-
   Memory: 3.4M
   Disk usage: 16B
   Time elapsed: 0:00:02.1


TEST END: fastq-multx-1.4.2-h7d875b9_1.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


  Package                    Version  Build                   Channel                                    Size
───────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
───────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + brotlipy                   0.7.0  py39h89e85a6_1001       conda-forge/osx-64                       Cached
  + c-ares                    1.17.2  h0d85af4_0              conda-forge/osx-64                       Cached
  + ca-certificates        2021.5.30  h033912b_0              conda-forge/osx-64                       Cached
  + cached-property            1.5.2  hd8ed1ab_1              conda-forge/noarch                         4 KB
  + cached_property            1.5.2  pyha770c72_1            conda-forge/noarch                        11 KB
  + certifi                2021.5.30  py39h6e9494a_0          conda-forge/osx-64                       Cached
  + cffi                      1.14.6  py39hb71fe58_0          conda-forge/osx-64                       Cached
  + chardet                    4.0.0  py39h6e9494a_1          conda-forge/osx-64                       Cached
  + charset-normalizer         2.0.0  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + cmappy                     4.0.1  py39hcf0ab7e_2          /Users/runner/conda/conda-bld/osx-64     131 KB
  + cryptography               3.4.7  py39ha2c9959_0          conda-forge/osx-64                       Cached
  + h5py                       3.4.0  nompi_py39hbc6cb89_100  conda-forge/osx-64                         1 MB
  + hdf5                      1.12.1  nompi_h2f0ef1a_100      conda-forge/osx-64                         4 MB
  + idna                         3.1  pyhd3deb0d_0            conda-forge/noarch                       Cached
  + krb5                      1.19.2  hcfbf3a7_0              conda-forge/osx-64                       Cached
  + libblas                    3.9.0  11_osx64_openblas       conda-forge/osx-64                        12 KB
  + libcblas                   3.9.0  11_osx64_openblas       conda-forge/osx-64                        11 KB
  + libcurl                   7.78.0  hf45b732_0              conda-forge/osx-64                       Cached
  + libcxx                    12.0.1  habf9029_0              conda-forge/osx-64                       Cached
  + libedit             3.1.20191231  h0678c8f_2              conda-forge/osx-64                       Cached
  + libev                       4.33  haf1e3a3_1              conda-forge/osx-64                       Cached
  + libffi                       3.3  h046ec9c_2              conda-forge/osx-64                       Cached
  + libgfortran                5.0.0  9_3_0_h6c81a4c_23       conda-forge/osx-64                        19 KB
  + libgfortran5               9.3.0  h6c81a4c_23             conda-forge/osx-64                         2 MB
  + liblapack                  3.9.0  11_osx64_openblas       conda-forge/osx-64                        11 KB
  + libnghttp2                1.43.0  h07e645a_0              conda-forge/osx-64                       Cached
  + libopenblas               0.3.17  openmp_h3351f45_1       conda-forge/osx-64                         9 MB
  + libssh2                   1.10.0  h52ee1ee_0              conda-forge/osx-64                       Cached
  + llvm-openmp               12.0.1  hda6cdc1_1              conda-forge/osx-64                       287 KB
  + ncurses                      6.2  h2e338ed_4              conda-forge/osx-64                       Cached
  + numpy                     1.21.2  py39h7eed0ac_0          conda-forge/osx-64                         6 MB
  + openssl                   1.1.1k  h0d85af4_1              conda-forge/osx-64                       Cached
  + pandas                     1.3.2  py39h4d6be9b_0          conda-forge/osx-64                        12 MB
  + pip                       21.2.4  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + pycparser                   2.20  pyh9f0ad1d_2            conda-forge/noarch                       Cached
  + pyopenssl                 20.0.1  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + pysocks                    1.7.1  py39h6e9494a_3          conda-forge/osx-64                       Cached
  + python                     3.9.6  hd187cdc_1_cpython      conda-forge/osx-64                       Cached
  + python-dateutil            2.8.2  pyhd8ed1ab_0            conda-forge/noarch                       240 KB
  + python_abi                   3.9  2_cp39                  conda-forge/osx-64                       Cached
  + pytz                      2021.1  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + readline                     8.1  h05e3726_0              conda-forge/osx-64                       Cached
  + requests                  2.26.0  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + setuptools                57.4.0  py39h6e9494a_0          conda-forge/osx-64                       Cached
  + six                       1.16.0  pyh6c4a22f_0            conda-forge/noarch                       Cached
  + sqlite                    3.36.0  h23a322b_0              conda-forge/osx-64                       Cached
  + tk                        8.6.11  hd798d34_0              conda-forge/osx-64                       Cached
  + tzdata                     2021a  he74cb21_1              conda-forge/noarch                       Cached
  + urllib3                   1.26.6  pyhd8ed1ab_0            conda-forge/noarch                       Cached
  + wheel                     0.37.0  pyhd8ed1ab_1            conda-forge/noarch                       Cached
  + xz                         5.2.5  haf1e3a3_1              conda-forge/osx-64                       Cached
  + zlib                      1.2.11  h7795811_1010           conda-forge/osx-64                       Cached

  Summary:

  Install: 52 packages

  Total download: 33 MB

───────────────────────────────────────────────────────────────────────────────────────────────────────────────

Updating build index: /Users/runner/conda/conda-bld

TEST START: cmappy-4.0.1-py39hcf0ab7e_2.tar.bz2

## Package Plan ##

  environment location: /Users/runner/conda/conda-bld/cmappy_1630478111264/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl


The following NEW packages will be INSTALLED:

    brotlipy:           0.7.0-py39h89e85a6_1001      conda-forge
    c-ares:             1.17.2-h0d85af4_0            conda-forge
    ca-certificates:    2021.5.30-h033912b_0         conda-forge
    cached-property:    1.5.2-hd8ed1ab_1             conda-forge
    cached_property:    1.5.2-pyha770c72_1           conda-forge
    certifi:            2021.5.30-py39h6e9494a_0     conda-forge
    cffi:               1.14.6-py39hb71fe58_0        conda-forge
    chardet:            4.0.0-py39h6e9494a_1         conda-forge
    charset-normalizer: 2.0.0-pyhd8ed1ab_0           conda-forge
    cmappy:             4.0.1-py39hcf0ab7e_2         local      
    cryptography:       3.4.7-py39ha2c9959_0         conda-forge
    h5py:               3.4.0-nompi_py39hbc6cb89_100 conda-forge
    hdf5:               1.12.1-nompi_h2f0ef1a_100    conda-forge
    idna:               3.1-pyhd3deb0d_0             conda-forge
    krb5:               1.19.2-hcfbf3a7_0            conda-forge
    libblas:            3.9.0-11_osx64_openblas      conda-forge
    libcblas:           3.9.0-11_osx64_openblas      conda-forge
    libcurl:            7.78.0-hf45b732_0            conda-forge
    libcxx:             12.0.1-habf9029_0            conda-forge
    libedit:            3.1.20191231-h0678c8f_2      conda-forge
    libev:              4.33-haf1e3a3_1              conda-forge
    libffi:             3.3-h046ec9c_2               conda-forge
    libgfortran:        5.0.0-9_3_0_h6c81a4c_23      conda-forge
    libgfortran5:       9.3.0-h6c81a4c_23            conda-forge
    liblapack:          3.9.0-11_osx64_openblas      conda-forge
    libnghttp2:         1.43.0-h07e645a_0            conda-forge
    libopenblas:        0.3.17-openmp_h3351f45_1     conda-forge
    libssh2:            1.10.0-h52ee1ee_0            conda-forge
    llvm-openmp:        12.0.1-hda6cdc1_1            conda-forge
    ncurses:            6.2-h2e338ed_4               conda-forge
    numpy:              1.21.2-py39h7eed0ac_0        conda-forge
    openssl:            1.1.1k-h0d85af4_1            conda-forge
    pandas:             1.3.2-py39h4d6be9b_0         conda-forge
    pip:                21.2.4-pyhd8ed1ab_0          conda-forge
    pycparser:          2.20-pyh9f0ad1d_2            conda-forge
    pyopenssl:          20.0.1-pyhd8ed1ab_0          conda-forge
    pysocks:            1.7.1-py39h6e9494a_3         conda-forge
    python:             3.9.6-hd187cdc_1_cpython     conda-forge
    python-dateutil:    2.8.2-pyhd8ed1ab_0           conda-forge
    python_abi:         3.9-2_cp39                   conda-forge
    pytz:               2021.1-pyhd8ed1ab_0          conda-forge
    readline:           8.1-h05e3726_0               conda-forge
    requests:           2.26.0-pyhd8ed1ab_0          conda-forge
    setuptools:         57.4.0-py39h6e9494a_0        conda-forge
    six:                1.16.0-pyh6c4a22f_0          conda-forge
    sqlite:             3.36.0-h23a322b_0            conda-forge
    tk:                 8.6.11-hd798d34_0            conda-forge
    tzdata:             2021a-he74cb21_1             conda-forge
    urllib3:            1.26.6-pyhd8ed1ab_0          conda-forge
    wheel:              0.37.0-pyhd8ed1ab_1          conda-forge
    xz:                 5.2.5-haf1e3a3_1             conda-forge
    zlib:               1.2.11-h7795811_1010         conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... done
export PREFIX=/Users/runner/conda/conda-bld/cmappy_1630478111264/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_pl
export SRC_DIR=/Users/runner/conda/conda-bld/cmappy_1630478111264/test_tmp
import: 'cmapPy'
import: 'cmapPy.clue_api_client'
import: 'cmapPy.pandasGEXpress'
import: 'cmapPy.set_io'
import: 'cmapPy'
import: 'cmapPy.clue_api_client'
import: 'cmapPy.pandasGEXpress'
import: 'cmapPy.set_io'
usage: gctx2gct [-h] -filename FILENAME [-output_filepath OUTPUT_FILEPATH]
                [-verbose] [-row_annot_path ROW_ANNOT_PATH]
                [-col_annot_path COL_ANNOT_PATH]

Command-line script to convert a .gctx file to .gct. Main method takes in a
.gctx file path (and, optionally, an out path and/or name to which to save the
equivalent .gct) and saves the enclosed content to a .gct file. Note: Only
supports v1.0 .gctx files.

optional arguments:
  -h, --help            show this help message and exit
  -filename FILENAME, -f FILENAME
                        .gctx file that you would like to converted to .gct
                        (default: None)
  -output_filepath OUTPUT_FILEPATH, -o OUTPUT_FILEPATH
                        out path/name for output gct file. Default is just to
                        modify the extension (default: None)
  -verbose, -v          Whether to print a bunch of output. (default: False)
  -row_annot_path ROW_ANNOT_PATH
                        Path to annotations file for rows (default: None)
  -col_annot_path COL_ANNOT_PATH
                        Path to annotations file for columns (default: None)
usage: gct2gctx [-h] -filename FILENAME [-output_filepath OUTPUT_FILEPATH]
                [-verbose] [-row_annot_path ROW_ANNOT_PATH]
                [-col_annot_path COL_ANNOT_PATH]

Command-line script to convert a .gct file to .gctx. Main method takes in a
.gct file path (and, optionally, an out path and/or name to which to save the
equivalent .gctx) and saves the enclosed content to a .gctx file. Note: Only
supports v1.3 .gct files.

optional arguments:
  -h, --help            show this help message and exit
  -filename FILENAME, -f FILENAME
                        .gct file that you would like to convert to .gctx
                        (default: None)
  -output_filepath OUTPUT_FILEPATH, -o OUTPUT_FILEPATH
                        out path/name for output gctx file. Default is just to
                        modify the extension (default: None)
  -verbose, -v          Whether to print a bunch of output. (default: False)
  -row_annot_path ROW_ANNOT_PATH
                        Path to annotations file for rows (default: None)
  -col_annot_path COL_ANNOT_PATH
                        Path to annotations file for columns (default: None)
usage: concat [-h] --concat_direction {horiz,vert}
              [--input_filepaths INPUT_FILEPATHS [INPUT_FILEPATHS ...] |
              --file_wildcard FILE_WILDCARD] [--out_type {gct,gctx}]
              [--out_name OUT_NAME]
              [--fields_to_remove FIELDS_TO_REMOVE [FIELDS_TO_REMOVE ...]]
              [--remove_all_metadata_fields] [--reset_ids]
              [-data_null DATA_NULL] [-metadata_null METADATA_NULL]
              [-filler_null FILLER_NULL] [-verbose]
              [--error_report_output_file ERROR_REPORT_OUTPUT_FILE]

concat.py This function is for concatenating gct(x) files together. You can
tell it to find files using the file_wildcard argument, or you can tell it
exactly which files you want to concatenate using the input_filepaths
argument. The meat of this function are the hstack (i.e. horizontal
concatenation of GCToo objects) and vstack (i.e. vertical concatenation).
Terminology: 'Common' metadata refers to the metadata that is shared between
the loaded GCToo's. For example, if horizontally concatenating, the 'common'
metadata is the row metadata. 'Concatenated' metadata is the other one; it's
the metadata for the entries being concatenated together. For example, if
horizontally concatenating, the 'concatenated' metadata is the column metadata
because columns are being concatenated together. There are 2 arguments that
allow you to work around certain obstacles of concatenation. 1) If the
'common' metadata contains fields that are not the same in all files, then you
will need to remove these fields using the fields_to_remove argument. 2) If
the 'concatenated' metadata ids are not unique between different files, and
you try to concatenate the files, an invalid GCToo would be formed (duplicate
ids). To overcome this, use the reset_sample_ids argument. This will move the
'new' metadata ids to a new metadata field and replace the original ids with
unique integers. N.B. This script sorts everything!

optional arguments:
  -h, --help            show this help message and exit
  --concat_direction {horiz,vert}, -d {horiz,vert}
                        which direction to concatenate (default: None)
  --input_filepaths INPUT_FILEPATHS [INPUT_FILEPATHS ...], -if INPUT_FILEPATHS [INPUT_FILEPATHS ...]
                        full paths to gct(x) files to be concatenated
                        (default: None)
  --file_wildcard FILE_WILDCARD, -w FILE_WILDCARD
                        wildcard specifying where files should be found (make
                        sure to surround in quotes if calling from command
                        line!) (default: None)
  --out_type {gct,gctx}, -ot {gct,gctx}
                        whether to save output as a gct or gctx (default:
                        gctx)
  --out_name OUT_NAME, -o OUT_NAME
                        what to name the output file (default: concated.gctx)
  --fields_to_remove FIELDS_TO_REMOVE [FIELDS_TO_REMOVE ...], -ftr FIELDS_TO_REMOVE [FIELDS_TO_REMOVE ...]
                        fields to remove from the common metadata (default:
                        [])
  --remove_all_metadata_fields, -ramf
                        remove all metadata fields during operation (default:
                        False)
  --reset_ids, -rsi     whether to reset ids (use this flag if ids are not
                        unique) (default: False)
  -data_null DATA_NULL  how to represent missing values in the data (default:
                        NaN)
  -metadata_null METADATA_NULL
                        how to represent missing values in the metadata
                        (default: -666)
  -filler_null FILLER_NULL
                        what value to use for filling the top-left filler
                        block if output is a .gct (default: -666)
  -verbose, -v          whether to print a bunch of output (default: False)
  --error_report_output_file ERROR_REPORT_OUTPUT_FILE, -erof ERROR_REPORT_OUTPUT_FILE
                        destination file for writing out error report -
                        currently information about inconsistent metadata
                        fields in the common dimension of the concat operation
                        (default: None)
usage: subset [-h] --in_path IN_PATH [--rid RID [RID ...]]
              [--cid CID [CID ...]]
              [--exclude_rid EXCLUDE_RID [EXCLUDE_RID ...]]
              [--exclude_cid EXCLUDE_CID [EXCLUDE_CID ...]]
              [--out_name OUT_NAME] [--out_type {gct,gctx}] [--verbose]

subset.py Extract a subset of data from a GCT(x) file using the command line.
ids can be provided as a list or as a path to a grp file. See subset_gctoo for
the equivalent method to be used on GCToo objects.

optional arguments:
  -h, --help            show this help message and exit
  --in_path IN_PATH, -i IN_PATH
                        file path to input GCT(x) file (default: None)
  --rid RID [RID ...]   filepath to grp file or string array for including
                        rows (default: None)
  --cid CID [CID ...]   filepath to grp file or string array for including
                        cols (default: None)
  --exclude_rid EXCLUDE_RID [EXCLUDE_RID ...], -er EXCLUDE_RID [EXCLUDE_RID ...]
                        filepath to grp file or string array for excluding
                        rows (default: None)
  --exclude_cid EXCLUDE_CID [EXCLUDE_CID ...], -ec EXCLUDE_CID [EXCLUDE_CID ...]
                        filepath to grp file or string array for excluding
                        cols (default: None)
  --out_name OUT_NAME, -o OUT_NAME
                        what to name the output file (default:
                        ds_subsetted.gct)
  --out_type {gct,gctx}
                        whether to write output as GCT or GCTx (default: gct)
  --verbose, -v         whether to increase the # of messages reported
                        (default: False)

Resource usage statistics from testing cmappy:
   Process count: 4
   CPU time: Sys=0:00:00.2, User=0:00:00.7
   Memory: 60.9M
   Disk usage: 16B
   Time elapsed: 0:00:10.5


TEST END: cmappy-4.0.1-py39hcf0ab7e_2.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


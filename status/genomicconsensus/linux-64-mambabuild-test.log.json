Updating build index: /home/vsts/conda/conda-bld

TEST START: genomicconsensus-2.3.3-py27_0.tar.bz2
Adding in variants from internal_defaults
Adding in variants from /tmp/tmpmebsauhr/info/recipe/conda_build_config.yaml
  Package                       Version  Build                   Channel                                   Size
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────
  Install:
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────

  + _libgcc_mutex                   0.1  conda_forge             conda-forge/linux-64                    Cached
  + _openmp_mutex                   4.5  1_gnu                   conda-forge/linux-64                    Cached
  + avro-python2                  1.9.0  py_0                    bioconda/noarch                          32 KB
  + brotlipy                      0.7.0  py27h516909a_1000       conda-forge/linux-64                    345 KB
  + bzip2                         1.0.8  h7f98852_4              conda-forge/linux-64                    Cached
  + c-ares                       1.17.2  h7f98852_0              conda-forge/linux-64                    Cached
  + ca-certificates           2021.5.30  ha878542_0              conda-forge/linux-64                    Cached
  + certifi                  2019.11.28  py27h8c360ce_1          conda-forge/linux-64                    149 KB
  + cffi                         1.14.0  py27hd463f26_0          conda-forge/linux-64                    217 KB
  + chardet                       3.0.4  py27h8c360ce_1006       conda-forge/linux-64                    180 KB
  + cryptography                    2.8  py27h2c19f6a_2          conda-forge/linux-64                    609 KB
  + cython                      0.29.15  py27haf22ab1_1          conda-forge/linux-64                      2 MB
  + enum34                       1.1.10  py27h8c360ce_1          conda-forge/linux-64                     49 KB
  + genomicconsensus              2.3.3  py27_0                  /home/vsts/conda/conda-bld/linux-64      98 KB
  + h5py                         2.10.0  nompi_py27h513d04c_102  conda-forge/linux-64                      1 MB
  + hdf5                         1.10.5  nompi_h5b725eb_1114     conda-forge/linux-64                      3 MB
  + idna                           2.10  pyh9f0ad1d_0            conda-forge/noarch                       52 KB
  + ipaddress                    1.0.23  py_0                    conda-forge/noarch                       19 KB
  + iso8601                      0.1.13  pyh9f0ad1d_0            conda-forge/noarch                       12 KB
  + krb5                         1.19.2  hcc1bbae_0              conda-forge/linux-64                    Cached
  + ld_impl_linux-64             2.36.1  hea4e1c9_2              conda-forge/linux-64                    Cached
  + libblas                       3.9.0  11_linux64_openblas     conda-forge/linux-64                    Cached
  + libcblas                      3.9.0  11_linux64_openblas     conda-forge/linux-64                    Cached
  + libcurl                      7.78.0  h2574ce0_0              conda-forge/linux-64                    Cached
  + libdeflate                      1.7  h7f98852_5              conda-forge/linux-64                    Cached
  + libedit                3.1.20191231  he28a2e2_2              conda-forge/linux-64                    Cached
  + libev                          4.33  h516909a_1              conda-forge/linux-64                    Cached
  + libffi                        3.2.1  he1b5a44_1007           conda-forge/linux-64                     47 KB
  + libgcc-ng                    11.1.0  hc902ee8_8              conda-forge/linux-64                    Cached
  + libgfortran-ng               11.1.0  h69a702a_8              conda-forge/linux-64                    Cached
  + libgfortran5                 11.1.0  h6c583b3_8              conda-forge/linux-64                    Cached
  + libgomp                      11.1.0  hc902ee8_8              conda-forge/linux-64                    Cached
  + liblapack                     3.9.0  11_linux64_openblas     conda-forge/linux-64                    Cached
  + libnghttp2                   1.43.0  h812cca2_0              conda-forge/linux-64                    Cached
  + libopenblas                  0.3.17  pthreads_h8fe5266_1     conda-forge/linux-64                    Cached
  + libssh2                      1.10.0  ha56f1ee_0              conda-forge/linux-64                    Cached
  + libstdcxx-ng                 11.1.0  h56837e0_8              conda-forge/linux-64                    Cached
  + linecache2                    1.0.0  py27_0                  conda-forge/linux-64                     22 KB
  + ncurses                         6.2  h58526e2_4              conda-forge/linux-64                    Cached
  + numpy                        1.16.5  py27h95a1406_0          conda-forge/linux-64                      4 MB
  + openssl                      1.1.1k  h7f98852_1              conda-forge/linux-64                    Cached
  + pbcommand                     1.1.1  py27_2                  bioconda/linux-64                       193 KB
  + pbcore                        1.7.1  py27_0                  bioconda/linux-64                        10 MB
  + pip                          20.1.1  pyh9f0ad1d_0            conda-forge/noarch                        1 MB
  + pycparser                      2.20  pyh9f0ad1d_2            conda-forge/noarch                      Cached
  + pyopenssl                    19.1.0  py27_0                  conda-forge/linux-64                     81 KB
  + pysam                      0.16.0.1  py27hc729bab_3          bioconda/linux-64                         3 MB
  + pysocks                       1.7.1  py27h8c360ce_1          conda-forge/linux-64                     26 KB
  + python                       2.7.15  h5a48372_1011_cpython   conda-forge/linux-64                     12 MB
  + python-consensuscore          1.1.1  py27he4c7565_5          bioconda/linux-64                         1 MB
  + python-consensuscore2         3.4.1  py27_0                  bioconda/linux-64                       726 KB
  + python_abi                      2.7  1_cp27mu                conda-forge/linux-64                      4 KB
  + pytz                         2020.1  pyh9f0ad1d_0            conda-forge/noarch                      227 KB
  + readline                        8.1  h46c0cb4_0              conda-forge/linux-64                    Cached
  + requests                     2.25.1  pyhd3deb0d_0            conda-forge/noarch                       51 KB
  + setuptools                   44.0.0  py27_0                  conda-forge/linux-64                    663 KB
  + six                          1.16.0  pyh6c4a22f_0            conda-forge/noarch                      Cached
  + sqlite                       3.36.0  h9cd32fc_0              conda-forge/linux-64                    Cached
  + tk                           8.6.11  h27826a3_1              conda-forge/linux-64                    Cached
  + traceback2                    1.4.0  py27_0                  conda-forge/linux-64                     28 KB
  + unittest2                     1.1.0  py_0                    conda-forge/noarch                       68 KB
  + urllib3                      1.26.6  pyhd8ed1ab_0            conda-forge/noarch                      Cached
  + wheel                        0.37.0  pyhd8ed1ab_1            conda-forge/noarch                      Cached
  + xz                            5.2.5  h516909a_1              conda-forge/linux-64                    Cached
  + zlib                         1.2.11  h516909a_1010           conda-forge/linux-64                    Cached

  Summary:

  Install: 65 packages

  Total download: 42 MB

─────────────────────────────────────────────────────────────────────────────────────────────────────────────────


## Package Plan ##

  environment location: /home/vsts/conda/conda-bld/genomicconsensus_1630602807801/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place


The following NEW packages will be INSTALLED:

    _libgcc_mutex:         0.1-conda_forge               conda-forge
    _openmp_mutex:         4.5-1_gnu                     conda-forge
    avro-python2:          1.9.0-py_0                    bioconda   
    brotlipy:              0.7.0-py27h516909a_1000       conda-forge
    bzip2:                 1.0.8-h7f98852_4              conda-forge
    c-ares:                1.17.2-h7f98852_0             conda-forge
    ca-certificates:       2021.5.30-ha878542_0          conda-forge
    certifi:               2019.11.28-py27h8c360ce_1     conda-forge
    cffi:                  1.14.0-py27hd463f26_0         conda-forge
    chardet:               3.0.4-py27h8c360ce_1006       conda-forge
    cryptography:          2.8-py27h2c19f6a_2            conda-forge
    cython:                0.29.15-py27haf22ab1_1        conda-forge
    enum34:                1.1.10-py27h8c360ce_1         conda-forge
    genomicconsensus:      2.3.3-py27_0                  local      
    h5py:                  2.10.0-nompi_py27h513d04c_102 conda-forge
    hdf5:                  1.10.5-nompi_h5b725eb_1114    conda-forge
    idna:                  2.10-pyh9f0ad1d_0             conda-forge
    ipaddress:             1.0.23-py_0                   conda-forge
    iso8601:               0.1.13-pyh9f0ad1d_0           conda-forge
    krb5:                  1.19.2-hcc1bbae_0             conda-forge
    ld_impl_linux-64:      2.36.1-hea4e1c9_2             conda-forge
    libblas:               3.9.0-11_linux64_openblas     conda-forge
    libcblas:              3.9.0-11_linux64_openblas     conda-forge
    libcurl:               7.78.0-h2574ce0_0             conda-forge
    libdeflate:            1.7-h7f98852_5                conda-forge
    libedit:               3.1.20191231-he28a2e2_2       conda-forge
    libev:                 4.33-h516909a_1               conda-forge
    libffi:                3.2.1-he1b5a44_1007           conda-forge
    libgcc-ng:             11.1.0-hc902ee8_8             conda-forge
    libgfortran-ng:        11.1.0-h69a702a_8             conda-forge
    libgfortran5:          11.1.0-h6c583b3_8             conda-forge
    libgomp:               11.1.0-hc902ee8_8             conda-forge
    liblapack:             3.9.0-11_linux64_openblas     conda-forge
    libnghttp2:            1.43.0-h812cca2_0             conda-forge
    libopenblas:           0.3.17-pthreads_h8fe5266_1    conda-forge
    libssh2:               1.10.0-ha56f1ee_0             conda-forge
    libstdcxx-ng:          11.1.0-h56837e0_8             conda-forge
    linecache2:            1.0.0-py27_0                  conda-forge
    ncurses:               6.2-h58526e2_4                conda-forge
    numpy:                 1.16.5-py27h95a1406_0         conda-forge
    openssl:               1.1.1k-h7f98852_1             conda-forge
    pbcommand:             1.1.1-py27_2                  bioconda   
    pbcore:                1.7.1-py27_0                  bioconda   
    pip:                   20.1.1-pyh9f0ad1d_0           conda-forge
    pycparser:             2.20-pyh9f0ad1d_2             conda-forge
    pyopenssl:             19.1.0-py27_0                 conda-forge
    pysam:                 0.16.0.1-py27hc729bab_3       bioconda   
    pysocks:               1.7.1-py27h8c360ce_1          conda-forge
    python:                2.7.15-h5a48372_1011_cpython  conda-forge
    python-consensuscore:  1.1.1-py27he4c7565_5          bioconda   
    python-consensuscore2: 3.4.1-py27_0                  bioconda   
    python_abi:            2.7-1_cp27mu                  conda-forge
    pytz:                  2020.1-pyh9f0ad1d_0           conda-forge
    readline:              8.1-h46c0cb4_0                conda-forge
    requests:              2.25.1-pyhd3deb0d_0           conda-forge
    setuptools:            44.0.0-py27_0                 conda-forge
    six:                   1.16.0-pyh6c4a22f_0           conda-forge
    sqlite:                3.36.0-h9cd32fc_0             conda-forge
    tk:                    8.6.11-h27826a3_1             conda-forge
    traceback2:            1.4.0-py27_0                  conda-forge
    unittest2:             1.1.0-py_0                    conda-forge
    urllib3:               1.26.6-pyhd8ed1ab_0           conda-forge
    wheel:                 0.37.0-pyhd8ed1ab_1           conda-forge
    xz:                    5.2.5-h516909a_1              conda-forge
    zlib:                  1.2.11-h516909a_1010          conda-forge

Preparing transaction: ...working... done
Verifying transaction: ...working... done
Executing transaction: ...working... 
##############################################################################
#                                                                            #
# PacBio(R) tools distributed via Bioconda are: pre-release versions, not    #
# necessarily ISO compliant, intended for Research Use Only and not for use  #
# in diagnostic procedures, intended only for command-line users, and        #
# possibly newer than the currently available SMRT(R) Analysis builds. While #
# efforts have been made to ensure that releases on Bioconda live up to the  #
# quality that PacBio strives for, we make no warranty regarding any         #
# Bioconda release.                                                          #
#                                                                            #
# As PacBio tools distributed via Bioconda are not covered by any service    #
# level agreement or the like, please *do not* contact a PacBio Field        #
# Applications Scientist or PacBio Customer Service for assistance with any  #
# Bioconda release. We instead provide an issue tracker for you to report    #
# issues to us at:                                                           #
#                                                                            #
#   https://github.com/PacificBiosciences/pbbioconda                         #
#                                                                            #
# We make no warranty that any such issue will be addressed,                 #
# to any extent or within any time frame.                                    #
#                                                                            #
# BSD 3-Clause Clear License                                                 #
#                                                                            #
# Please see https://github.com/PacificBiosciences/pbbioconda for            #
# information on License, Copyright and Disclaimer                           #
#                                                                            #
##############################################################################


##############################################################################
#                                                                            #
# PacBio(R) tools distributed via Bioconda are: pre-release versions, not    #
# necessarily ISO compliant, intended for Research Use Only and not for use  #
# in diagnostic procedures, intended only for command-line users, and        #
# possibly newer than the currently available SMRT(R) Analysis builds. While #
# efforts have been made to ensure that releases on Bioconda live up to the  #
# quality that PacBio strives for, we make no warranty regarding any         #
# Bioconda release.                                                          #
#                                                                            #
# As PacBio tools distributed via Bioconda are not covered by any service    #
# level agreement or the like, please *do not* contact a PacBio Field        #
# Applications Scientist or PacBio Customer Service for assistance with any  #
# Bioconda release. We instead provide an issue tracker for you to report    #
# issues to us at:                                                           #
#                                                                            #
#   https://github.com/PacificBiosciences/pbbioconda                         #
#                                                                            #
# We make no warranty that any such issue will be addressed,                 #
# to any extent or within any time frame.                                    #
#                                                                            #
# BSD 3-Clause Clear License                                                 #
#                                                                            #
# Please see https://github.com/PacificBiosciences/pbbioconda for            #
# information on License, Copyright and Disclaimer                           #
#                                                                            #
##############################################################################


##############################################################################
#                                                                            #
# PacBio(R) tools distributed via Bioconda are: pre-release versions, not    #
# necessarily ISO compliant, intended for Research Use Only and not for use  #
# in diagnostic procedures, intended only for command-line users, and        #
# possibly newer than the currently available SMRT(R) Analysis builds. While #
# efforts have been made to ensure that releases on Bioconda live up to the  #
# quality that PacBio strives for, we make no warranty regarding any         #
# Bioconda release.                                                          #
#                                                                            #
# As PacBio tools distributed via Bioconda are not covered by any service    #
# level agreement or the like, please *do not* contact a PacBio Field        #
# Applications Scientist or PacBio Customer Service for assistance with any  #
# Bioconda release. We instead provide an issue tracker for you to report    #
# issues to us at:                                                           #
#                                                                            #
#   https://github.com/PacificBiosciences/pbbioconda                         #
#                                                                            #
# We make no warranty that any such issue will be addressed,                 #
# to any extent or within any time frame.                                    #
#                                                                            #
# BSD 3-Clause Clear License                                                 #
#                                                                            #
# Please see https://github.com/PacificBiosciences/pbbioconda for            #
# information on License, Copyright and Disclaimer                           #
#                                                                            #
##############################################################################


##############################################################################
#                                                                            #
# PacBio(R) tools distributed via Bioconda are: pre-release versions, not    #
# necessarily ISO compliant, intended for Research Use Only and not for use  #
# in diagnostic procedures, intended only for command-line users, and        #
# possibly newer than the currently available SMRT(R) Analysis builds. While #
# efforts have been made to ensure that releases on Bioconda live up to the  #
# quality that PacBio strives for, we make no warranty regarding any         #
# Bioconda release.                                                          #
#                                                                            #
# As PacBio tools distributed via Bioconda are not covered by any service    #
# level agreement or the like, please *do not* contact a PacBio Field        #
# Applications Scientist or PacBio Customer Service for assistance with any  #
# Bioconda release. We instead provide an issue tracker for you to report    #
# issues to us at:                                                           #
#                                                                            #
#   https://github.com/PacificBiosciences/pbbioconda                         #
#                                                                            #
# We make no warranty that any such issue will be addressed,                 #
# to any extent or within any time frame.                                    #
#                                                                            #
# BSD 3-Clause Clear License                                                 #
#                                                                            #
# Please see https://github.com/PacificBiosciences/pbbioconda for            #
# information on License, Copyright and Disclaimer                           #
#                                                                            #
##############################################################################


##############################################################################
#                                                                            #
# PacBio(R) tools distributed via Bioconda are: pre-release versions, not    #
# necessarily ISO compliant, intended for Research Use Only and not for use  #
# in diagnostic procedures, intended only for command-line users, and        #
# possibly newer than the currently available SMRT(R) Analysis builds. While #
# efforts have been made to ensure that releases on Bioconda live up to the  #
# quality that PacBio strives for, we make no warranty regarding any         #
# Bioconda release.                                                          #
#                                                                            #
# As PacBio tools distributed via Bioconda are not covered by any service    #
# level agreement or the like, please *do not* contact a PacBio Field        #
# Applications Scientist or PacBio Customer Service for assistance with any  #
# Bioconda release. We instead provide an issue tracker for you to report    #
# issues to us at:                                                           #
#                                                                            #
#   https://github.com/PacificBiosciences/pbbioconda                         #
#                                                                            #
# We make no warranty that any such issue will be addressed,                 #
# to any extent or within any time frame.                                    #
#                                                                            #
# BSD 3-Clause Clear License                                                 #
#                                                                            #
# Please see https://github.com/PacificBiosciences/pbbioconda for            #
# information on License, Copyright and Disclaimer                           #
#                                                                            #
##############################################################################

done
export PREFIX=/home/vsts/conda/conda-bld/genomicconsensus_1630602807801/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place
export SRC_DIR=/home/vsts/conda/conda-bld/genomicconsensus_1630602807801/test_tmp
usage: variantCaller [-h] [--version] [--emit-tool-contract]
                     [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                     [--log-file LOG_FILE]
                     [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                     --referenceFilename REFERENCEFILENAME -o OUTPUTFILENAMES
                     [-j NUMWORKERS] [--minConfidence MINCONFIDENCE]
                     [--minCoverage MINCOVERAGE]
                     [--noEvidenceConsensusCall {nocall,reference,lowercasereference}]
                     [--coverage COVERAGE] [--minMapQV MINMAPQV]
                     [--referenceWindow REFERENCEWINDOWSASSTRING]
                     [--alignmentSetRefWindows]
                     [--referenceWindowsFile REFERENCEWINDOWSASSTRING]
                     [--barcode _BARCODE] [--readStratum READSTRATUM]
                     [--minReadScore MINREADSCORE] [--minSnr MINHQREGIONSNR]
                     [--minZScore MINZSCORE] [--minAccuracy MINACCURACY]
                     [--algorithm {quiver,arrow,plurality,poa,best}]
                     [--parametersFile PARAMETERSFILE]
                     [--parametersSpec PARAMETERSSPEC]
                     [--maskRadius MASKRADIUS] [--maskErrorRate MASKERRORRATE]
                     [--pdb] [--notrace] [--pdbAtStartup] [--profile]
                     [--annotateGFF] [--reportEffectiveCoverage] [--diploid]
                     [--queueSize QUEUESIZE] [--threaded]
                     [--referenceChunkSize REFERENCECHUNKSIZE]
                     [--fancyChunking] [--simpleChunking]
                     [--referenceChunkOverlap REFERENCECHUNKOVERLAP]
                     [--autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE]
                     [--aligner {affine,simple}] [--refineDinucleotideRepeats]
                     [--noRefineDinucleotideRepeats] [--fast]
                     [--skipUnrecognizedContigs]
                     inputFilename

Compute genomic consensus and call variants relative to the reference.

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: WARN)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)

Basic required options:
  inputFilename         The input cmp.h5 or BAM alignment file
  --referenceFilename REFERENCEFILENAME, --reference REFERENCEFILENAME, -r REFERENCEFILENAME
                        The filename of the reference FASTA file (default:
                        None)
  -o OUTPUTFILENAMES, --outputFilename OUTPUTFILENAMES
                        The output filename(s), as a comma-separated
                        list.Valid output formats are .fa/.fasta, .fq/.fastq,
                        .gff, .vcf (default: [])

Parallelism:
  -j NUMWORKERS, --numWorkers NUMWORKERS
                        The number of worker processes to be used (default: 1)

Output filtering:
  --minConfidence MINCONFIDENCE, -q MINCONFIDENCE
                        The minimum confidence for a variant call to be output
                        to variants.{gff,vcf} (default: 40)
  --minCoverage MINCOVERAGE, -x MINCOVERAGE
                        The minimum site coverage that must be achieved for
                        variant calls and consensus to be calculated for a
                        site. (default: 5)
  --noEvidenceConsensusCall {nocall,reference,lowercasereference}
                        The consensus base that will be output for sites with
                        no effective coverage. (default: lowercasereference)

Read selection/filtering:
  --coverage COVERAGE, -X COVERAGE
                        A designation of the maximum coverage level to be used
                        for analysis. Exact interpretation is algorithm-
                        specific. (default: 100)
  --minMapQV MINMAPQV, -m MINMAPQV
                        The minimum MapQV for reads that will be used for
                        analysis. (default: 10)
  --referenceWindow REFERENCEWINDOWSASSTRING, --referenceWindows REFERENCEWINDOWSASSTRING, -w REFERENCEWINDOWSASSTRING
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd (default: entire reference).
                        (default: None)
  --alignmentSetRefWindows
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd will be pulled from the alignment
                        file. (default: False)
  --referenceWindowsFile REFERENCEWINDOWSASSTRING, -W REFERENCEWINDOWSASSTRING
                        A file containing reference window designations, one
                        per line (default: None)
  --barcode _BARCODE    Only process reads with the given barcode name.
                        (default: None)
  --readStratum READSTRATUM
                        A string of the form 'n/N', where n, and N are
                        integers, 0 <= n < N, designating that the reads are
                        to be deterministically split into N strata of roughly
                        even size, and stratum n is to be used for variant and
                        consensus calling. This is mostly useful for Quiver
                        development. (default: None)
  --minReadScore MINREADSCORE
                        The minimum ReadScore for reads that will be used for
                        analysis (arrow-only). (default: 0.65)
  --minSnr MINHQREGIONSNR
                        The minimum acceptable signal-to-noise over all
                        channels for reads that will be used for analysis
                        (arrow-only). (default: 2.5)
  --minZScore MINZSCORE
                        The minimum acceptable z-score for reads that will be
                        used for analysis (arrow-only). (default: -3.5)
  --minAccuracy MINACCURACY
                        The minimum acceptable window-global alignment
                        accuracy for reads that will be used for the analysis
                        (arrow-only). (default: 0.82)

Algorithm and parameter settings:
  --algorithm {quiver,arrow,plurality,poa,best}
  --parametersFile PARAMETERSFILE, -P PARAMETERSFILE
                        Parameter set filename (such as ArrowParameters.json
                        or QuiverParameters.ini), or directory D such that
                        either D/*/GenomicConsensus/QuiverParameters.ini, or
                        D/GenomicConsensus/QuiverParameters.ini, is found. In
                        the former case, the lexically largest path is chosen.
                        (default: None)
  --parametersSpec PARAMETERSSPEC, -p PARAMETERSSPEC
                        Name of parameter set (chemistry.model) to select from
                        the parameters file, or just the name of the
                        chemistry, in which case the best available model is
                        chosen. Default is 'auto', which selects the best
                        parameter set from the alignment data (default: auto)
  --maskRadius MASKRADIUS
                        Radius of window to use when excluding local regions
                        for exceeding maskMinErrorRate, where 0 disables any
                        filtering (arrow-only). (default: 3)
  --maskErrorRate MASKERRORRATE
                        Maximum local error rate before the local region
                        defined by maskRadius is excluded from polishing
                        (arrow-only). (default: 0.7)

Verbosity and debugging/profiling:
  --pdb                 Enable Python debugger (default: False)
  --notrace             Suppress stacktrace for exceptions (to simplify
                        testing) (default: False)
  --pdbAtStartup        Drop into Python debugger at startup (requires ipdb)
                        (default: False)
  --profile             Enable Python-level profiling (using cProfile).
                        (default: False)
  --annotateGFF         Augment GFF variant records with additional
                        information (default: False)
  --reportEffectiveCoverage
                        Additionally record the *post-filtering* coverage at
                        variant sites (default: False)

Advanced configuration options:
  --diploid             Enable detection of heterozygous variants
                        (experimental) (default: False)
  --queueSize QUEUESIZE, -Q QUEUESIZE
  --threaded, -T        Run threads instead of processes (for debugging
                        purposes only) (default: False)
  --referenceChunkSize REFERENCECHUNKSIZE, -C REFERENCECHUNKSIZE
  --fancyChunking       Adaptive reference chunking designed to handle
                        coverage cutouts better (default: True)
  --simpleChunking      Disable adaptive reference chunking (default: True)
  --referenceChunkOverlap REFERENCECHUNKOVERLAP
  --autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE
                        Disable the HDF5 chunk cache when the number of
                        datasets in the cmp.h5 exceeds the given threshold
                        (default: 500)
  --aligner {affine,simple}, -a {affine,simple}
                        The pairwise alignment algorithm that will be used to
                        produce variant calls from the consensus (Quiver
                        only). (default: affine)
  --refineDinucleotideRepeats
                        Require quiver maximum likelihood search to try one
                        less/more repeat copy in dinucleotide repeats, which
                        seem to be the most frequent cause of suboptimal
                        convergence (getting trapped in local optimum) (Quiver
                        only) (default: True)
  --noRefineDinucleotideRepeats
                        Disable dinucleotide refinement (default: True)
  --fast                Cut some corners to run faster. Unsupported! (default:
                        False)
  --skipUnrecognizedContigs
                        Do not abort when told to process a reference window
                        (via -w/--referenceWindow[s]) that has no aligned
                        coverage. Outputs emptyish files if there are no
                        remaining non-degenerate windows. Only intended for
                        use by smrtpipe scatter/gather. (default: False)
usage: summarizeConsensus [-h] [--version] [--emit-tool-contract]
                          [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                          [--log-file LOG_FILE]
                          [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                          --variantsGff VARIANTSGFF [-o OUTPUT]
                          alignment_summary

Augment the alignment_summary.gff file with consensus and variants
information.

positional arguments:
  alignment_summary     Alignment summary GFF file

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: ERROR)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)
  --variantsGff VARIANTSGFF
                        Input variants.gff or variants.gff.gz filename
                        (default: None)
  -o OUTPUT, --output OUTPUT
                        Output alignment_summary.gff filename (default: None)
usage: gffToVcf [-h] [--version] [--emit-tool-contract]
                [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                [--log-file LOG_FILE]
                [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                [--globalReference GLOBALREFERENCE]
                gffFile

Utility for converting variant GFF3 files to 1000 Genomes VCF

positional arguments:
  gffFile               GFF file

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: ERROR)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)
  --globalReference GLOBALREFERENCE
                        Name of global reference to put in Meta field
                        (default: None)
usage: gffToBed [-h] [--version] [--emit-tool-contract]
                [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                [--log-file LOG_FILE]
                [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                [--name NAME] [--description DESCRIPTION]
                [--useScore USESCORE]
                {variants,coverage} gff

Convert .gff to .bed format.

positional arguments:
  {variants,coverage}   Run purpose
  gff                   GFF file

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: ERROR)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)
  --name NAME           track name to display in header (default: variants)
  --description DESCRIPTION
                        track description to display in header (default:
                        PacBio: snps, insertions, and deletions derived from
                        consensus calls against reference)
  --useScore USESCORE   whether or not to use score for feature display
                        (default: 0)
usage: variantCaller [-h] [--version] [--emit-tool-contract]
                     [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                     [--log-file LOG_FILE]
                     [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                     --referenceFilename REFERENCEFILENAME -o OUTPUTFILENAMES
                     [-j NUMWORKERS] [--minConfidence MINCONFIDENCE]
                     [--minCoverage MINCOVERAGE]
                     [--noEvidenceConsensusCall {nocall,reference,lowercasereference}]
                     [--coverage COVERAGE] [--minMapQV MINMAPQV]
                     [--referenceWindow REFERENCEWINDOWSASSTRING]
                     [--alignmentSetRefWindows]
                     [--referenceWindowsFile REFERENCEWINDOWSASSTRING]
                     [--barcode _BARCODE] [--readStratum READSTRATUM]
                     [--minReadScore MINREADSCORE] [--minSnr MINHQREGIONSNR]
                     [--minZScore MINZSCORE] [--minAccuracy MINACCURACY]
                     [--algorithm {quiver,arrow,plurality,poa,best}]
                     [--parametersFile PARAMETERSFILE]
                     [--parametersSpec PARAMETERSSPEC]
                     [--maskRadius MASKRADIUS] [--maskErrorRate MASKERRORRATE]
                     [--pdb] [--notrace] [--pdbAtStartup] [--profile]
                     [--annotateGFF] [--reportEffectiveCoverage] [--diploid]
                     [--queueSize QUEUESIZE] [--threaded]
                     [--referenceChunkSize REFERENCECHUNKSIZE]
                     [--fancyChunking] [--simpleChunking]
                     [--referenceChunkOverlap REFERENCECHUNKOVERLAP]
                     [--autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE]
                     [--aligner {affine,simple}] [--refineDinucleotideRepeats]
                     [--noRefineDinucleotideRepeats] [--fast]
                     [--skipUnrecognizedContigs]
                     inputFilename

Compute genomic consensus and call variants relative to the reference.

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: WARN)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)

Basic required options:
  inputFilename         The input cmp.h5 or BAM alignment file
  --referenceFilename REFERENCEFILENAME, --reference REFERENCEFILENAME, -r REFERENCEFILENAME
                        The filename of the reference FASTA file (default:
                        None)
  -o OUTPUTFILENAMES, --outputFilename OUTPUTFILENAMES
                        The output filename(s), as a comma-separated
                        list.Valid output formats are .fa/.fasta, .fq/.fastq,
                        .gff, .vcf (default: [])

Parallelism:
  -j NUMWORKERS, --numWorkers NUMWORKERS
                        The number of worker processes to be used (default: 1)

Output filtering:
  --minConfidence MINCONFIDENCE, -q MINCONFIDENCE
                        The minimum confidence for a variant call to be output
                        to variants.{gff,vcf} (default: 40)
  --minCoverage MINCOVERAGE, -x MINCOVERAGE
                        The minimum site coverage that must be achieved for
                        variant calls and consensus to be calculated for a
                        site. (default: 5)
  --noEvidenceConsensusCall {nocall,reference,lowercasereference}
                        The consensus base that will be output for sites with
                        no effective coverage. (default: lowercasereference)

Read selection/filtering:
  --coverage COVERAGE, -X COVERAGE
                        A designation of the maximum coverage level to be used
                        for analysis. Exact interpretation is algorithm-
                        specific. (default: 100)
  --minMapQV MINMAPQV, -m MINMAPQV
                        The minimum MapQV for reads that will be used for
                        analysis. (default: 10)
  --referenceWindow REFERENCEWINDOWSASSTRING, --referenceWindows REFERENCEWINDOWSASSTRING, -w REFERENCEWINDOWSASSTRING
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd (default: entire reference).
                        (default: None)
  --alignmentSetRefWindows
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd will be pulled from the alignment
                        file. (default: False)
  --referenceWindowsFile REFERENCEWINDOWSASSTRING, -W REFERENCEWINDOWSASSTRING
                        A file containing reference window designations, one
                        per line (default: None)
  --barcode _BARCODE    Only process reads with the given barcode name.
                        (default: None)
  --readStratum READSTRATUM
                        A string of the form 'n/N', where n, and N are
                        integers, 0 <= n < N, designating that the reads are
                        to be deterministically split into N strata of roughly
                        even size, and stratum n is to be used for variant and
                        consensus calling. This is mostly useful for Quiver
                        development. (default: None)
  --minReadScore MINREADSCORE
                        The minimum ReadScore for reads that will be used for
                        analysis (arrow-only). (default: 0.65)
  --minSnr MINHQREGIONSNR
                        The minimum acceptable signal-to-noise over all
                        channels for reads that will be used for analysis
                        (arrow-only). (default: 2.5)
  --minZScore MINZSCORE
                        The minimum acceptable z-score for reads that will be
                        used for analysis (arrow-only). (default: -3.5)
  --minAccuracy MINACCURACY
                        The minimum acceptable window-global alignment
                        accuracy for reads that will be used for the analysis
                        (arrow-only). (default: 0.82)

Algorithm and parameter settings:
  --algorithm {quiver,arrow,plurality,poa,best}
  --parametersFile PARAMETERSFILE, -P PARAMETERSFILE
                        Parameter set filename (such as ArrowParameters.json
                        or QuiverParameters.ini), or directory D such that
                        either D/*/GenomicConsensus/QuiverParameters.ini, or
                        D/GenomicConsensus/QuiverParameters.ini, is found. In
                        the former case, the lexically largest path is chosen.
                        (default: None)
  --parametersSpec PARAMETERSSPEC, -p PARAMETERSSPEC
                        Name of parameter set (chemistry.model) to select from
                        the parameters file, or just the name of the
                        chemistry, in which case the best available model is
                        chosen. Default is 'auto', which selects the best
                        parameter set from the alignment data (default: auto)
  --maskRadius MASKRADIUS
                        Radius of window to use when excluding local regions
                        for exceeding maskMinErrorRate, where 0 disables any
                        filtering (arrow-only). (default: 3)
  --maskErrorRate MASKERRORRATE
                        Maximum local error rate before the local region
                        defined by maskRadius is excluded from polishing
                        (arrow-only). (default: 0.7)

Verbosity and debugging/profiling:
  --pdb                 Enable Python debugger (default: False)
  --notrace             Suppress stacktrace for exceptions (to simplify
                        testing) (default: False)
  --pdbAtStartup        Drop into Python debugger at startup (requires ipdb)
                        (default: False)
  --profile             Enable Python-level profiling (using cProfile).
                        (default: False)
  --annotateGFF         Augment GFF variant records with additional
                        information (default: False)
  --reportEffectiveCoverage
                        Additionally record the *post-filtering* coverage at
                        variant sites (default: False)

Advanced configuration options:
  --diploid             Enable detection of heterozygous variants
                        (experimental) (default: False)
  --queueSize QUEUESIZE, -Q QUEUESIZE
  --threaded, -T        Run threads instead of processes (for debugging
                        purposes only) (default: False)
  --referenceChunkSize REFERENCECHUNKSIZE, -C REFERENCECHUNKSIZE
  --fancyChunking       Adaptive reference chunking designed to handle
                        coverage cutouts better (default: True)
  --simpleChunking      Disable adaptive reference chunking (default: True)
  --referenceChunkOverlap REFERENCECHUNKOVERLAP
  --autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE
                        Disable the HDF5 chunk cache when the number of
                        datasets in the cmp.h5 exceeds the given threshold
                        (default: 500)
  --aligner {affine,simple}, -a {affine,simple}
                        The pairwise alignment algorithm that will be used to
                        produce variant calls from the consensus (Quiver
                        only). (default: affine)
  --refineDinucleotideRepeats
                        Require quiver maximum likelihood search to try one
                        less/more repeat copy in dinucleotide repeats, which
                        seem to be the most frequent cause of suboptimal
                        convergence (getting trapped in local optimum) (Quiver
                        only) (default: True)
  --noRefineDinucleotideRepeats
                        Disable dinucleotide refinement (default: True)
  --fast                Cut some corners to run faster. Unsupported! (default:
                        False)
  --skipUnrecognizedContigs
                        Do not abort when told to process a reference window
                        (via -w/--referenceWindow[s]) that has no aligned
                        coverage. Outputs emptyish files if there are no
                        remaining non-degenerate windows. Only intended for
                        use by smrtpipe scatter/gather. (default: False)
usage: variantCaller [-h] [--version] [--emit-tool-contract]
                     [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                     [--log-file LOG_FILE]
                     [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                     --referenceFilename REFERENCEFILENAME -o OUTPUTFILENAMES
                     [-j NUMWORKERS] [--minConfidence MINCONFIDENCE]
                     [--minCoverage MINCOVERAGE]
                     [--noEvidenceConsensusCall {nocall,reference,lowercasereference}]
                     [--coverage COVERAGE] [--minMapQV MINMAPQV]
                     [--referenceWindow REFERENCEWINDOWSASSTRING]
                     [--alignmentSetRefWindows]
                     [--referenceWindowsFile REFERENCEWINDOWSASSTRING]
                     [--barcode _BARCODE] [--readStratum READSTRATUM]
                     [--minReadScore MINREADSCORE] [--minSnr MINHQREGIONSNR]
                     [--minZScore MINZSCORE] [--minAccuracy MINACCURACY]
                     [--algorithm {quiver,arrow,plurality,poa,best}]
                     [--parametersFile PARAMETERSFILE]
                     [--parametersSpec PARAMETERSSPEC]
                     [--maskRadius MASKRADIUS] [--maskErrorRate MASKERRORRATE]
                     [--pdb] [--notrace] [--pdbAtStartup] [--profile]
                     [--annotateGFF] [--reportEffectiveCoverage] [--diploid]
                     [--queueSize QUEUESIZE] [--threaded]
                     [--referenceChunkSize REFERENCECHUNKSIZE]
                     [--fancyChunking] [--simpleChunking]
                     [--referenceChunkOverlap REFERENCECHUNKOVERLAP]
                     [--autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE]
                     [--aligner {affine,simple}] [--refineDinucleotideRepeats]
                     [--noRefineDinucleotideRepeats] [--fast]
                     [--skipUnrecognizedContigs]
                     inputFilename

Compute genomic consensus and call variants relative to the reference.

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: WARN)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)

Basic required options:
  inputFilename         The input cmp.h5 or BAM alignment file
  --referenceFilename REFERENCEFILENAME, --reference REFERENCEFILENAME, -r REFERENCEFILENAME
                        The filename of the reference FASTA file (default:
                        None)
  -o OUTPUTFILENAMES, --outputFilename OUTPUTFILENAMES
                        The output filename(s), as a comma-separated
                        list.Valid output formats are .fa/.fasta, .fq/.fastq,
                        .gff, .vcf (default: [])

Parallelism:
  -j NUMWORKERS, --numWorkers NUMWORKERS
                        The number of worker processes to be used (default: 1)

Output filtering:
  --minConfidence MINCONFIDENCE, -q MINCONFIDENCE
                        The minimum confidence for a variant call to be output
                        to variants.{gff,vcf} (default: 40)
  --minCoverage MINCOVERAGE, -x MINCOVERAGE
                        The minimum site coverage that must be achieved for
                        variant calls and consensus to be calculated for a
                        site. (default: 5)
  --noEvidenceConsensusCall {nocall,reference,lowercasereference}
                        The consensus base that will be output for sites with
                        no effective coverage. (default: lowercasereference)

Read selection/filtering:
  --coverage COVERAGE, -X COVERAGE
                        A designation of the maximum coverage level to be used
                        for analysis. Exact interpretation is algorithm-
                        specific. (default: 100)
  --minMapQV MINMAPQV, -m MINMAPQV
                        The minimum MapQV for reads that will be used for
                        analysis. (default: 10)
  --referenceWindow REFERENCEWINDOWSASSTRING, --referenceWindows REFERENCEWINDOWSASSTRING, -w REFERENCEWINDOWSASSTRING
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd (default: entire reference).
                        (default: None)
  --alignmentSetRefWindows
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd will be pulled from the alignment
                        file. (default: False)
  --referenceWindowsFile REFERENCEWINDOWSASSTRING, -W REFERENCEWINDOWSASSTRING
                        A file containing reference window designations, one
                        per line (default: None)
  --barcode _BARCODE    Only process reads with the given barcode name.
                        (default: None)
  --readStratum READSTRATUM
                        A string of the form 'n/N', where n, and N are
                        integers, 0 <= n < N, designating that the reads are
                        to be deterministically split into N strata of roughly
                        even size, and stratum n is to be used for variant and
                        consensus calling. This is mostly useful for Quiver
                        development. (default: None)
  --minReadScore MINREADSCORE
                        The minimum ReadScore for reads that will be used for
                        analysis (arrow-only). (default: 0.65)
  --minSnr MINHQREGIONSNR
                        The minimum acceptable signal-to-noise over all
                        channels for reads that will be used for analysis
                        (arrow-only). (default: 2.5)
  --minZScore MINZSCORE
                        The minimum acceptable z-score for reads that will be
                        used for analysis (arrow-only). (default: -3.5)
  --minAccuracy MINACCURACY
                        The minimum acceptable window-global alignment
                        accuracy for reads that will be used for the analysis
                        (arrow-only). (default: 0.82)

Algorithm and parameter settings:
  --algorithm {quiver,arrow,plurality,poa,best}
  --parametersFile PARAMETERSFILE, -P PARAMETERSFILE
                        Parameter set filename (such as ArrowParameters.json
                        or QuiverParameters.ini), or directory D such that
                        either D/*/GenomicConsensus/QuiverParameters.ini, or
                        D/GenomicConsensus/QuiverParameters.ini, is found. In
                        the former case, the lexically largest path is chosen.
                        (default: None)
  --parametersSpec PARAMETERSSPEC, -p PARAMETERSSPEC
                        Name of parameter set (chemistry.model) to select from
                        the parameters file, or just the name of the
                        chemistry, in which case the best available model is
                        chosen. Default is 'auto', which selects the best
                        parameter set from the alignment data (default: auto)
  --maskRadius MASKRADIUS
                        Radius of window to use when excluding local regions
                        for exceeding maskMinErrorRate, where 0 disables any
                        filtering (arrow-only). (default: 3)
  --maskErrorRate MASKERRORRATE
                        Maximum local error rate before the local region
                        defined by maskRadius is excluded from polishing
                        (arrow-only). (default: 0.7)

Verbosity and debugging/profiling:
  --pdb                 Enable Python debugger (default: False)
  --notrace             Suppress stacktrace for exceptions (to simplify
                        testing) (default: False)
  --pdbAtStartup        Drop into Python debugger at startup (requires ipdb)
                        (default: False)
  --profile             Enable Python-level profiling (using cProfile).
                        (default: False)
  --annotateGFF         Augment GFF variant records with additional
                        information (default: False)
  --reportEffectiveCoverage
                        Additionally record the *post-filtering* coverage at
                        variant sites (default: False)

Advanced configuration options:
  --diploid             Enable detection of heterozygous variants
                        (experimental) (default: False)
  --queueSize QUEUESIZE, -Q QUEUESIZE
  --threaded, -T        Run threads instead of processes (for debugging
                        purposes only) (default: False)
  --referenceChunkSize REFERENCECHUNKSIZE, -C REFERENCECHUNKSIZE
  --fancyChunking       Adaptive reference chunking designed to handle
                        coverage cutouts better (default: True)
  --simpleChunking      Disable adaptive reference chunking (default: True)
  --referenceChunkOverlap REFERENCECHUNKOVERLAP
  --autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE
                        Disable the HDF5 chunk cache when the number of
                        datasets in the cmp.h5 exceeds the given threshold
                        (default: 500)
  --aligner {affine,simple}, -a {affine,simple}
                        The pairwise alignment algorithm that will be used to
                        produce variant calls from the consensus (Quiver
                        only). (default: affine)
  --refineDinucleotideRepeats
                        Require quiver maximum likelihood search to try one
                        less/more repeat copy in dinucleotide repeats, which
                        seem to be the most frequent cause of suboptimal
                        convergence (getting trapped in local optimum) (Quiver
                        only) (default: True)
  --noRefineDinucleotideRepeats
                        Disable dinucleotide refinement (default: True)
  --fast                Cut some corners to run faster. Unsupported! (default:
                        False)
  --skipUnrecognizedContigs
                        Do not abort when told to process a reference window
                        (via -w/--referenceWindow[s]) that has no aligned
                        coverage. Outputs emptyish files if there are no
                        remaining non-degenerate windows. Only intended for
                        use by smrtpipe scatter/gather. (default: False)
usage: variantCaller [-h] [--version] [--emit-tool-contract]
                     [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                     [--log-file LOG_FILE]
                     [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                     --referenceFilename REFERENCEFILENAME -o OUTPUTFILENAMES
                     [-j NUMWORKERS] [--minConfidence MINCONFIDENCE]
                     [--minCoverage MINCOVERAGE]
                     [--noEvidenceConsensusCall {nocall,reference,lowercasereference}]
                     [--coverage COVERAGE] [--minMapQV MINMAPQV]
                     [--referenceWindow REFERENCEWINDOWSASSTRING]
                     [--alignmentSetRefWindows]
                     [--referenceWindowsFile REFERENCEWINDOWSASSTRING]
                     [--barcode _BARCODE] [--readStratum READSTRATUM]
                     [--minReadScore MINREADSCORE] [--minSnr MINHQREGIONSNR]
                     [--minZScore MINZSCORE] [--minAccuracy MINACCURACY]
                     [--algorithm {quiver,arrow,plurality,poa,best}]
                     [--parametersFile PARAMETERSFILE]
                     [--parametersSpec PARAMETERSSPEC]
                     [--maskRadius MASKRADIUS] [--maskErrorRate MASKERRORRATE]
                     [--pdb] [--notrace] [--pdbAtStartup] [--profile]
                     [--annotateGFF] [--reportEffectiveCoverage] [--diploid]
                     [--queueSize QUEUESIZE] [--threaded]
                     [--referenceChunkSize REFERENCECHUNKSIZE]
                     [--fancyChunking] [--simpleChunking]
                     [--referenceChunkOverlap REFERENCECHUNKOVERLAP]
                     [--autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE]
                     [--aligner {affine,simple}] [--refineDinucleotideRepeats]
                     [--noRefineDinucleotideRepeats] [--fast]
                     [--skipUnrecognizedContigs]
                     inputFilename

Compute genomic consensus and call variants relative to the reference.

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: WARN)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)

Basic required options:
  inputFilename         The input cmp.h5 or BAM alignment file
  --referenceFilename REFERENCEFILENAME, --reference REFERENCEFILENAME, -r REFERENCEFILENAME
                        The filename of the reference FASTA file (default:
                        None)
  -o OUTPUTFILENAMES, --outputFilename OUTPUTFILENAMES
                        The output filename(s), as a comma-separated
                        list.Valid output formats are .fa/.fasta, .fq/.fastq,
                        .gff, .vcf (default: [])

Parallelism:
  -j NUMWORKERS, --numWorkers NUMWORKERS
                        The number of worker processes to be used (default: 1)

Output filtering:
  --minConfidence MINCONFIDENCE, -q MINCONFIDENCE
                        The minimum confidence for a variant call to be output
                        to variants.{gff,vcf} (default: 40)
  --minCoverage MINCOVERAGE, -x MINCOVERAGE
                        The minimum site coverage that must be achieved for
                        variant calls and consensus to be calculated for a
                        site. (default: 5)
  --noEvidenceConsensusCall {nocall,reference,lowercasereference}
                        The consensus base that will be output for sites with
                        no effective coverage. (default: lowercasereference)

Read selection/filtering:
  --coverage COVERAGE, -X COVERAGE
                        A designation of the maximum coverage level to be used
                        for analysis. Exact interpretation is algorithm-
                        specific. (default: 100)
  --minMapQV MINMAPQV, -m MINMAPQV
                        The minimum MapQV for reads that will be used for
                        analysis. (default: 10)
  --referenceWindow REFERENCEWINDOWSASSTRING, --referenceWindows REFERENCEWINDOWSASSTRING, -w REFERENCEWINDOWSASSTRING
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd (default: entire reference).
                        (default: None)
  --alignmentSetRefWindows
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd will be pulled from the alignment
                        file. (default: False)
  --referenceWindowsFile REFERENCEWINDOWSASSTRING, -W REFERENCEWINDOWSASSTRING
                        A file containing reference window designations, one
                        per line (default: None)
  --barcode _BARCODE    Only process reads with the given barcode name.
                        (default: None)
  --readStratum READSTRATUM
                        A string of the form 'n/N', where n, and N are
                        integers, 0 <= n < N, designating that the reads are
                        to be deterministically split into N strata of roughly
                        even size, and stratum n is to be used for variant and
                        consensus calling. This is mostly useful for Quiver
                        development. (default: None)
  --minReadScore MINREADSCORE
                        The minimum ReadScore for reads that will be used for
                        analysis (arrow-only). (default: 0.65)
  --minSnr MINHQREGIONSNR
                        The minimum acceptable signal-to-noise over all
                        channels for reads that will be used for analysis
                        (arrow-only). (default: 2.5)
  --minZScore MINZSCORE
                        The minimum acceptable z-score for reads that will be
                        used for analysis (arrow-only). (default: -3.5)
  --minAccuracy MINACCURACY
                        The minimum acceptable window-global alignment
                        accuracy for reads that will be used for the analysis
                        (arrow-only). (default: 0.82)

Algorithm and parameter settings:
  --algorithm {quiver,arrow,plurality,poa,best}
  --parametersFile PARAMETERSFILE, -P PARAMETERSFILE
                        Parameter set filename (such as ArrowParameters.json
                        or QuiverParameters.ini), or directory D such that
                        either D/*/GenomicConsensus/QuiverParameters.ini, or
                        D/GenomicConsensus/QuiverParameters.ini, is found. In
                        the former case, the lexically largest path is chosen.
                        (default: None)
  --parametersSpec PARAMETERSSPEC, -p PARAMETERSSPEC
                        Name of parameter set (chemistry.model) to select from
                        the parameters file, or just the name of the
                        chemistry, in which case the best available model is
                        chosen. Default is 'auto', which selects the best
                        parameter set from the alignment data (default: auto)
  --maskRadius MASKRADIUS
                        Radius of window to use when excluding local regions
                        for exceeding maskMinErrorRate, where 0 disables any
                        filtering (arrow-only). (default: 3)
  --maskErrorRate MASKERRORRATE
                        Maximum local error rate before the local region
                        defined by maskRadius is excluded from polishing
                        (arrow-only). (default: 0.7)

Verbosity and debugging/profiling:
  --pdb                 Enable Python debugger (default: False)
  --notrace             Suppress stacktrace for exceptions (to simplify
                        testing) (default: False)
  --pdbAtStartup        Drop into Python debugger at startup (requires ipdb)
                        (default: False)
  --profile             Enable Python-level profiling (using cProfile).
                        (default: False)
  --annotateGFF         Augment GFF variant records with additional
                        information (default: False)
  --reportEffectiveCoverage
                        Additionally record the *post-filtering* coverage at
                        variant sites (default: False)

Advanced configuration options:
  --diploid             Enable detection of heterozygous variants
                        (experimental) (default: False)
  --queueSize QUEUESIZE, -Q QUEUESIZE
  --threaded, -T        Run threads instead of processes (for debugging
                        purposes only) (default: False)
  --referenceChunkSize REFERENCECHUNKSIZE, -C REFERENCECHUNKSIZE
  --fancyChunking       Adaptive reference chunking designed to handle
                        coverage cutouts better (default: True)
  --simpleChunking      Disable adaptive reference chunking (default: True)
  --referenceChunkOverlap REFERENCECHUNKOVERLAP
  --autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE
                        Disable the HDF5 chunk cache when the number of
                        datasets in the cmp.h5 exceeds the given threshold
                        (default: 500)
  --aligner {affine,simple}, -a {affine,simple}
                        The pairwise alignment algorithm that will be used to
                        produce variant calls from the consensus (Quiver
                        only). (default: affine)
  --refineDinucleotideRepeats
                        Require quiver maximum likelihood search to try one
                        less/more repeat copy in dinucleotide repeats, which
                        seem to be the most frequent cause of suboptimal
                        convergence (getting trapped in local optimum) (Quiver
                        only) (default: True)
  --noRefineDinucleotideRepeats
                        Disable dinucleotide refinement (default: True)
  --fast                Cut some corners to run faster. Unsupported! (default:
                        False)
  --skipUnrecognizedContigs
                        Do not abort when told to process a reference window
                        (via -w/--referenceWindow[s]) that has no aligned
                        coverage. Outputs emptyish files if there are no
                        remaining non-degenerate windows. Only intended for
                        use by smrtpipe scatter/gather. (default: False)
usage: variantCaller [-h] [--version] [--emit-tool-contract]
                     [--resolved-tool-contract RESOLVED_TOOL_CONTRACT]
                     [--log-file LOG_FILE]
                     [--log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL} | --debug | --quiet | -v]
                     --referenceFilename REFERENCEFILENAME -o OUTPUTFILENAMES
                     [-j NUMWORKERS] [--minConfidence MINCONFIDENCE]
                     [--minCoverage MINCOVERAGE]
                     [--noEvidenceConsensusCall {nocall,reference,lowercasereference}]
                     [--coverage COVERAGE] [--minMapQV MINMAPQV]
                     [--referenceWindow REFERENCEWINDOWSASSTRING]
                     [--alignmentSetRefWindows]
                     [--referenceWindowsFile REFERENCEWINDOWSASSTRING]
                     [--barcode _BARCODE] [--readStratum READSTRATUM]
                     [--minReadScore MINREADSCORE] [--minSnr MINHQREGIONSNR]
                     [--minZScore MINZSCORE] [--minAccuracy MINACCURACY]
                     [--algorithm {quiver,arrow,plurality,poa,best}]
                     [--parametersFile PARAMETERSFILE]
                     [--parametersSpec PARAMETERSSPEC]
                     [--maskRadius MASKRADIUS] [--maskErrorRate MASKERRORRATE]
                     [--pdb] [--notrace] [--pdbAtStartup] [--profile]
                     [--annotateGFF] [--reportEffectiveCoverage] [--diploid]
                     [--queueSize QUEUESIZE] [--threaded]
                     [--referenceChunkSize REFERENCECHUNKSIZE]
                     [--fancyChunking] [--simpleChunking]
                     [--referenceChunkOverlap REFERENCECHUNKOVERLAP]
                     [--autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE]
                     [--aligner {affine,simple}] [--refineDinucleotideRepeats]
                     [--noRefineDinucleotideRepeats] [--fast]
                     [--skipUnrecognizedContigs]
                     inputFilename

Compute genomic consensus and call variants relative to the reference.

optional arguments:
  -h, --help            show this help message and exit
  --version             show program's version number and exit
  --emit-tool-contract  Emit Tool Contract to stdout (default: False)
  --resolved-tool-contract RESOLVED_TOOL_CONTRACT
                        Run Tool directly from a PacBio Resolved tool contract
                        (default: None)
  --log-file LOG_FILE   Write the log to file. Default(None) will write to
                        stdout. (default: None)
  --log-level {DEBUG,INFO,WARNING,ERROR,CRITICAL}
                        Set log level (default: WARN)
  --debug               Alias for setting log level to DEBUG (default: False)
  --quiet               Alias for setting log level to CRITICAL to suppress
                        output. (default: False)
  -v, --verbose         Set the verbosity level. (default: None)

Basic required options:
  inputFilename         The input cmp.h5 or BAM alignment file
  --referenceFilename REFERENCEFILENAME, --reference REFERENCEFILENAME, -r REFERENCEFILENAME
                        The filename of the reference FASTA file (default:
                        None)
  -o OUTPUTFILENAMES, --outputFilename OUTPUTFILENAMES
                        The output filename(s), as a comma-separated
                        list.Valid output formats are .fa/.fasta, .fq/.fastq,
                        .gff, .vcf (default: [])

Parallelism:
  -j NUMWORKERS, --numWorkers NUMWORKERS
                        The number of worker processes to be used (default: 1)

Output filtering:
  --minConfidence MINCONFIDENCE, -q MINCONFIDENCE
                        The minimum confidence for a variant call to be output
                        to variants.{gff,vcf} (default: 40)
  --minCoverage MINCOVERAGE, -x MINCOVERAGE
                        The minimum site coverage that must be achieved for
                        variant calls and consensus to be calculated for a
                        site. (default: 5)
  --noEvidenceConsensusCall {nocall,reference,lowercasereference}
                        The consensus base that will be output for sites with
                        no effective coverage. (default: lowercasereference)

Read selection/filtering:
  --coverage COVERAGE, -X COVERAGE
                        A designation of the maximum coverage level to be used
                        for analysis. Exact interpretation is algorithm-
                        specific. (default: 100)
  --minMapQV MINMAPQV, -m MINMAPQV
                        The minimum MapQV for reads that will be used for
                        analysis. (default: 10)
  --referenceWindow REFERENCEWINDOWSASSTRING, --referenceWindows REFERENCEWINDOWSASSTRING, -w REFERENCEWINDOWSASSTRING
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd (default: entire reference).
                        (default: None)
  --alignmentSetRefWindows
                        The window (or multiple comma-delimited windows) of
                        the reference to be processed, in the format refGroup
                        :refStart-refEnd will be pulled from the alignment
                        file. (default: False)
  --referenceWindowsFile REFERENCEWINDOWSASSTRING, -W REFERENCEWINDOWSASSTRING
                        A file containing reference window designations, one
                        per line (default: None)
  --barcode _BARCODE    Only process reads with the given barcode name.
                        (default: None)
  --readStratum READSTRATUM
                        A string of the form 'n/N', where n, and N are
                        integers, 0 <= n < N, designating that the reads are
                        to be deterministically split into N strata of roughly
                        even size, and stratum n is to be used for variant and
                        consensus calling. This is mostly useful for Quiver
                        development. (default: None)
  --minReadScore MINREADSCORE
                        The minimum ReadScore for reads that will be used for
                        analysis (arrow-only). (default: 0.65)
  --minSnr MINHQREGIONSNR
                        The minimum acceptable signal-to-noise over all
                        channels for reads that will be used for analysis
                        (arrow-only). (default: 2.5)
  --minZScore MINZSCORE
                        The minimum acceptable z-score for reads that will be
                        used for analysis (arrow-only). (default: -3.5)
  --minAccuracy MINACCURACY
                        The minimum acceptable window-global alignment
                        accuracy for reads that will be used for the analysis
                        (arrow-only). (default: 0.82)

Algorithm and parameter settings:
  --algorithm {quiver,arrow,plurality,poa,best}
  --parametersFile PARAMETERSFILE, -P PARAMETERSFILE
                        Parameter set filename (such as ArrowParameters.json
                        or QuiverParameters.ini), or directory D such that
                        either D/*/GenomicConsensus/QuiverParameters.ini, or
                        D/GenomicConsensus/QuiverParameters.ini, is found. In
                        the former case, the lexically largest path is chosen.
                        (default: None)
  --parametersSpec PARAMETERSSPEC, -p PARAMETERSSPEC
                        Name of parameter set (chemistry.model) to select from
                        the parameters file, or just the name of the
                        chemistry, in which case the best available model is
                        chosen. Default is 'auto', which selects the best
                        parameter set from the alignment data (default: auto)
  --maskRadius MASKRADIUS
                        Radius of window to use when excluding local regions
                        for exceeding maskMinErrorRate, where 0 disables any
                        filtering (arrow-only). (default: 3)
  --maskErrorRate MASKERRORRATE
                        Maximum local error rate before the local region
                        defined by maskRadius is excluded from polishing
                        (arrow-only). (default: 0.7)

Verbosity and debugging/profiling:
  --pdb                 Enable Python debugger (default: False)
  --notrace             Suppress stacktrace for exceptions (to simplify
                        testing) (default: False)
  --pdbAtStartup        Drop into Python debugger at startup (requires ipdb)
                        (default: False)
  --profile             Enable Python-level profiling (using cProfile).
                        (default: False)
  --annotateGFF         Augment GFF variant records with additional
                        information (default: False)
  --reportEffectiveCoverage
                        Additionally record the *post-filtering* coverage at
                        variant sites (default: False)

Advanced configuration options:
  --diploid             Enable detection of heterozygous variants
                        (experimental) (default: False)
  --queueSize QUEUESIZE, -Q QUEUESIZE
  --threaded, -T        Run threads instead of processes (for debugging
                        purposes only) (default: False)
  --referenceChunkSize REFERENCECHUNKSIZE, -C REFERENCECHUNKSIZE
  --fancyChunking       Adaptive reference chunking designed to handle
                        coverage cutouts better (default: True)
  --simpleChunking      Disable adaptive reference chunking (default: True)
  --referenceChunkOverlap REFERENCECHUNKOVERLAP
  --autoDisableHdf5ChunkCache AUTODISABLEHDF5CHUNKCACHE
                        Disable the HDF5 chunk cache when the number of
                        datasets in the cmp.h5 exceeds the given threshold
                        (default: 500)
  --aligner {affine,simple}, -a {affine,simple}
                        The pairwise alignment algorithm that will be used to
                        produce variant calls from the consensus (Quiver
                        only). (default: affine)
  --refineDinucleotideRepeats
                        Require quiver maximum likelihood search to try one
                        less/more repeat copy in dinucleotide repeats, which
                        seem to be the most frequent cause of suboptimal
                        convergence (getting trapped in local optimum) (Quiver
                        only) (default: True)
  --noRefineDinucleotideRepeats
                        Disable dinucleotide refinement (default: True)
  --fast                Cut some corners to run faster. Unsupported! (default:
                        False)
  --skipUnrecognizedContigs
                        Do not abort when told to process a reference window
                        (via -w/--referenceWindow[s]) that has no aligned
                        coverage. Outputs emptyish files if there are no
                        remaining non-degenerate windows. Only intended for
                        use by smrtpipe scatter/gather. (default: False)

Resource usage statistics from testing genomicconsensus:
   Process count: 4
   CPU time: Sys=0:00:00.1, User=0:00:00.2
   Memory: 53.3M
   Disk usage: 16B
   Time elapsed: 0:00:04.2


TEST END: genomicconsensus-2.3.3-py27_0.tar.bz2
--dirty flag and --keep-old-work not specified. Removing build/test folder after successful build/test.


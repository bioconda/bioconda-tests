#! /usr/bin/env bash
set -xeuo pipefail

timeout_mamba_create=3m
timeout_mambabuild=15m


solve() {
    local package
    package="${1}"
    shift

    status=0
    CONDARC="${HOME}/solve_only_condarc" \
        timeout "${timeout_mamba_create}" \
        mamba create \
            --dry-run \
            --name=solve \
            --json \
            "${package}" \
        > "${output_dir}/mamba-create.log.json" \
        || status=$?
    case "${status}" in
        0 ) printf success ;;
        124 ) printf timeout ;;
        * ) printf failed ;;
    esac > "${output_dir}/mamba-create.status"
    return "${status}"
}


test_build() {
    local package
    package="${1}"
    shift

    output_dir="${output_root}/${package}"
    url="$(
    python -c '
import json, re, sys

fetch_action = json.load(sys.stdin)["actions"]["FETCH"]
archive_url = [p["url"] for p in fetch_action if p["name"] == sys.argv[1]][0]
url = re.sub(
    "https://github.com/bioconda/bioconda-repodata-archive/raw/.*/repodata/https=3A=2F/",
    "https://",
    archive_url,
)
print(url)
' \
        "${package}" \
        < "${output_dir}/mamba-create.log.json"
    )"
    curl \
        --location \
        --silent \
        --remote-name \
        "${url}"
    status=0
    CONDA_QUIET=1 \
        timeout "${timeout_mambabuild}" \
            conda-mambabuild --test "${url##*/}" \
            > "${output_dir}/mambabuild-test.log.json" \
        || status=$?
    case "${status}" in
        0 ) printf success ;;
        124 ) printf timeout ;;
        * ) printf failed ;;
    esac > "${output_dir}/mambabuild-test.status"
}


test_package() {
    local package
    package="${1}"
    shift

    output_dir="${output_root}/${package}"
    mkdir -p "${output_dir}"

    if solve "${package}" ; then
        test_build "${package}"
    fi
}


main() {
    workspace="${1}"
    shift
    main_subdir="${1}"
    shift

    output_root="${workspace}/${main_subdir}"
    mkdir -p "${output_root}"

    for subdir in "${main_subdir}" "${@}" ; do
        subdir_list="${workspace}/selected_packages/${subdir}.txt"
        if [ -f "${subdir_list}" ] ; then
            while read package ; do
              test_package "${package}"
            done < "${subdir_list}"
        fi
    done

}

main "${@}"
